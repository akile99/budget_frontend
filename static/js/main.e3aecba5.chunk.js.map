{"version":3,"sources":["redux/user/user.selector.js","redux/account/account.selector.js","components/account-info/account-info.styles.jsx","components/current-total/current-total.component.jsx","components/current-pending/current-pending.component.jsx","components/account-info/account-info.component.jsx","components/dropdown-menu/dropdown-menu.component.jsx","components/navigation/navigation.styles.jsx","components/navigation/navigation.component.jsx","redux/root-action.js","redux/transaction/transaction.selector.js","components/scroll/scroll.component.jsx","hooks/global.js","redux/transaction/transaction.types.js","redux/transaction/transaction.action.js","redux/account/account.types.js","redux/account/account.action.js","components/transaction/transaction.styles.jsx","components/transaction/transaction.component.jsx","components/transaction-list/transaction-list.styles.jsx","components/transaction-list/transaction-list.component.jsx","redux/category/category.selector.js","components/edit-transaction-dropdown/edit-transaction-dropdown.styles.jsx","components/edit-transaction-dropdown/edit-transaction-dropdown.component.jsx","components/account/account.styles.jsx","components/account/account.component.jsx","components/account-list/account-list.component.jsx","pages/account-page/account-page.component.jsx","components/sidebar/sidebar.component.jsx","redux/category/category.types.js","components/insert-transaction/insert-transaction.styles.jsx","components/insert-transaction/insert-transaction.component.jsx","redux/category/category.action.js","pages/transactions-page/transactions-page.styles.jsx","pages/transactions-page/transactions-page.component.jsx","redux/bills/bills.types.js","redux/bills/bills.actions.js","redux/bills/bills.selector.js","components/bill-dropdown/bill-dropdown.styles.jsx","components/bill-dropdown/bill-dropdown.component.jsx","components/edit-bill-dropdown/edit-bill-dropdown.styles.jsx","components/edit-bill-dropdown/edit-bill-dropdown.component.jsx","components/bill/bill.component.jsx","components/bills/bills.component.jsx","pages/bills-page/billspage.component.jsx","pages/homepage/homepage.component.jsx","redux/user/user.types.js","redux/user/user.action.js","components/custom-button/custom-button.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx","App.js","redux/user/user.sagas.js","redux/root-saga.js","redux/account/account.utils.js","redux/account/account.reducer.js","redux/user/user.reducer.js","redux/transaction/transaction.utils.js","redux/transaction/transaction.reducer.js","redux/category/category.reducer.js","redux/bills/bills.utils.js","redux/bills/bills.reducer.js","redux/root-reducer.js","redux/store.js","components/loading/loading.component.jsx","index.js"],"names":["selectCurrentUser","createSelector","state","user","currentUser","selectAccounts","accounts","selectAccountList","accountList","selectCurrentAccount","currentAccount","selectAccountTotal","map","account","account_id","total","selectAccountPending","pending","UserContainer","styled","tr","UserHeading","th","UserInfo","td","UserTable","table","CurrentTotal","useSelector","CurrentPending","AccountInfo","firstname","DropDownMenu","history","useHistory","main_page","className","Dropdown","Toggle","variant","id","icon","faBars","size","Menu","Item","onClick","push","NavigationContainer","nav","NavigationInfo","div","NavigationSignOut","mapStateToProps","createStructuredSelector","connect","dispatch","logOutUser","type","replace","selectTransactions","transactions","selectTransactionList","transactionList","selectCurrentTransaction","currentTransaction","selectEditTransactionHidden","hideTransactionDropdown","Transactions","hideEditTransactionDropdown","Scroll","props","children","globalVars","insertTransaction","transaction","fetch","method","headers","body","JSON","stringify","date","vendor","category_id","status","amount","then","response","json","catch","console","log","fetchUpdateTransaction","transaction_id","updateTransactionStatusAPI","formatDate","d","Date","getUTCMonth","getUTCDate","getUTCFullYear","fetchUpdateBill","bill","bill_id","bill_name","bill_website","due_day","next_due_date","TransactionActionTypes","SET_TRANSACTIONS","ADD_TRANSACTION","ADD_EXPENSE","UPDATE_STATUS","SET_CURRENT_TRANSACTION","TOGGLE_TRANSACTION_HIDDEN","TOGGLE_EDIT_TRANSACTION_HIDDEN","UPDATE_TRANSACTION","addIncome","payload","setCurrentTransaction","toggleEditTransactionDropdownHidden","AccountActionTypes","ADD_ACCOUNT","SET_ACCOUNTS","REMOVE_ACCOUNTS","SET_CURRENT_ACCOUNT","SET_ACCOUNT_BALANCE","UPDATE_ACCOUNT_BALANCE","UPDATE_ACCOUNT_TOTAL","UPDATE_ACCOUNT_PENDING","updateAccountTotal","newBalance","updateAccountPending","TransactionElement","css","TransactionContainer","DateContainer","VendorContainer","StatusContainer","Dollar","AmountContainer","CategoryContainer","EditContainer","Transaction","current_transaction","useDispatch","label","useState","toISOString","slice","setTransaction","onStatusChange","updateTransactionStatus","year","TransactionListElement","TransactionTable","TransactionListContainer","TransactionList","useEffect","t","setDate","getDate","from_date","split","to_date","data","e","selectCategories","categories","categoryList","TransactionDropDownContainer","Selector","Select","TransactionEditDropDown","handleChange","event","target","value","name","onChange","placeholder","options","updateSelectedTransaction","AccountContainer","AccountName","Name","p","Total","Account","account_name","account_type","setCurrentAccount","AccountList","refresh","setRefresh","user_id","AccountPage","SideBar","CategoryActionTypes","SET_CATEGORIES","Input","InsertTransactionContainer","InsertFormContainer","form","InputContainer","input","VendorInput","CustomButton","button","InsertTransaction","expenseButton","setExpenseButton","uuidv4","category","addToPendingOrTotal","error","onSubmit","preventDefault","required","defaultValue","alert","TransactionPageContainer","TransactionPage","BillActionTypes","ADD_BILL","SET_BILLS","SET_CURRENT_BILL","TOGGLE_BILL_HIDDEN","TOGGLE_EDIT_BILL_HIDDEN","PAY_BILL","UPDATE_BILL","setCurrentBill","toggleBillDropdownHidden","toggleEditBillDropdownHidden","selectBills","bills","selectBillList","billList","selectCurrentBill","currentBill","selectBillHidden","hideBillDropdown","selectEditBillHidden","hideEditBillDropdown","BillDropDownContainer","BillDropDown","next_month","setMonth","getMonth","Number","setBill","forEach","handleClose","paySelectedBill","BillEditDropDown","updateSelectedBill","Bill","formatedDay","day","getDay","goToWebSite","window","open","Bills","setBills","BillsPage","HomePage","exact","path","component","UserActionTypes","SET_CURRENT_USER","LOG_OUT_USER","SIGN_IN_SUCCESS","SIGN_IN_START","SIGN_IN_FAILURE","signInSuccess","isGoogleSignIn","inverted","otherProps","SignIn","email","password","userCredentials","setCredentials","setCurrentUser","htmlFor","Register","onFirstNameChange","setState","onLastNameChange","lastname","onEmailChange","onPasswordChange","onSubmitRegister","onRegisterChange","this","React","Component","SignInOrSignUpPage","App","fetchUser","signInWithEmail","onSignInStart","userSagas","req","put","takeLatest","all","call","rootSaga","balance","accountToChange","find","parseFloat","toFixed","INITIAL_STATE","accountReducer","action","userReducer","addTransactionToList","transactionToAdd","updateStatus","updateTransaction","transactionToUpdate","transactionReducer","categoryReducer","addBillToUpcommingBills","billToAdd","payBill","billToPay","updateBill","billToUpdate","billReducer","updateToBill","persistConfig","key","storage","whitelist","appReducer","combineReducers","persistReducer","undefined","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","rootReducer","applyMiddleware","run","persistor","persistStore","Loading","ReactDOM","render","loading","document","getElementById"],"mappings":"meAIaA,GAAoBC,aAC/B,CAHiB,SAACC,GAAD,OAAWA,EAAMC,IAAjB,IAIjB,SAACA,GAAD,OAAUA,EAAKC,WAAf,ICJWC,GAAiB,SAACH,GAAD,OAAWA,EAAMI,QAAjB,EAEjBC,GAAoBN,aAC/B,CAACI,KACD,SAACC,GAAD,OAAcA,EAASE,WAAvB,IAGWC,GAAuBR,aAClC,CAACI,KACD,SAACC,GAAD,OAAcA,EAASI,cAAvB,IAGWC,GAAqBV,aAAe,CAACI,KAAiB,SAACC,GAAD,OACjEA,EAASE,YAAYI,KAAI,SAACC,GAAD,OACvBA,EAAQC,aAAeR,EAASI,eAAiBG,EAAQE,MAAQ,IAD1C,GADwC,IAMtDC,GAAuBf,aAAe,CAACI,KAAiB,SAACC,GAAD,OACnEA,EAASE,YAAYI,KAAI,SAACC,GAAD,OACvBA,EAAQC,aAAeR,EAASI,eAAiBG,EAAQI,QAAU,IAD5C,GAD0C,I,gBClBxDC,GAAgBC,KAAOC,GAAV,+EAKbC,GAAcF,KAAOG,GAAV,yGAMXC,GAAWJ,KAAOK,GAAV,0EAKRC,GAAYN,KAAOO,MAAV,2D,QCRPC,GALM,WACnB,IAAMZ,EAAQa,YAAYjB,IAC1B,OAAOI,EAAQ,+BAAMA,IAAe,IACrC,ECEcc,GALQ,WACrB,IAAMZ,EAAUW,YAAYZ,IAC5B,OAAOC,EAAU,+BAAMA,IAAiB,IACzC,ECoBca,GAnBK,WAClB,IAAM1B,EAAcwB,YAAY5B,IAEhC,OACE,gBAACyB,GAAD,WACI,gBAACP,GAAD,WACI,eAACG,GAAD,oBACA,eAACA,GAAD,wBACF,eAACA,GAAD,sBAEJ,gBAACH,GAAD,WACM,eAACK,GAAD,UAAU,eAAC,GAAD,MACV,eAACA,GAAD,UAAU,eAAC,GAAD,MACd,eAACA,GAAD,UAAWnB,EAAY2B,iBAI9B,E,2BCUcC,I,MA3BM,WACnB,IAAMC,EAAUC,eACVC,EAAY,mBAElB,OACE,sBAAKC,UAAU,OAAf,SACE,gBAACC,GAAA,EAAD,WACE,eAACA,GAAA,EAASC,OAAV,CAAiBC,QAAQ,QAAQC,GAAG,iBAApC,SACE,eAAC,KAAD,CAAiBC,KAAMC,KAAQC,KAAK,SAEtC,eAACN,GAAA,EAASO,KAAV,UACE,iCACE,eAACP,GAAA,EAASQ,KAAV,CACEC,QAAS,kBAAMb,EAAQc,KAAR,UAAgBZ,EAAhB,iBAAN,EADX,0BAKA,eAACE,GAAA,EAASQ,KAAV,CAAeC,QAAS,kBAAMb,EAAQc,KAAR,UAAgBZ,EAAhB,UAAN,EAAxB,4BAQX,GChCYa,GAAsB7B,KAAO8B,IAAV,4JAQnBC,GAAiB/B,KAAOgC,IAAV,+FAMdC,GAAoBjC,KAAOgC,IAAV,wKCyBxBE,GAAkBC,aAAyB,CAC/ClD,YAAaJ,GACbU,eAAgBD,KAOH8C,eAAQF,IAJI,SAACG,GAAD,MAAe,CACxCC,WAAY,kBAAMD,EC/Ca,CAC/BE,KAAM,eD8CM,EADa,GAIZH,EAhCI,SAAC,GAAoB,IAAlBE,EAAiB,EAAjBA,WACdxB,EAAUC,eAEhB,OACE,gBAACc,GAAD,WACE,+BACE,eAAC,GAAD,MAEF,gBAACE,GAAD,WACE,eAAC,GAAD,IACA,eAACE,GAAD,CACEN,QAAS,WACPb,EAAQ0B,QAAR,oBACAF,GACD,EAJH,2BAWP,IErCYG,GAAqB,SAAC1D,GAAD,OAAWA,EAAM2D,YAAjB,EAErBC,GAAwB7D,aACnC,CAAC2D,KACD,SAACC,GAAD,OAAkBA,EAAaE,eAA/B,IAGWC,GAA2B/D,aACtC,CAAC2D,KACD,SAACC,GAAD,OAAkBA,EAAaI,kBAA/B,IAQWC,IAL0BjE,aACrC,CAAC2D,KACD,SAACC,GAAD,OAAkBA,EAAaM,uBAA/B,IAGyClE,aACzC,CAAC2D,KACD,SAACQ,GAAD,OAAkBA,EAAaC,2BAA/B,KCTaC,I,MARA,SAACC,GACd,OACE,sBAAKnC,UAAU,SAAf,SACGmC,EAAMC,UADoBD,EAAMC,SAItC,G,kBCVYC,GACL,8CAIKC,GAAiB,mDAAG,WAAOC,GAAP,4FACzBC,MAAMH,GAAkB,SAAU,CACtCI,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,KAAMP,EAAYO,KAClBC,OAAQR,EAAYQ,OACpBC,YAAaT,EAAYS,YACzBC,OAAQV,EAAYU,OACpBC,OAAQX,EAAYW,OACpBxE,WAAY6D,EAAY7D,eAGzByE,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLC,MAAMC,QAAQC,KAdc,2CAAH,sDAiBjBC,GAAsB,mDAAG,WAAOlB,GAAP,4FAC9BC,MAAMH,GAAkB,SAAU,CACtCI,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,KAAMP,EAAYO,KAClBC,OAAQR,EAAYQ,OACpBC,YAAaT,EAAYS,YACzBC,OAAQV,EAAYU,OACpBC,OAAQX,EAAYW,OACpBQ,eAAgBnB,EAAYmB,mBAG7BP,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLC,MAAMC,QAAQC,KAdmB,2CAAH,sDAiBtBG,GAA0B,mDAAG,WAAOpB,GAAP,4FAClCC,MAAMH,GAAkB,eAAgB,CAC5CI,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBa,eAAgBnB,EAAYmB,mBAG7BP,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLC,MAAMC,QAAQC,KATuB,2CAAH,sDAY1BI,GAAa,SAACd,GACzB,IAAMe,EAAI,IAAIC,KAAKhB,GAInB,OAHce,EAAEE,cAAgB,EAGjB,IAFHF,EAAEG,aAEa,IADdH,EAAEI,gBAEhB,EAEYC,GAAe,mDAAG,WAAOC,GAAP,4FACvB3B,MAAMH,GAAkB,cAAe,CAC3CI,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBuB,QAASD,EAAKC,QACdC,UAAWF,EAAKpB,OAChBG,QAAuB,EAAfiB,EAAKjB,OACboB,aAAcH,EAAKG,aACnBC,QAASJ,EAAKK,kBAGfrB,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLC,MAAMC,QAAQC,KAbY,2CAAH,sDChDbiB,GAXgB,CAC7BC,iBAAkB,mBAClBC,gBAAiB,kBACjBC,YAAa,cACbC,cAAe,gBACfC,wBAAyB,0BACzBC,0BAA2B,4BAC3BC,+BAAgC,iCAChCC,mBAAoB,sBCSTC,GAAY,SAAC3C,GAAD,MAAkB,CACzCjB,KAAMmD,GAAuBG,YAC7BO,QAAS5C,EAFc,EAUZ6C,GAAwB,SAAC7C,GAAD,MAAkB,CACrDjB,KAAMmD,GAAuBK,wBAC7BK,QAAS5C,EAF0B,EAcxB8C,GAAsC,iBAAO,CACxD/D,KAAMmD,GAAuBO,+BADoB,E,gBC9BpCM,GAXY,CACzBC,YAAa,cACbC,aAAc,eACdC,gBAAiB,kBACjBC,oBAAqB,sBACrBC,oBAAqB,sBACrBC,uBAAwB,yBACxBC,qBAAsB,uBACtBC,uBAAwB,0BCcbC,GAAqB,SAACC,GAAD,MAAiB,CACjD1E,KAAMgE,GAAmBO,qBACzBV,QAASa,EAFuB,EAKrBC,GAAuB,SAACD,GAAD,MAAiB,CACnD1E,KAAMgE,GAAmBQ,uBACzBX,QAASa,EAFyB,ECzB9BE,GAAqBC,aAAH,wHAMXC,GAAuBrH,KAAOC,GAAV,kHAOpBqH,GAAgBtH,KAAOK,GAAV,mHAKtB8G,IAGSI,GAAkBvH,KAAOK,GAAV,4IACxB8G,IAQSK,GAAkBxH,KAAOK,GAAV,0EAGxB8G,IAGSM,GAASzH,KAAOK,GAAV,oDAINqH,GAAkB1H,KAAOK,GAAV,+FAIxB8G,IAGSQ,GAAoB3H,KAAOK,GAAV,mEAG1B8G,IAGSS,GAAgB5H,KAAOK,GAAV,0EAGtB8G,ICQWU,GAjDK,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBACfzF,EAAW0F,cACTpD,EAAqEmD,EAArEnD,eAAgBZ,EAAqD+D,EAArD/D,KAAMC,EAA+C8D,EAA/C9D,OAAQG,EAAuC2D,EAAvC3D,OAAQD,EAA+B4D,EAA/B5D,OAAQ8D,EAAuBF,EAAvBE,MAAO/D,EAAgB6D,EAAhB7D,YAC7D,EAAsCgE,mBAAS,CAC7ClE,KAAM,IAAIgB,KAAKhB,GAAMmE,cAAcC,MAAM,EAAG,IAC5CxD,eAAgBA,EAChBX,OAAQA,EACRG,OAAQA,EACRD,OAAQA,EACR8D,MAAOA,EACP/D,YAAaA,IAPf,oBAAOT,EAAP,KAAoB4E,EAApB,KAkBA,IAAMC,EAAiB,WACrBD,EAAe,6BAAK5E,GAAN,IAAmBU,QAASV,EAAYU,UAClDV,EAAYU,OACd7B,EAAS2E,IAAoB7C,IAE7B9B,EAAS2E,GAAmB7C,IAE9B9B,EJvBmC,SAACmB,GAAD,MAAkB,CACvDjB,KAAMmD,GAAuBI,cAC7BM,QAAS5C,EAF4B,CIuB1B8E,CAAwB9E,GAClC,EAOD,OACE,gBAAC6D,GAAD,WACE,eAACC,GAAD,UAzBJ,SAAoBvD,GAClB,IAAMe,EAAI,IAAIC,KAAKhB,GACbwE,EAAOzD,EAAEI,iBAGf,OAFcJ,EAAEE,cAAgB,EAEjB,IADHF,EAAEG,aACa,IAAMsD,CAClC,CAmBmB1D,CAAWd,KAC3B,eAACwD,GAAD,UAAkBvD,IAClB,eAACyD,GAAD,gBACA,eAACC,GAAD,UAAkBvD,IAClB,gBAACqD,GAAD,CAAiB7F,QAAS,WAAQ0G,GAAkB,EAApD,UAAyD7E,EAAYU,OAAS,UAAY,UAA1F,OACA,eAACyD,GAAD,UAAoBK,IACpB,eAACJ,GAAD,CAAejG,QAAS,WAZ1BU,EAASgE,GAAsB7C,IAC/BnB,EAASiE,KAW8C,EAArD,oBAPyB3B,EAU9B,EC9DK6D,GAAyBpB,aAAH,iKAQfqB,GAAmBzI,KAAOO,MAAV,2EAKhBmI,GAA2B1I,KAAOC,GAAV,kGAMxBqH,GAAgBtH,KAAOG,GAAV,mHAKtBqI,IAGSjB,GAAkBvH,KAAOG,GAAV,4IACxBqI,IAQShB,GAAkBxH,KAAOG,GAAV,0EAGxBqI,IAGSf,GAASzH,KAAOG,GAAV,oDAINuH,GAAkB1H,KAAOG,GAAV,+FAIxBqI,IAGSb,GAAoB3H,KAAOG,GAAV,mEAG1BqI,ICiBWG,GAtDS,WACtB,IAAM/F,EAAkBnC,YAAYkC,IAC9BpD,EAAiBkB,YAAYnB,IAC7B+C,EAAW0F,cA8BjB,OA5BAa,qBAAU,WACR,IAAM9D,EAAI,IAAIC,KACR8D,EAAI,IAAI9D,KACdD,EAAEgE,QAAQhE,EAAEiE,UAAY,IACxBF,EAAEC,QAAQD,EAAEE,UAAY,IACxB,IAAMC,EAAYlE,EAAEoD,cAAce,MAAM,KAAK,GACvCC,EAAUL,EAAEX,cAAce,MAAM,KAAK,GAC3C,GAAK1J,EAGL,IACEkE,MAAM,GAAD,OAAIH,GAAJ,gBAAmC,CACtCI,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBnE,WAAYJ,EACZyJ,UAAWA,EACXE,QAASA,MAGV9E,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLF,MAAK,SAAC+E,GACL9G,EN9CwC,CAChDE,KAAMmD,GAAuBC,iBAC7BS,QM4CiC+C,GAC1B,GAGJ,CAFC,MAAOC,GACP5E,QAAQC,IAAI2E,EACb,CACF,GAAE,CAAC7J,EAAgB8C,IAElB,gBAACoG,GAAD,WACE,gBAACC,GAAD,WACE,eAAC,GAAD,mBACA,eAAC,GAAD,qBACA,eAAC,GAAD,uBACA,eAAC,GAAD,qBACA,eAAC,GAAD,qBACA,eAAC,GAAD,0BAGD9F,EAAgBnD,KAAI,SAAC+D,GAAD,OACnB,eAAC,GAAD,CAEEsE,oBAAqBtE,GADhBA,EAAYmB,eAFA,MAQ1B,E,SCvEY0E,GAAmB,SAACtK,GAAD,OAAWA,EAAMuK,UAAjB,E,IAEKxK,aACnC,CAACuK,KACD,SAACC,GAAD,OAAgBA,EAAWC,YAA3B,I,OCHWC,GAA+BxJ,KAAOgC,IAAV,4PAqB5ByH,IAPsBzJ,KAAOgC,IAAV,iHAORhC,aAAO0J,KAAP1J,CAAH,sFC6EN2J,GA5FiB,WAC9B,IAAM7G,EAAqBrC,YAAYoC,IAC/B0G,EAAiB9I,YAAY4I,IAA7BE,aACFlH,EAAW0F,cACjB,EAAsCE,mBAAS,CAC7CtD,eAAgB7B,EAAqBA,EAAmB6B,eAAiB,GACzEZ,KAAMjB,EAAqBA,EAAmBiB,KAAO,GACrDC,OAAQlB,EAAqBA,EAAmBkB,OAAS,GACzDgE,MAAOlF,EAAqBA,EAAmBkF,MAAQ,GACvD/D,YAAanB,EAAqBA,EAAmBmB,YAAc,GACnEC,OAAQpB,EAAqBA,EAAmBoB,OAAS,GACzDC,OAAQrB,EAAqBA,EAAmBqB,OAAS,KAP3D,oBAAOX,EAAP,KAAoB4E,EAApB,KASQzD,EAAiDnB,EAAjDmB,eAAgBX,EAAiCR,EAAjCQ,OAAQG,EAAyBX,EAAzBW,OAAQJ,EAAiBP,EAAjBO,KAAMG,EAAWV,EAAXU,OAExC0F,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAEf5B,EAAe,6BAAK5E,GAAN,mBAAoBwG,EAAOD,IAC1C,EAoBD,OACE,gBAACP,GAAD,CAA8BnI,GAAKsD,EAAnC,UACE,iCACE,kDACA,wBACEpC,KAAK,OACLlB,GAAG,OACH2I,KAAK,OACLD,MAAOhG,EACPkG,SAAUL,OAGd,iCACE,wCACA,wBACErH,KAAK,OACLlB,GAAG,SACH2I,KAAK,SACLD,MAAO/F,EACPiG,SAAUL,OAGd,iCACE,wCACA,wBACErH,KAAK,SACLlB,GAAG,SACH2I,KAAK,SACLD,MAAQ7F,EAAS,UAAY,UAC7BvC,QA3Ce,WACrByG,EAAe,6BAAK5E,GAAN,IAAmBU,QAASA,IAC3C,OA4CG,iCACE,yCACA,wBACE3B,KAAK,OACLlB,GAAG,SACH2I,KAAK,SACLD,MAAO5F,EACP8F,SAAUL,OAGd,eAACH,GAAD,CACIS,YAAe1G,EAAYwE,MAC3BiC,SA9DiB,SAACJ,GACxBzB,EAAe,6BAAK5E,GAAN,IAAmBS,YAAa4F,EAAME,QACrD,EA6DOI,QAASZ,IAEb,yBAAQ5H,QAzDO,WACjBU,ETPqC,SAACmB,GAAD,MAAkB,CACzDjB,KAAMmD,GAAuBQ,mBAC7BE,QAAS5C,EAF8B,CSO5B4G,CAA0B5G,IACnCnB,EAASiE,KACV,EAsDG,oBACA,yBAAQ3E,QArDQ,WAClBU,EAASiE,MACTjE,EAASgE,GAAsB,MAChC,EAkDG,sBAGL,ECjGYgE,GAAmBrK,KAAOgC,IAAV,6MAWhBsI,GAActK,KAAOgC,IAAV,mJAQXuI,GAAOvK,KAAOwK,EAAV,yFAMJC,GAAQzK,KAAOgC,IAAV,0KCAH0I,GAnBC,SAAC,GAAiB,IAAfhL,EAAc,EAAdA,QACTC,EAAkDD,EAAlDC,WAAYgL,EAAsCjL,EAAtCiL,aAAcC,EAAwBlL,EAAxBkL,aAAchL,EAAUF,EAAVE,MAC1CyC,EAAW0F,cAEjB,OACE,gBAACsC,GAAD,CACE1I,QAAS,WACPU,ETRyB,SAAC3C,GAAD,MAAc,CAC7C6C,KAAMgE,GAAmBI,oBACzBP,QAAS1G,EAFsB,CSQhBmL,CAAkBlL,GAC5B,EAHH,UAKE,gBAAC2K,GAAD,WACE,eAACC,GAAD,UAAOI,IACP,eAACJ,GAAD,UAAOK,OAET,eAACH,GAAD,UAAQ7K,EAAK,YAAQA,GAAU,aAGpC,ECqBckL,I,OAjCK,WAClB,IAAMzL,EAAcoB,YAAYrB,IAC1BH,EAAcwB,YAAY5B,IAE1BwD,EAAW0F,cACjB,EAA8BE,oBAAS,GAAvC,oBAAO8C,EAAP,KAAgBC,EAAhB,KAgBA,OAdApC,qBAAU,WACRnF,MAAM,GAAD,OAAIH,GAAJ,YAA+B,CAClCI,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBmH,QAAShM,EAAYgM,YAGtB7G,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLF,MAAK,SAAC+E,GACL9G,EV5BkC,CACxCE,KAAMgE,GAAmBE,aACzBL,QU0B2B+C,GACtB,GACJ,GAAE,CAAClK,EAAYgM,QAAS5I,EAAU0I,IAGjC,iCACE,oBAAGpJ,QAAS,WACVqJ,GAAYD,EACb,EAFD,qBAGC1L,EAAYI,KAAI,SAACC,GAAD,OACf,eAAC,GAAD,CAAkCA,QAASA,GAA7BA,EAAQC,WADP,MAKtB,GC/BcuL,GATK,kBAClB,iCACE,sBAAKjK,UAAU,sBAAf,SACE,qBAAIA,UAAU,UAAd,yBAEF,eAAC,GAAD,MALgB,ECULkK,I,OARC,WACd,OACE,sBAAKlK,UAAU,WAAf,SACE,eAAC,GAAD,KAGL,G,UCRcmK,GAJa,CAC1BC,eAAgB,kBCEZC,GAAQlE,aAAH,wEAKEmE,GAA6BvL,KAAOgC,IAAV,0EAK1BwJ,GAAsBxL,KAAOyL,KAAV,kJAQnBC,GAAiB1L,KAAO2L,MAAV,oDACvBL,IAKSM,GAAc5L,KAAO2L,MAAV,kDACpBL,IAIS7B,GAAWzJ,aAAO0J,KAAP1J,CAAH,kDACjBsL,IAISO,GAAe7L,KAAO8L,OAAV,yeAiBrBR,ICoGWS,GApIW,WACxB,IAAMxM,EAAiBkB,YAAYnB,IAC3BiK,EAAiB9I,YAAY4I,IAA7BE,aACFlH,EAAW0F,cACjB,EAA0CE,oBAAS,GAAnD,oBAAO+D,EAAP,KAAsBC,EAAtB,KACA,EAAsChE,mBAAS,CAC7ClE,MAAM,IAAIgB,MAAOmD,cAAcC,MAAM,EAAG,IACxCxD,eAAgBuH,eAChBlI,OAAQ,GACRG,OAAQ,GACRD,QAAQ,EACRiI,SAAU,CAAC,EACXxM,WAAYJ,IAPd,oBAAOiE,EAAP,KAAoB4E,EAApB,KASQrE,EAA2CP,EAA3CO,KAAMC,EAAqCR,EAArCQ,OAAQG,EAA6BX,EAA7BW,OAAQD,EAAqBV,EAArBU,OAAQiI,EAAa3I,EAAb2I,SAEhCvC,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAEf5B,EAAe,6BAAK5E,GAAN,mBAAoBwG,EAAOD,IAC1C,EA6BD,SAASqC,IACHlI,GACF7B,EAAS2E,GAAmB7C,IAC5B9B,EAAS6E,GAAqB/C,KAE9B9B,EAAS6E,GAAqB/C,GAEjC,CAwBD,OAlBAyE,qBAAU,WACR,IACEnF,MAAMH,GAAkB,YACrBc,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLF,MAAK,SAAC+E,GACL9G,ECvFoC,CAC5CE,KAAM6I,GAAoBC,eAC1BjF,QDqF+B+C,GACxB,GAGJ,CAFC,MAAOkD,GACP7H,QAAQ6H,MAAMA,EACf,CACGL,IACFI,IAdF/J,EAAS8D,GAAU3C,IACnB4E,EAAe,6BAAK5E,GAAN,IAAmBQ,OAAQ,GAAIG,OAAQ,KAenD8H,GAAiB,GAGpB,GAAE,CAAC5J,EAAU2J,IAGZ,eAACT,GAAD,UACE,gBAACC,GAAD,CAAqBc,SAAU,SAAClD,GAAD,OAAOA,EAAEmD,gBAAT,EAA/B,UACE,eAACb,GAAD,CACEnJ,KAAK,OACLlB,GAAG,OACH2I,KAAK,OACLD,MAAOhG,EACPkG,SAAUL,IAEZ,eAACgC,GAAD,CACErJ,KAAK,OACL2H,YAAY,SACZ7I,GAAG,SACH2I,KAAK,SACLD,MAAO/F,EACPiG,SAAUL,EACV4C,UAAQ,IAEV,eAACd,GAAD,CACEnJ,KAAK,SACL2H,YAAY,SACZ7I,GAAG,SACH2I,KAAK,SACLD,MAAO5F,EACP8F,SAAUL,IAEZ,eAAC,GAAD,CAAcvI,GAAG,SAASM,QArFT,WACrByG,EAAe,6BAAK5E,GAAN,IAAmBU,QAASA,IAC3C,EAmFK,SACGA,EAAS,UAAY,YAExB,eAAC,GAAD,CACEuI,aAAclD,EAAa,GAC3BU,SAtFiB,SAACJ,GACxBzB,EAAe,6BAAK5E,GAAN,IAAmB2I,SAAUtC,IAC5C,EAqFOM,QAASZ,IAEX,eAAC,GAAD,CACElI,GAAG,uBACHM,QAAS,WACPyG,EAAe,6BAAK5E,GAAN,IAAmBW,QAASA,KAvF7CH,GAAWG,GAAWgI,GAGzB/D,EAAe,6BAAK5E,GAAN,IAAmBW,QAASA,KAC1C8H,GAAiB,IAHjBS,MAAM,4BAwFD,EALH,qBASA,eAAC,GAAD,CAAcrL,GAAG,uBAAuBM,QArFlB,WACrBqC,GAAWG,GAAWgI,GAGzBC,IACA/J,EAAS8D,GAAU3C,IACnB4E,EAAe,6BAAK5E,GAAN,IAAmBQ,OAAQ,GAAIG,OAAQ,MAJrDuI,MAAM,4BAMT,EA6EK,wBAMP,EEtJYC,GAA2B3M,KAAOgC,IAAV,sIC0BtB4K,GAfS,WACtB,IAAM1J,EAA8BzC,YAAYsC,IAEhD,OACE,gBAAC4J,GAAD,WACE,eAAC,GAAD,IACA,gBAAC,GAAD,WACE,eAAC,GAAD,IACA,eAAC,GAAD,IACCzJ,EAA8B,KAAO,eAAC,GAAD,SAI7C,EChBc2J,GAVS,CACtBC,SAAU,WACVC,UAAW,YACXC,iBAAkB,mBAClBC,mBAAoB,qBACpBC,wBAAyB,0BACzBC,SAAU,WACVC,YAAa,eCAFC,GAAiB,SAACjI,GAAD,MAAW,CACvC7C,KAAMsK,GAAgBG,iBACtB5G,QAAShB,EAFmB,EAKjBkI,GAA2B,iBAAO,CAC7C/K,KAAMsK,GAAgBI,mBADgB,EAI3BM,GAA+B,iBAAO,CACjDhL,KAAMsK,GAAgBK,wBADoB,ECd/BM,GAAc,SAACzO,GAAD,OAAWA,EAAM0O,KAAjB,EAEdC,GAAiB5O,aAC5B,CAAC0O,KACD,SAACC,GAAD,OAAWA,EAAME,QAAjB,IAGWC,GAAoB9O,aAC/B,CAAC0O,KACD,SAACC,GAAD,OAAWA,EAAMI,WAAjB,IAGWC,GAAmBhP,aAC9B,CAAC0O,KACD,SAACC,GAAD,OAAWA,EAAMM,gBAAjB,IAGWC,GAAuBlP,aAClC,CAAC0O,KACD,SAACC,GAAD,OAAWA,EAAMQ,oBAAjB,ICnBWC,GAAwBlO,KAAOgC,IAAV,4PCoHnBmM,IDtGanO,KAAOgC,IAAV,iHCFJ,WACnB,IAAM6L,EAAcpN,YAAYmN,IAC1BzO,EAAWsB,YAAYrB,IACvBiD,EAAW0F,cACXjD,EAAI,IAAIC,KAAK8I,EAAYrI,SACzB4I,EAAatJ,EAAEuJ,SAASvJ,EAAEwJ,WAAa,GAC7C,EAAwBrG,mBAAS,CAC/B5C,QAASwI,EAAYxI,QACrBtB,KAAM,IAAIgB,KAAK8I,EAAYrI,SAAS0C,cAAcC,MAAM,EAAG,IAC3DnE,OAAQ6J,EAAYvI,UACpBrB,YAAa4J,EAAY5J,YACzBC,OAAQ,UACRC,QAAgE,EAAxDoK,OAAOV,EAAY1J,OAAO3B,QAAQ,aAAc,KACxD7C,WAAY,GACZ8F,cAAe,IAAIV,KAAKqJ,GAAYlG,cAAcC,MAAM,EAAG,IAC3D5C,aAAcsI,EAAYtI,eAT5B,oBAAOH,EAAP,KAAaoJ,EAAb,KAWQxK,EAAwCoB,EAAxCpB,OAAQG,EAAgCiB,EAAhCjB,OAAQJ,EAAwBqB,EAAxBrB,KAAM0B,EAAkBL,EAAlBK,cAE9BtG,EAASsP,SACP,SAACrF,GAAD,OAEGA,EAAEW,MAAQX,EAAEzJ,WACZyJ,EAAEpB,MAAQoB,EAAEuB,aAAe,IAAMvB,EAAEwB,YAHtC,IAOF,IAAMhB,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAEfwE,EAAQ,6BAAKpJ,GAAN,mBAAa4E,EAAOD,IAC5B,EAYK2E,EAAc,WAClBrM,EAASiL,MACTjL,EAASgL,GAAe,MACzB,EAED,OACE,gBAACa,GAAD,CAAuB7M,GAAIwM,EAAYxI,QAAvC,UACE,iCACE,sCACA,wBACE9C,KAAK,OACLlB,GAAG,OACH2I,KAAK,OACLD,MAAOhG,EACPkG,SAAUL,OAGd,iCACE,wCACA,wBACErH,KAAK,OACLlB,GAAG,SACH2I,KAAK,SACLD,MAAO/F,EACPiG,SAAUL,OAGd,iCACE,yCACA,eAAC,KAAD,CACE6C,aAActN,EAAS,GACvBgL,QAAShL,EACT8K,SA1CoB,SAACJ,GAC3B2E,EAAQ,6BAAKpJ,GAAN,IAAYzF,WAAYkK,EAAMlK,aACtC,OA2CG,iCACE,yCACA,wBACE4C,KAAK,OACLlB,GAAG,SACH2I,KAAK,SACLD,MAAO5F,EACP8F,SAAUL,OAGd,iCACE,2CACA,wBACErH,KAAK,OACLlB,GAAG,gBACH2I,KAAK,gBACLD,MAAOtE,EACPwE,SAAUL,OAGd,yBAAQjI,QA7DU,WACpB+M,IAEArM,EHlC2B,SAAC+C,GAAD,MAAW,CACxC7C,KAAMsK,GAAgBM,SACtB/G,QAAShB,EAFoB,CGkClBuJ,CAAgBvJ,GAC1B,EAyDG,oBACA,yBAAQzD,QAAS+M,EAAjB,sBAGL,GClHYR,GAAwBlO,KAAOgC,IAAV,4PCoFnB4M,IDtEa5O,KAAOgC,IAAV,iHCHA,WACvB,IAAM6L,EAAcpN,YAAYmN,IAC1BvL,EAAW0F,cACjB,EAAwBE,mBAAS,CAC/B5C,QAASwI,EAAYxI,QACrBtB,KAAMc,GAAWgJ,EAAYrI,SAC7BxB,OAAQ6J,EAAYvI,UACpBrB,YAAa4J,EAAY5J,YACzBC,QAAQ,EACRC,QAAgE,EAAxDoK,OAAOV,EAAY1J,OAAO3B,QAAQ,aAAc,KACxDiD,cAAe,IAAIV,KAAK8I,EAAYrI,SAAS0C,cAAcC,MAAM,EAAG,IACpE5C,aAAcsI,EAAYtI,eAR5B,oBAAOH,EAAP,KAAaoJ,EAAb,KAUQxK,EAAwCoB,EAAxCpB,OAAQG,EAAgCiB,EAAhCjB,OAAQJ,EAAwBqB,EAAxBrB,KAAM0B,EAAkBL,EAAlBK,cAExBmE,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAEfwE,EAAQ,6BAAKpJ,GAAN,mBAAa4E,EAAOD,IAC5B,EAYD,OACE,gBAAC,GAAD,CAAuB1I,GAAIwM,EAAYxI,QAAvC,UACE,iCACE,kDACA,6BAAKtB,OAEP,iCACE,wCACA,wBACExB,KAAK,OACLlB,GAAG,SACH2I,KAAK,SACLD,MAAO/F,EACPiG,SAAUL,OAGd,iCACE,yCACA,wBACErH,KAAK,OACLlB,GAAG,SACH2I,KAAK,SACLD,MAAO5F,EACP8F,SAAUL,OAGd,iCACE,2CACA,wBACErH,KAAK,OACLlB,GAAG,gBACH2I,KAAK,gBACLD,MAAOtE,EACPwE,SAAUL,OAGd,yBAAQjI,QA9CO,WACjBU,ELV8B,SAAC+C,GAAD,MAAW,CAC3C7C,KAAMsK,GAAgBO,YACtBhH,QAAShB,EAFuB,CKUrByJ,CAAmBzJ,IAC5B/C,EAASkL,KACV,EA2CG,oBACA,yBAAQ5L,QA1CQ,WAClBU,EAASkL,MACTlL,EAASgL,GAAe,MACzB,EAuCG,sBAGL,GC5BcyB,GA9CF,SAAC,GAAc,IAAZ1J,EAAW,EAAXA,KACNC,EAAsDD,EAAtDC,QAASC,EAA6CF,EAA7CE,UAAWC,EAAkCH,EAAlCG,aAAcC,EAAoBJ,EAApBI,QAASrB,EAAWiB,EAAXjB,OAC7C9B,EAAW0F,cAUjB,IAAMgH,EARN,SAAgBhL,GACd,IAAMe,EAAI,IAAIC,KAAKhB,GACbiL,EAAMlK,EAAEG,aAGd,OAFcH,EAAEE,cAAgB,EAEjB,IAAMgK,CACtB,CAEmBC,CAAOzJ,GAerB0J,EAAc,WAClBC,OAAOC,KAAK7J,EAAc,SAC3B,EAED,OACE,uBAAKtE,UAAU,UAAUI,GAAIgE,EAA7B,UACE,oBAAGpE,UAAU,OAAb,SAAqB8N,IACrB,oBAAG9N,UAAU,SAAb,SAAuBqE,IACvB,oBAAGrE,UAAU,OAAb,SAAqBkD,IACrB,oBAAGlD,UAAU,eAAeU,QAtBV,WACpBU,EAASiL,MACTjL,EAASgL,GAAejI,IACpBG,GACF2J,GAEH,EAgBG,iBAGA,oBAAGjO,UAAU,wBAAwBU,QAjBlB,WACrBU,EAASgL,GAAejI,IACxB/C,EAASkL,KACV,EAcG,oBAKL,ECRc8B,I,OAnCD,WACZ,IAAMhN,EAAW0F,cACX9I,EAAcwB,YAAY5B,IAC1B4O,EAAQhN,YAAYiN,IAgB1B,OAdA9E,qBAAU,WACRnF,MAAM,2DAA4D,CAChEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBmH,QAAShM,EAAYgM,YAGtB7G,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLF,MAAK,SAAC+E,GACL9G,EPxBgB,SAACoL,GAAD,MAAY,CAClClL,KAAMsK,GAAgBE,UACtB3G,QAASqH,EAFa,COwBP6B,CAASnG,GACnB,GACJ,GAAE,CAAC9G,EAAUpD,IAGZ,iCACE,uBAAKgC,UAAU,UAAf,UACE,oBAAGA,UAAU,aAAb,qBACA,oBAAGA,UAAU,eAAb,oBACA,oBAAGA,UAAU,aAAb,oBACA,oBAAGA,UAAU,aAAb,iBACA,oBAAGA,UAAU,sBAAb,qBAEDwM,EAAMhO,KAAI,SAAC2F,GACV,OAAO,eAAC,GAAD,CAAyBA,KAAMA,GAApBA,EAAKC,QACxB,MAGN,GChBckK,I,OAbG,WAChB,IAAMxB,EAAmBtN,YAAYqN,IAC/BG,EAAuBxN,YAAYuN,IAEzC,OACE,iCACE,eAAC,GAAD,IACCD,EAAmB,KAAO,eAAC,GAAD,IAC1BE,EAAuB,KAAO,eAAC,GAAD,MAGpC,GCDcuB,I,OAhBE,WACf,IAAMxO,EAAY,mBAElB,OACE,uBAAKC,UAAU,WAAf,UACE,eAAC,GAAD,IACA,+BACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAOwO,OAAK,EAACC,KAAI,UAAK1O,EAAL,iBAA+B2O,UAAW/C,KAC3D,eAAC,KAAD,CAAO6C,OAAK,EAACC,KAAI,UAAK1O,EAAL,UAAwB2O,UAAWJ,YAK7D,GCfcK,GARS,CACtBC,iBAAkB,mBAClBC,aAAc,eACdC,gBAAiB,kBACjBC,cAAe,gBACfC,gBAAiB,mBCENC,GAAgB,SAAClR,GAAD,MAAW,CACtCuD,KAAMqN,GAAgBG,gBACtB3J,QAASpH,EAFkB,E,uECad6M,GAhBM,SAAC,GAAD,IACnBxI,EADmB,EACnBA,SACA8M,EAFmB,EAEnBA,eACAC,EAHmB,EAGnBA,SACGC,EAJgB,0BAMnB,mDACEpP,UAAS,UAAKmP,EAAW,WAAa,GAA7B,YACPD,EAAiB,iBAAmB,GAD7B,mBAGLE,GAJN,aAMGhN,IAZgB,ECuFNiN,GAjFA,WACb,MAA0CrI,mBAAS,CACjDsI,MAAO,GACPC,SAAU,KAFZ,oBAAOC,EAAP,KAAwBC,EAAxB,KAIQH,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SACTnO,EAAW0F,cA8BX6B,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAEf0G,EAAe,6BAAKD,GAAN,mBAAwBzG,EAAOD,IAC9C,EACD,OACE,0BAAS9I,UAAU,2EAAnB,SACE,uBAAMA,UAAU,eAAhB,SACE,uBAAKA,UAAU,UAAf,UACE,yBAAQA,UAAU,iBAAlB,qBACA,wBAAMqL,SArCO,SAACzC,GACpBA,EAAM0C,iBACFgE,GAASC,EACX/M,MAAM,oDAAqD,CACzDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnByM,MAAOA,EACPC,SAAUA,MAGXpM,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLF,MAAK,SAACpF,GACQ,sBAATA,EACFqD,EF/BkB,SAACrD,GAAD,MAAW,CACvCuD,KAAMqN,GAAgBC,iBACtBzJ,QAASpH,EAFmB,CE+BT2R,CAAe3R,EAAK,KAG7B0N,MAAM,mDAET,IACO6D,EAEAC,GACV9D,MAAM,sBAFNA,MAAM,kBAIT,EAYO,UACE,wBAAOzL,UAAU,oBAAoB2P,QAAQ,OAA7C,mBAGA,wBACE3P,UAAU,0DACVsB,KAAK,QACLyH,KAAK,QACLC,SAAUL,EACVG,MAAOwG,EACPvI,MAAM,QACNwE,UAAQ,IAEV,wBAAOvL,UAAU,oBAAoB2P,QAAQ,OAA7C,sBAGA,wBACE3P,UAAU,yDACVsB,KAAK,WACLyH,KAAK,WACLC,SAAUL,EACVG,MAAOyG,EACPxI,MAAM,WACNwE,UAAQ,IAEV,sBAAKvL,UAAU,UAAf,SACE,eAAC,GAAD,CAAcsB,KAAK,SAAnB,gCAOb,E,oCC+CcsO,I,2DAjIb,WAAYzN,GAAQ,IAAD,+BACjB,cAAMA,IASR0N,kBAAoB,SAACjH,GACnB,EAAKkH,SAAS,CAAEnQ,UAAWiJ,EAAMC,OAAOC,OACzC,EAZkB,EAcnBiH,iBAAmB,SAACnH,GAClB,EAAKkH,SAAS,CAAEE,SAAUpH,EAAMC,OAAOC,OACxC,EAhBkB,EAkBnBmH,cAAgB,SAACrH,GACf,EAAKkH,SAAS,CAAER,MAAO1G,EAAMC,OAAOC,OACrC,EApBkB,EAqBnBoH,iBAAmB,SAACtH,GAClB,EAAKkH,SAAS,CAAEP,SAAU3G,EAAMC,OAAOC,OACxC,EAvBkB,EAyBnBqH,iBAAmB,WACjB3N,MAAMH,GAAkB,WAAY,CAClCI,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnByM,MAAO,EAAKxR,MAAMwR,MAClBC,SAAU,EAAKzR,MAAMyR,SACrB5P,UAAW,EAAK7B,MAAM6B,UACtBqQ,SAAU,EAAKlS,MAAMkS,aAGtB7M,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLF,MAAK,SAACpF,GACDA,GACEA,EAAKiM,SAEP,EAAK7H,MAAM6G,UAGhB,GACJ,EA3CC,EAAKlL,MAAQ,CACXwR,MAAO,GACPC,SAAU,GACV5P,UAAW,GACXqQ,SAAU,IANK,CAQlB,C,2CAuCD,WACE,IAAQI,EAAqBC,KAAKlO,MAA1BiO,iBACR,OACE,0BAASpQ,UAAU,2EAAnB,SACE,uBAAMA,UAAU,eAAhB,SACE,uBAAKA,UAAU,UAAf,UACE,4BAAUI,GAAG,UAAUJ,UAAU,4BAAjC,UACE,yBAAQA,UAAU,iBAAlB,sBACA,uBAAKA,UAAU,MAAf,UACE,wBAAOA,UAAU,oBAAoB2P,QAAQ,OAA7C,wBAGA,wBACE3P,UAAU,qEACVsB,KAAK,OACLyH,KAAK,YACL3I,GAAG,YACH4I,SAAUqH,KAAKR,kBACftE,UAAQ,OAGZ,uBAAKvL,UAAU,MAAf,UACE,wBAAOA,UAAU,oBAAoB2P,QAAQ,OAA7C,uBAGA,wBACE3P,UAAU,qEACVsB,KAAK,OACLyH,KAAK,WACL3I,GAAG,WACH4I,SAAUqH,KAAKN,sBAGnB,uBAAK/P,UAAU,MAAf,UACE,wBAAOA,UAAU,oBAAoB2P,QAAQ,gBAA7C,mBAGA,wBACE3P,UAAU,qEACVsB,KAAK,QACLyH,KAAK,gBACL3I,GAAG,gBACH4I,SAAUqH,KAAKJ,mBAGnB,uBAAKjQ,UAAU,MAAf,UACE,wBAAOA,UAAU,oBAAoB2P,QAAQ,WAA7C,sBAGA,wBACE3P,UAAU,uEACVsB,KAAK,WACLyH,KAAK,WACL3I,GAAG,WACH4I,SAAUqH,KAAKH,sBAGnB,wBAAOlQ,UAAU,kCAEnB,sBAAKA,UAAU,GAAf,SACE,wBACEU,QAAS2P,KAAKF,iBACdnQ,UAAU,uEACVsB,KAAK,SACLwH,MAAM,eAGV,sBAAK9I,UAAU,cAAf,SACE,oBACEU,QAAS,kBAAM0P,EAAiB,SAAvB,EACTpQ,UAAU,+BAFZ,6BAWX,K,GA/HoBsQ,IAAMC,YCQdC,I,OAPY,kBACzB,uBAAKxQ,UAAU,qBAAf,UACE,eAAC,GAAD,IACA,eAAC,GAAD,MAHuB,GCQZyQ,GALH,WACV,IAAMzS,EAAcwB,YAAY5B,IAChC,OAAO,+BAAMI,EAAc,eAAC,GAAD,IAAe,eAAC,GAAD,KAC3C,E,oECPS0S,I,uBAoBOC,I,uBAUAC,I,uBAIAC,IAlCjB,SAAUH,GAAUpB,EAAOC,GAA3B,oFAEgB,OAFhB,kBAEsB/M,MAChB,oDACA,CACEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnByM,MAAOA,EACPC,SAAUA,MATpB,OAaiB,OAXPuB,EAFV,gBAauBA,EAAI/S,OAb3B,OAaUA,EAbV,OAcIwF,QAAQC,IAAIzF,GAdhB,kDAgBIwF,QAAQC,IAAR,wBAhBJ,uDAoBO,SAAUmN,GAAV,2FAEU,OAFV,IAA4BxL,QAAWmK,EAAvC,EAAuCA,MAAOC,EAA9C,EAA8CA,SAA9C,kBAEgBmB,GAAUpB,EAAOC,GAFjC,OAIH,OAFMxR,EAFH,gBAIGgT,aAAI9B,GAAclR,IAJrB,8BAMH,OANG,mCAMGgT,cNXoB3F,EMWF,EAAD,GNXc,CACvC9J,KAAMqN,GAAgBK,gBACtB7J,QAASiG,KMGJ,kCNLsB,IAACA,CMKvB,oBAUA,SAAUwF,KAAV,4EACL,OADK,SACCI,aAAWrC,GAAgBI,cAAe4B,IAD3C,wCAIA,SAAUE,KAAV,4EACL,OADK,SACCI,aAAI,CAACC,aAAKN,MADX,wC,2BCpCkBO,IAAV,SAAUA,KAAV,4EACb,OADa,SACPF,aAAI,CAACC,aAAKL,MADH,wC,wBCJF9K,GAAqB,SAAC7H,EAAUI,EAAgB8S,GAC3D,IAAMC,EAAkBnT,EAASoT,MAC/B,SAAC7S,GAAD,OAAaA,EAAQC,aAAeJ,CAApC,IAEF,OAAOJ,EAASM,KAAI,SAACC,GAAD,OAClBA,EAAQC,aAAeJ,EAAvB,6BAESG,GAFT,IAGME,OACE4S,WAAWF,EAAgB1S,OAAS4S,WAAWH,IAC/CI,QAAQ,KAEZ/S,CARc,GAUrB,EAEYwH,GAAuB,SAAC/H,EAAUI,EAAgB8S,GAC7D,IAAMC,EAAkBnT,EAASoT,MAC/B,SAAC7S,GAAD,OAAaA,EAAQC,aAAeJ,CAApC,IAEF,OAAOJ,EAASM,KAAI,SAACC,GAAD,OAClBA,EAAQC,aAAeJ,EAAvB,6BAESG,GAFT,IAGMI,SACE0S,WAAWF,EAAgBxS,SAAW0S,WAAWH,IACjDI,QAAQ,KAEZ/S,CARc,GAUrB,EC3BKgT,GAAgB,CACpBrT,YAAa,GACbE,eAAgB,MAsCHoT,GAnCQ,WAAoC,IAAnC5T,EAAkC,uDAA1B2T,GAAeE,EAAW,uCACxD,OAAQA,EAAOrQ,MACb,KAAKgE,GAAmBE,aACtB,OAAO,6BACF1H,GADL,IAEEM,YAAauT,EAAOxM,UAExB,KAAKG,GAAmBI,oBACtB,OAAO,6BACF5H,GADL,IAEEQ,eAAgBqT,EAAOxM,UAE3B,KAAKG,GAAmBO,qBACtB,OAAO,6BACF/H,GADL,IAEEM,YAAa2H,GACXjI,EAAMM,YACNN,EAAMQ,eACNqT,EAAOxM,WAGX,KAAKG,GAAmBQ,uBACtB,OAAO,6BACFhI,GADL,IAEEM,YAAa6H,GACXnI,EAAMM,YACNN,EAAMQ,eACNqT,EAAOxM,WAGf,QACE,OAAOrH,EAEZ,ECvCK2T,GAAgB,CACpBzT,YAAa,MAoBA4T,GAjBK,WAAoC,IAAnC9T,EAAkC,uDAA1B2T,GAAeE,EAAW,uCACrD,OAAQA,EAAOrQ,MACb,KAAKqN,GAAgBC,iBACrB,KAAKD,GAAgBG,gBACnB,OAAO,6BACFhR,GADL,IAEEE,YAAa2T,EAAOxM,UAExB,KAAKwJ,GAAgBE,aACnB,MAAO,CACL4C,kBAEJ,QACE,OAAO3T,EAEZ,E,SCnBY+T,GAAuB,SAACpQ,EAAcqQ,GACjD,IAAMvP,EAAc,CAClBO,KAAMgP,EAAiBhP,KACvBC,OAAQ+O,EAAiB/O,OACzBC,YAAa8O,EAAiB5G,SAASpC,MACvC7F,OAAQ6O,EAAiB7O,OACzBC,OAAQ4O,EAAiB5O,OACzBxE,WAAYoT,EAAiBpT,YAY/B,OAVA4D,GAAkBC,GAUZ,CARNuP,EAAmB,CACjBhP,KAAMgP,EAAiBhP,KACvBC,OAAQ+O,EAAiB/O,OACzBgE,MAAO+K,EAAiB5G,SAASnE,MACjC9D,OAAQ6O,EAAiB7O,OACzBC,OAAQ4O,EAAiB5O,OACzBxE,WAAYoT,EAAiBpT,aAE/B,oBAA6B+C,GAC9B,EAEYsQ,GAAe,SAACtQ,EAAcc,GAEzC,OADAoB,GAA2BpB,GACpB,aAAId,EACZ,EAEYuQ,GAAoB,SAACC,GAChCxO,GAAuBwO,EACxB,EC5BKR,GAAgB,CACpB9P,gBAAiB,GACjBI,yBAAyB,EACzBE,6BAA6B,EAC7BJ,mBAAoB,MA2DPqQ,GAxDY,WAAoC,IAAnCpU,EAAkC,uDAA1B2T,GAAeE,EAAW,uCAC5D,OAAQA,EAAOrQ,MACb,KAAKmD,GAAuBC,iBAC1B,OAAO,6BACF5G,GADL,IAEE6D,gBAAiBgQ,EAAOxM,UAE5B,KAAKV,GAAuBE,gBAQ5B,KAAKF,GAAuBG,YAC1B,OAAO,6BACF9G,GADL,IAEE6D,gBAAiBkQ,GACf/T,EAAM6D,gBACNgQ,EAAOxM,WAGb,KAAKV,GAAuBI,cAC1B,OAAO,6BACF/G,GADL,IAEE6D,gBAAiBoQ,GACfjU,EAAM6D,gBACNgQ,EAAOxM,WAGb,KAAKV,GAAuBM,0BAC1B,OAAO,6BACFjH,GADL,IAEEiE,yBAA0BjE,EAAMiE,0BAEpC,KAAK0C,GAAuBO,+BAC1B,OAAO,6BACFlH,GADL,IAEEmE,6BAA8BnE,EAAMmE,8BAExC,KAAKwC,GAAuBK,wBAC1B,OAAO,6BACFhH,GADL,IAEE+D,mBAAoB8P,EAAOxM,UAE/B,KAAKV,GAAuBQ,mBAC1B,OAAO,6BACFnH,GADL,IAEEmU,oBAAqBD,GAAkBL,EAAOxM,WAElD,QACE,OAAOrH,EAEZ,EC9DK2T,GAAgB,CACpBnJ,aAAc,IAeD6J,GAZS,WAAoC,IAAnCrU,EAAkC,uDAA1B2T,GAAeE,EAAW,uCACzD,OAAQA,EAAOrQ,OACR6I,GAAoBC,eAChB,6BACFtM,GADL,IAEEwK,aAAcqJ,EAAOxM,UAGhBrH,CAEZ,ECdYsU,GAA0B,SAAC5F,EAAO6F,GAC7C,MAAM,GAAN,oBAAW7F,GAAX,CAAkB6F,GACnB,EAEYC,GAAU,SAACC,GACtB,IAAMhQ,EAAc,CAClBO,KAAMyP,EAAUzP,KAChBC,OAAQwP,EAAUxP,OAClBC,YAAauP,EAAUvP,YACvBC,QAAQ,EACRC,OAAQqP,EAAUrP,OAClBxE,WAAY6T,EAAU7T,YAExB4D,GAAkBC,GAClBiQ,GAAWD,EACZ,EAEYC,GAAa,SAACC,GACzBvO,GAAgBuO,EACjB,EClBKhB,GAAgB,CACpB/E,SAAU,GACVI,kBAAkB,EAClBE,sBAAsB,EACtBJ,YAAa,MA6CA8F,GA1CK,WAAoC,IAAnC5U,EAAkC,uDAA1B2T,GAAeE,EAAW,uCACrD,OAAQA,EAAOrQ,MACb,KAAKsK,GAAgBE,UACnB,OAAO,6BACFhO,GADL,IAEE4O,SAAUiF,EAAOxM,UAErB,KAAKyG,GAAgBC,SACnB,OAAO,6BACF/N,GADL,IAEEuU,UAAWD,GAAwBtU,EAAMuU,UAAWV,EAAOxM,WAE/D,KAAKyG,GAAgBM,SACnB,OAAO,6BACFpO,GADL,IAEEyU,UAAWD,GAAQX,EAAOxM,WAE9B,KAAKyG,GAAgBI,mBACnB,OAAO,6BACFlO,GADL,IAEEgP,kBAAmBhP,EAAMgP,mBAE7B,KAAKlB,GAAgBK,wBACnB,OAAO,6BACFnO,GADL,IAEEkP,sBAAuBlP,EAAMkP,uBAEjC,KAAKpB,GAAgBG,iBACnB,OAAO,6BACFjO,GADL,IAEE8O,YAAa+E,EAAOxM,UAExB,KAAKyG,GAAgBO,YACnB,OAAO,6BACFrO,GADL,IAEE6U,aAAcH,GAAWb,EAAOxM,WAEpC,QACE,OAAOrH,EAEZ,ECxCK8U,GAAgB,CACpBC,IAAK,OACLC,aACAC,UAAW,CAAC,OAAQ,eAAgB,WAAY,eAG5CC,GAAaC,aAAgB,CACjClV,KAAM6T,GACNnQ,aAAcyQ,GACdhU,SAAUwT,GACVrJ,WAAY8J,GACZ3F,MAAOkG,KAUMQ,gBAAeN,IAPV,SAAC9U,EAAO6T,GAC1B,MAAoB,gBAAhBA,EAAOrQ,KACF0R,QAAWG,EAAWxB,GAExBqB,GAAWlV,EAAO6T,EAC1B,ICpBKyB,GAAiBC,eAEjBC,GAAc,CAACF,IAMd,IAAMG,GAAQC,aAAYC,GAAaC,KAAe,WAAf,EAAmBJ,KAEjEF,GAAeO,IAAIxC,IAEZ,IAAMyC,GAAYC,aAAaN,ICjBvBO,GAFC,kBAAM,0CAAN,ECUhBC,IAASC,OACP,eAAC,IAAD,CAAUT,MAAOA,GAAjB,SACE,eAAC,IAAD,UACE,eAAC,IAAD,CAAaU,QAAS,eAAC,GAAD,IAAaL,UAAWA,GAA9C,SACE,eAAC,GAAD,UAKNM,SAASC,eAAe,Q","file":"static/js/main.e3aecba5.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectUser = (state) => state.user;\n\nexport const selectCurrentUser = createSelector(\n  [selectUser],\n  (user) => user.currentUser\n);\n","import { createSelector } from \"reselect\";\n\nexport const selectAccounts = (state) => state.accounts;\n\nexport const selectAccountList = createSelector(\n  [selectAccounts],\n  (accounts) => accounts.accountList\n);\n\nexport const selectCurrentAccount = createSelector(\n  [selectAccounts],\n  (accounts) => accounts.currentAccount\n);\n\nexport const selectAccountTotal = createSelector([selectAccounts], (accounts) =>\n  accounts.accountList.map((account) =>\n    account.account_id === accounts.currentAccount ? account.total : null\n  )\n);\n\nexport const selectAccountPending = createSelector([selectAccounts], (accounts) =>\n  accounts.accountList.map((account) =>\n    account.account_id === accounts.currentAccount ? account.pending : null\n  )\n);\n","import styled from \"styled-components\";\n\nexport const UserContainer = styled.tr`\n  align-content: center;\n  align-items: center;\n`;\n\nexport const UserHeading = styled.th`\n  font-size: 1.3rem;\n  padding: 0 1.5rem 0 1.5rem;\n  text-align: center;\n`;\n\nexport const UserInfo = styled.td`\n  font-size: 1.1rem;\n  text-align: center;\n`;\n\nexport const UserTable = styled.table`\n  border-collapse: collapse;\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectAccountTotal } from \"../../redux/account/account.selector\";\n\nconst CurrentTotal = () => {\n  const total = useSelector(selectAccountTotal);\n  return total ? <div>{total}</div> : null;\n};\n\nexport default CurrentTotal;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectAccountPending } from \"../../redux/account/account.selector\";\n\nconst CurrentPending = () => {\n  const pending = useSelector(selectAccountPending);\n  return pending ? <div>{pending}</div> : null;\n};\n\nexport default CurrentPending;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\n\nimport { UserContainer, UserInfo, UserTable, UserHeading } from \"./account-info.styles\";\nimport CurrentTotal from \"../current-total/current-total.component\";\nimport CurrentPending from \"../current-pending/current-pending.component.jsx\";\n\nconst AccountInfo = () => {\n  const currentUser = useSelector(selectCurrentUser);\n\n  return (\n    <UserTable>\n        <UserContainer>\n            <UserHeading>Total</UserHeading>\n            <UserHeading>Available</UserHeading>\n          <UserHeading>Name</UserHeading>\n        </UserContainer>\n      <UserContainer>\n            <UserInfo><CurrentTotal /></UserInfo>\n            <UserInfo><CurrentPending /></UserInfo>\n        <UserInfo>{currentUser.firstname}</UserInfo>\n      </UserContainer>\n    </UserTable>\n  );\n};\n\nexport default AccountInfo;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst DropDownMenu = () => {\n  const history = useHistory();\n  const main_page = \"/budget_frontend\";\n\n  return (\n    <div className=\"menu\">\n      <Dropdown>\n        <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\n          <FontAwesomeIcon icon={faBars} size=\"2x\" />\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <div>\n            <Dropdown.Item\n              onClick={() => history.push(`${main_page}/transactions`)}\n            >\n              Transactions\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => history.push(`${main_page}/bills`)}>\n              Bills\n            </Dropdown.Item>\n          </div>\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default DropDownMenu;\n","import styled from \"styled-components\";\n\nexport const NavigationContainer = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  align-content: center;\n  margin-bottom: 1rem;\n`;\n\nexport const NavigationInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const NavigationSignOut = styled.div`\n  font-size: 1.5rem;\n  opacity: 1;\n  transition: opacity 0.15s ease-in;\n  text-decoration: none;\n  padding: 1rem;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\nimport { logOutUser } from \"../../redux/root-action\";\nimport { selectCurrentAccount } from \"../../redux/account/account.selector\";\n\nimport AccountInfo from \"../account-info/account-info.component\";\nimport DropDownMenu from \"../dropdown-menu/dropdown-menu.component\";\n\nimport {\n  NavigationContainer,\n  NavigationInfo,\n  NavigationSignOut,\n} from \"./navigation.styles\";\n\nconst Navigation = ({ logOutUser }) => {\n  const history = useHistory();\n\n  return (\n    <NavigationContainer>\n      <div>\n        <DropDownMenu />\n      </div>\n      <NavigationInfo>\n        <AccountInfo />\n        <NavigationSignOut\n          onClick={() => {\n            history.replace(`/budget_frontend`);\n            logOutUser();\n          }}\n        >\n          Sign Out\n        </NavigationSignOut>\n      </NavigationInfo>\n    </NavigationContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  currentAccount: selectCurrentAccount,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  logOutUser: () => dispatch(logOutUser()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","export const logOutUser = () => ({\n  type: \"USER_LOGOUT\",\n});\n","import { createSelector } from \"reselect\";\n\nexport const selectTransactions = (state) => state.transactions;\n\nexport const selectTransactionList = createSelector(\n  [selectTransactions],\n  (transactions) => transactions.transactionList\n);\n\nexport const selectCurrentTransaction = createSelector(\n  [selectTransactions],\n  (transactions) => transactions.currentTransaction\n);\n\nexport const selectTransactionHidden = createSelector(\n  [selectTransactions],\n  (transactions) => transactions.hideTransactionDropdown\n);\n\nexport const selectEditTransactionHidden = createSelector(\n  [selectTransactions],\n  (Transactions) => Transactions.hideEditTransactionDropdown\n);","import React from \"react\";\n\nimport \"./scroll.styles.scss\";\n\nconst Scroll = (props) => {\n  return (\n    <div className=\"scroll\" key={props.children}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","export const globalVars = {\n  HOST: \"https://star-ship-enterprise.herokuapp.com/\",\n  USER_ID: \"368c15a4-0c45-441f-959d-0d33a6542cb3\",\n};\n\nexport const insertTransaction = async (transaction) => {\n  await fetch(globalVars.HOST + \"insert\", {\n    method: \"post\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      date: transaction.date,\n      vendor: transaction.vendor,\n      category_id: transaction.category_id,\n      status: transaction.status,\n      amount: transaction.amount,\n      account_id: transaction.account_id,\n    }),\n  })\n    .then((response) => response.json())\n    .catch(console.log);\n};\n\nexport const fetchUpdateTransaction = async (transaction) => {\n  await fetch(globalVars.HOST + \"update\", {\n    method: \"post\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      date: transaction.date,\n      vendor: transaction.vendor,\n      category_id: transaction.category_id,\n      status: transaction.status,\n      amount: transaction.amount,\n      transaction_id: transaction.transaction_id,\n    }),\n  })\n    .then((response) => response.json())\n    .catch(console.log);\n};\n\nexport const updateTransactionStatusAPI = async (transaction) => {\n  await fetch(globalVars.HOST + \"updateStatus\", {\n    method: \"post\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      transaction_id: transaction.transaction_id,\n    }),\n  })\n    .then((response) => response.json())\n    .catch(console.log);\n};\n\nexport const formatDate = (date) => {\n  const d = new Date(date);\n  const month = d.getUTCMonth() + 1;\n  const day = d.getUTCDate();\n  const year = d.getUTCFullYear();\n  return month + \"-\" + day + \"-\" + year;\n};\n\nexport const fetchUpdateBill = async (bill) => {\n  await fetch(globalVars.HOST + \"update_bill\", {\n    method: \"post\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      bill_id: bill.bill_id,\n      bill_name: bill.vendor,\n      amount: bill.amount * -1,\n      bill_website: bill.bill_website,\n      due_day: bill.next_due_date,\n    }),\n  })\n    .then((response) => response.json())\n    .catch(console.log);\n};\n","const TransactionActionTypes = {\n  SET_TRANSACTIONS: \"SET_TRANSACTIONS\",\n  ADD_TRANSACTION: \"ADD_TRANSACTION\",\n  ADD_EXPENSE: \"ADD_EXPENSE\",\n  UPDATE_STATUS: \"UPDATE_STATUS\",\n  SET_CURRENT_TRANSACTION: \"SET_CURRENT_TRANSACTION\",\n  TOGGLE_TRANSACTION_HIDDEN: \"TOGGLE_TRANSACTION_HIDDEN\",\n  TOGGLE_EDIT_TRANSACTION_HIDDEN: \"TOGGLE_EDIT_TRANSACTION_HIDDEN\",\n  UPDATE_TRANSACTION: \"UPDATE_TRANSACTION\",\n};\n\nexport default TransactionActionTypes;\n","import TransactionActionTypes from \"./transaction.types\";\n\nexport const setTransactions = (transactions) => ({\n  type: TransactionActionTypes.SET_TRANSACTIONS,\n  payload: transactions,\n});\n\nexport const addTransaction = (transaction) => ({\n  type: TransactionActionTypes.ADD_TRANSACTION,\n  payload: transaction,\n});\n\nexport const addExpense = (transaction) => ({\n  type: TransactionActionTypes.ADD_EXPENSE,\n  payload: transaction,\n});\n\nexport const addIncome = (transaction) => ({\n  type: TransactionActionTypes.ADD_EXPENSE,\n  payload: transaction,\n});\n\nexport const updateTransactionStatus = (transaction) => ({\n  type: TransactionActionTypes.UPDATE_STATUS,\n  payload: transaction,\n});\n\nexport const setCurrentTransaction = (transaction) => ({\n  type: TransactionActionTypes.SET_CURRENT_TRANSACTION,\n  payload: transaction,\n});\n\nexport const updateSelectedTransaction = (transaction) => ({\n  type: TransactionActionTypes.UPDATE_TRANSACTION,\n  payload: transaction,\n});\n\nexport const toggleTransactionDropdownHidden = () => ({\n  type: TransactionActionTypes.TOGGLE_TRANSACTION_HIDDEN,\n});\n\nexport const toggleEditTransactionDropdownHidden = () => ({\n  type: TransactionActionTypes.TOGGLE_EDIT_TRANSACTION_HIDDEN,\n});","const AccountActionTypes = {\n  ADD_ACCOUNT: \"ADD_ACCOUNT\",\n  SET_ACCOUNTS: \"SET_ACCOUNTS\",\n  REMOVE_ACCOUNTS: \"REMOVE_ACCOUNTS\",\n  SET_CURRENT_ACCOUNT: \"SET_CURRENT_ACCOUNT\",\n  SET_ACCOUNT_BALANCE: \"SET_ACCOUNT_BALANCE\",\n  UPDATE_ACCOUNT_BALANCE: \"UPDATE_ACCOUNT_BALANCE\",\n  UPDATE_ACCOUNT_TOTAL: \"UPDATE_ACCOUNT_TOTAL\",\n  UPDATE_ACCOUNT_PENDING: \"UPDATE_ACCOUNT_PENDING\",\n};\n\nexport default AccountActionTypes;\n","import AccountActionTypes from \"./account.types\";\n\nexport const setAccounts = (accounts) => ({\n  type: AccountActionTypes.SET_ACCOUNTS,\n  payload: accounts,\n});\n\nexport const setCurrentAccount = (account) => ({\n  type: AccountActionTypes.SET_CURRENT_ACCOUNT,\n  payload: account,\n});\n\nexport const setAccountBalance = (balance) => ({\n  type: AccountActionTypes.SET_ACCOUNT_BALANCE,\n  payload: balance,\n});\n\nexport const updateBalance = (newBalance) => ({\n  type: AccountActionTypes.UPDATE_ACCOUNT_BALANCE,\n  payload: newBalance,\n});\n\nexport const updateAccountTotal = (newBalance) => ({\n  type: AccountActionTypes.UPDATE_ACCOUNT_TOTAL,\n  payload: newBalance,\n});\n\nexport const updateAccountPending = (newBalance) => ({\n  type: AccountActionTypes.UPDATE_ACCOUNT_PENDING,\n  payload: newBalance,\n});\n","import styled, { css } from \"styled-components\";\n\nconst TransactionElement = css`\n  border-style: none solid none none;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nexport const TransactionContainer = styled.tr`\n  outline: 1px solid;\n  display: flex;\n  align-items: center;\n  padding: 0.5rem;\n`;\n\nexport const DateContainer = styled.td`\n  flex-grow: 0;\n  justify-items: left;\n  width: 8rem;\n  text-align: center;\n  ${TransactionElement}\n`;\n\nexport const VendorContainer = styled.td`\n  ${TransactionElement}\n  flex-grow: 2;\n  text-align: left;\n  min-width: 8rem;\n  border-bottom: none;\n  padding-left: 2rem;\n`;\n\nexport const StatusContainer = styled.td`\n  cursor: pointer;\n  min-width: 5em;\n  ${TransactionElement}\n`;\n\nexport const Dollar = styled.td`\n  border-style: none;\n`;\n\nexport const AmountContainer = styled.td`\n  text-align: right;\n  padding-right: 1em;\n  width: 5em;\n  ${TransactionElement}\n`;\n\nexport const CategoryContainer = styled.td`\n  flex-grow: 0;\n  width: 8em;\n  ${TransactionElement}\n`;\n\nexport const EditContainer = styled.td`\n  cursor: pointer;\n  min-width: 5em;\n  ${TransactionElement}\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { updateTransactionStatus, toggleEditTransactionDropdownHidden, setCurrentTransaction } from \"../../redux/transaction/transaction.action\";\nimport { updateAccountTotal } from \"../../redux/account/account.action\";\n\nimport {\n  TransactionContainer,\n  DateContainer,\n  VendorContainer,\n  StatusContainer,\n  Dollar,\n  AmountContainer,\n  CategoryContainer,\n  EditContainer\n} from \"./transaction.styles\";\n\nconst Transaction = ({ current_transaction }) => {\n  const dispatch = useDispatch();\n  const { transaction_id, date, vendor, amount, status, label, category_id } = current_transaction;\n  const [transaction, setTransaction] = useState({\n    date: new Date(date).toISOString().slice(0, 10),\n    transaction_id: transaction_id,\n    vendor: vendor,\n    amount: amount,\n    status: status,\n    label: label,\n    category_id: category_id,\n  });\n\n  function formatDate(date) {\n    const d = new Date(date);\n    const year = d.getUTCFullYear();\n    const month = d.getUTCMonth() + 1;\n    const day = d.getUTCDate();\n    return month + \"-\" + day + \"-\" + year;\n  }\n\n  const onStatusChange = () => {\n    setTransaction({ ...transaction, status: !transaction.status })\n    if (transaction.status) {\n      dispatch(updateAccountTotal(-amount))\n    } else {\n      dispatch(updateAccountTotal(amount))\n    }\n    dispatch(updateTransactionStatus(transaction));\n  };\n\n  const onEditTransaction = () => {\n    dispatch(setCurrentTransaction(transaction));\n    dispatch(toggleEditTransactionDropdownHidden());\n  };\n\n  return (\n    <TransactionContainer key={transaction_id}>\n      <DateContainer>{formatDate(date)}</DateContainer>\n      <VendorContainer>{vendor}</VendorContainer>\n      <Dollar>$</Dollar>\n      <AmountContainer>{amount}</AmountContainer>\n      <StatusContainer onClick={() => { onStatusChange() }} >{ transaction.status ? \"Cleared\" : \"Pending\" } </StatusContainer>\n      <CategoryContainer>{label}</CategoryContainer>\n      <EditContainer onClick={() => { onEditTransaction() }}>Edit</EditContainer>\n    </TransactionContainer>\n  );\n};\n\nexport default Transaction;\n","import styled, { css } from \"styled-components\";\n\nconst TransactionListElement = css`\n  border-style: none solid none none;\n  margin: 0.5em;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  text-align: center;\n`;\n\nexport const TransactionTable = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n`;\n\nexport const TransactionListContainer = styled.tr`\n  justify-content: center;\n  display: flex;\n  outline: 1px solid;\n`;\n\nexport const DateContainer = styled.th`\n  flex-grow: 0;\n  justify-items: left;\n  width: 8rem;\n  text-align: center;\n  ${TransactionListElement}\n`;\n\nexport const VendorContainer = styled.th`\n  ${TransactionListElement}\n  flex-grow: 2;\n  text-align: left;\n  min-width: 8rem;\n  border-bottom: none;\n  padding-left: 1rem;\n`;\n\nexport const StatusContainer = styled.th`\n  cursor: pointer;\n  min-width: 5em;\n  ${TransactionListElement}\n`;\n\nexport const Dollar = styled.th`\n  border-style: none;\n`;\n\nexport const AmountContainer = styled.th`\n  text-align: right;\n  padding-right: 1em;\n  width: 5em;\n  ${TransactionListElement}\n`;\n\nexport const CategoryContainer = styled.th`\n  flex-grow: 0;\n  width: 8em;\n  ${TransactionListElement}\n`;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { globalVars } from \"../../hooks/global\";\nimport { setTransactions } from \"../../redux/transaction/transaction.action\";\nimport { selectTransactionList } from \"../../redux/transaction/transaction.selector\";\nimport { selectCurrentAccount } from \"../../redux/account/account.selector\";\n\nimport Transaction from \"../transaction/transaction.component\";\n\nimport {\n  TransactionTable,\n  TransactionListContainer,\n  DateContainer,\n  VendorContainer,\n  StatusContainer,\n  Dollar,\n  AmountContainer,\n  CategoryContainer,\n} from \"./transaction-list.styles\";\n\nconst TransactionList = () => {\n  const transactionList = useSelector(selectTransactionList);\n  const currentAccount = useSelector(selectCurrentAccount);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const d = new Date();\n    const t = new Date();\n    d.setDate(d.getDate() - 90);\n    t.setDate(t.getDate() + 60);\n    const from_date = d.toISOString().split(\"T\")[0];\n    const to_date = t.toISOString().split(\"T\")[0];\n    if (!currentAccount) {\n      return;\n    }\n    try {\n      fetch(`${globalVars.HOST}transactions`, {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          account_id: currentAccount,\n          from_date: from_date,\n          to_date: to_date,\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          dispatch(setTransactions(data));\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [currentAccount, dispatch]);\n  return (\n    <TransactionTable>\n      <TransactionListContainer >\n        <DateContainer>Date</DateContainer>\n        <VendorContainer>Vender</VendorContainer>\n        <Dollar>&nbsp;&nbsp;</Dollar>\n        <AmountContainer>Amount</AmountContainer>\n        <StatusContainer>Status</StatusContainer>\n        <CategoryContainer>Category</CategoryContainer>\n        {/* <p className=\"edit transaction\">Edit</p> */}\n      </TransactionListContainer>\n      {transactionList.map((transaction) => (\n        <Transaction\n          key={transaction.transaction_id}\n          current_transaction={transaction}\n        />\n      ))}\n    </TransactionTable>\n  );\n};\n\nexport default TransactionList;\n","import { createSelector } from \"reselect\";\n\nexport const selectCategories = (state) => state.categories;\n\nexport const selectTransactionList = createSelector(\n  [selectCategories],\n  (categories) => categories.categoryList\n);\n","import styled from \"styled-components\";\nimport Select from \"react-select\";\n\nexport const TransactionDropDownContainer = styled.div`\n  position: absolute;\n  width: 240px;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid black;\n  background-color: white;\n  top: 90px;\n  right: 100px;\n  z-index: 5;\n`;\n\nexport const TransactionItemsDiv = styled.div`\n  height: 240px;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n`;\n\nexport const Selector = styled(Select)`\n  font-size: 1rem;\n  padding: 0.5rem;\n  width: 100%;\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { selectCurrentTransaction } from \"../../redux/transaction/transaction.selector\";\nimport { updateSelectedTransaction, setCurrentTransaction, toggleEditTransactionDropdownHidden } from \"../../redux/transaction/transaction.action\";\nimport { selectCategories } from \"../../redux/category/category.selector\"\n\nimport { TransactionDropDownContainer, Selector } from \"./edit-transaction-dropdown.styles\";\n\nconst TransactionEditDropDown = () => {\n  const currentTransaction = useSelector(selectCurrentTransaction);\n  const { categoryList } = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const [transaction, setTransaction] = useState({\n    transaction_id: currentTransaction ? currentTransaction.transaction_id : \"\",\n    date: currentTransaction ? currentTransaction.date : \"\",\n    vendor: currentTransaction ? currentTransaction.vendor : \"\",\n    label: currentTransaction ? currentTransaction.label : \"\",\n    category_id: currentTransaction ? currentTransaction.category_id : \"\",\n    status: currentTransaction ? currentTransaction.status : \"\",\n    amount: currentTransaction ? currentTransaction.amount : \"\",\n  });\n  const { transaction_id, vendor, amount, date, status } = transaction;\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setTransaction({ ...transaction, [name]: value });\n  };\n\n  const onCategoryChange = (event) => {\n    setTransaction({ ...transaction, category_id: event.value });\n  };\n\n  const onStatusChange = () => {\n    setTransaction({ ...transaction, status: !status });\n  };\n\n  const handleEdit = () => {\n    dispatch(updateSelectedTransaction(transaction));\n    dispatch(toggleEditTransactionDropdownHidden());\n  };\n\n  const handleClose = () => {\n    dispatch(toggleEditTransactionDropdownHidden());\n    dispatch(setCurrentTransaction(null));\n  };\n\n  return (\n    <TransactionDropDownContainer id={ transaction_id }>\n      <div>\n        <p>Current Due Date</p>\n        <input\n          type=\"date\"\n          id=\"date\"\n          name=\"date\"\n          value={date}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Vendor</p>\n        <input\n          type=\"text\"\n          id=\"vendor\"\n          name=\"vendor\"\n          value={vendor}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Status</p>\n        <input\n          type=\"button\"\n          id=\"status\"\n          name=\"status\"\n          value={ status ? \"Cleared\" : \"Pending\" }\n          onClick={onStatusChange}\n        />\n      </div>\n      <div>\n        <p>Payment</p>\n        <input\n          type=\"text\"\n          id=\"amount\"\n          name=\"amount\"\n          value={amount}\n          onChange={handleChange}\n        />\n      </div>\n      <Selector\n          placeholder = {transaction.label}\n          onChange={onCategoryChange}\n          options={categoryList}\n        />\n      <button onClick={handleEdit}>Update</button>\n      <button onClick={handleClose}>Cancel</button>\n    </TransactionDropDownContainer>\n  );\n};\n\nexport default TransactionEditDropDown;\n","import styled from \"styled-components\";\n\nexport const AccountContainer = styled.div`\n  margin: 2px;\n  border-style: solid;\n  border-radius: 8px;\n  min-width: 8em;\n  display: flex;\n  flex-direction: column;\n  background: antiquewhite;\n  cursor: pointer;\n`;\n\nexport const AccountName = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: left;\n  padding-left: 0.25rem;\n  padding-top: 0.5rem;\n`;\n\nexport const Name = styled.p`\n  font-weight: bold;\n  padding: 0.2rem;\n  margin: unset;\n`;\n\nexport const Total = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: left;\n  font-weight: bold;\n  padding-left: 0.25rem;\n  padding-bottom: 1rem;\n`;\n","import React from \"react\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport { AccountContainer, AccountName, Name, Total } from \"./account.styles\";\n\nimport { setCurrentAccount } from \"../../redux/account/account.action\";\n\nconst Account = ({ account }) => {\n  const { account_id, account_name, account_type, total } = account;\n  const dispatch = useDispatch();\n\n  return (\n    <AccountContainer\n      onClick={() => {\n        dispatch(setCurrentAccount(account_id));\n      }}\n    >\n      <AccountName>\n        <Name>{account_name}</Name>\n        <Name>{account_type}</Name>\n      </AccountName>\n      <Total>{total ? `$ ${total}` : \"$ 0.00\"}</Total>\n    </AccountContainer>\n  );\n};\n\nexport default Account;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { globalVars } from \"../../hooks/global.js\";\n\nimport { setAccounts } from \"../../redux/account/account.action\";\n\nimport { selectAccountList } from \"../../redux/account/account.selector\";\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\n\nimport Account from \"../account/account.component\";\n\nimport \"./account-list.styles.scss\";\n\nconst AccountList = () => {\n  const accountList = useSelector(selectAccountList);\n  const currentUser = useSelector(selectCurrentUser);\n\n  const dispatch = useDispatch();\n  const [refresh, setRefresh] = useState(true);\n\n  useEffect(() => {\n    fetch(`${globalVars.HOST}accounts`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_id: currentUser.user_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(setAccounts(data));\n      });\n  }, [currentUser.user_id, dispatch, refresh]);\n\n  return (\n    <div>\n      <p onClick={()=>{\n        setRefresh(!refresh);\n      }}>Refresh</p>\n      {accountList.map((account) => (\n        <Account key={account.account_id} account={account} />\n      ))}\n    </div>\n  );\n};\n\nexport default AccountList;\n","import React from \"react\";\n\nimport AccountList from \"../../components/account-list/account-list.component.jsx\";\n\nconst AccountPage = () => (\n  <div>\n    <div className=\"flex justify-center\">\n      <h2 className=\"Account\">Accounts </h2>\n    </div>\n    <AccountList />\n  </div>\n);\n\nexport default AccountPage;\n","import React from \"react\";\n\nimport AccountPage from \"../../pages/account-page/account-page.component\";\n\nimport \"./sidebar.styles.scss\";\n\nconst SideBar = () => {\n  return (\n    <div className=\"side-bar\">\n      <AccountPage />\n    </div>\n  );\n};\n\nexport default SideBar;\n","const CategoryActionTypes = {\n  SET_CATEGORIES: \"SET_CATEGORIES\",\n};\n\nexport default CategoryActionTypes;\n","import styled, { css } from \"styled-components\";\nimport Select from \"react-select\";\n\nconst Input = css`\n  font-size: 1.25rem;\n  padding: 0.5rem;\n`;\n\nexport const InsertTransactionContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const InsertFormContainer = styled.form`\n  display: flex;\n  align-items: center;\n  /* padding: 2rem; */\n  padding-bottom: 2rem;\n  border-radius: 0.5rem;\n`;\n\nexport const InputContainer = styled.input`\n  ${Input}\n\n  width: 20%;\n`;\n\nexport const VendorInput = styled.input`\n  ${Input}\n  width: 25%;\n`;\n\nexport const Selector = styled(Select)`\n  ${Input}\n  width: 30%;\n`;\n\nexport const CustomButton = styled.button`\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  transform: translateZ(0);\n  transition: transform 0.25s ease-out;\n  text-transform: none;\n  display: inline-block;\n  width: 15%;\n  padding-bottom: 0.5rem;\n  padding-top: 0.5rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  text-decoration: none;\n  transition: color 0.15s ease-in;\n  background-color: #dae6ff;\n  color: black;\n  ${Input}\n`;\n\n// .btn - white {\n// \tpadding: 0;\n// \tbackground: white;\n// }\n\n// .form {\n// \tdisplay: flex;\n//     align-items: center;\n// }\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { globalVars } from \"../../hooks/global\";\n\nimport { selectCurrentAccount } from \"../../redux/account/account.selector\";\nimport { updateAccountTotal, updateAccountPending } from \"../../redux/account/account.action\";\nimport {\n  addIncome,\n} from \"../../redux/transaction/transaction.action\";\nimport { setCategories } from \"../../redux/category/category.action\";\nimport { selectCategories } from \"../../redux/category/category.selector\";\n\nimport {\n  InsertTransactionContainer,\n  InsertFormContainer,\n  InputContainer,\n  VendorInput,\n  Selector,\n  CustomButton,\n} from \"./insert-transaction.styles\";\n\nconst InsertTransaction = () => {\n  const currentAccount = useSelector(selectCurrentAccount);\n  const { categoryList } = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const [expenseButton, setExpenseButton] = useState(false); \n  const [transaction, setTransaction] = useState({\n    date: new Date().toISOString().slice(0, 10),\n    transaction_id: uuidv4(),\n    vendor: \"\",\n    amount: \"\",\n    status: true,\n    category: {},\n    account_id: currentAccount,\n  });\n  const { date, vendor, amount, status, category } = transaction;\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setTransaction({ ...transaction, [name]: value });\n  };\n\n  const onStatusChange = () => {\n    setTransaction({ ...transaction, status: !status });\n  };\n\n  const onCategoryChange = (event) => {\n    setTransaction({ ...transaction, category: event });\n  };\n\n  const onCommitExpense = () => {\n    if (!vendor || !amount || !category) {\n      alert(`Required Field is missing`);\n    } else {\n      setTransaction({ ...transaction, amount: -amount });\n      setExpenseButton(true)\n    }\n  };\n\n  const onCommitTransaction = () => {\n    if (!vendor || !amount || !category) {\n      alert(`Required Field is missing`);\n    } else {\n      addToPendingOrTotal()\n      dispatch(addIncome(transaction));\n      setTransaction({ ...transaction, vendor: \"\", amount: 0 });\n    }\n  };\n\n  function addToPendingOrTotal() {\n    if (status) {\n      dispatch(updateAccountTotal(amount));\n      dispatch(updateAccountPending(amount));\n    } else {\n      dispatch(updateAccountPending(amount));\n    }\n  }\n\n  const addToTransactions = () => {\n    dispatch(addIncome(transaction));\n    setTransaction({ ...transaction, vendor: \"\", amount: 0 });\n  }\n  useEffect(() => {\n    try {\n      fetch(globalVars.HOST + \"category\")\n        .then((response) => response.json())\n        .then((data) => {\n          dispatch(setCategories(data));\n        });\n    } catch (error) {\n      console.error(error);\n    }\n    if (expenseButton) {\n      addToPendingOrTotal();\n      addToTransactions();\n      setExpenseButton(false);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, expenseButton]);\n\n  return (\n    <InsertTransactionContainer>\n      <InsertFormContainer onSubmit={(e) => e.preventDefault()}>\n        <InputContainer\n          type=\"date\"\n          id=\"date\"\n          name=\"date\"\n          value={date}\n          onChange={handleChange}\n        />\n        <VendorInput\n          type=\"text\"\n          placeholder=\"Vendor\"\n          id=\"vendor\"\n          name=\"vendor\"\n          value={vendor}\n          onChange={handleChange}\n          required\n        />\n        <InputContainer\n          type=\"double\"\n          placeholder=\"Amount\"\n          id=\"amount\"\n          name=\"amount\"\n          value={amount}\n          onChange={handleChange}\n        />\n        <CustomButton id=\"status\" onClick={onStatusChange}>\n          {status ? \"Cleared\" : \"Pending\"}\n        </CustomButton>\n        <Selector\n          defaultValue={categoryList[0]}\n          onChange={onCategoryChange}\n          options={categoryList}\n        />\n        <CustomButton\n          id=\"CommitTransactionBTN\"\n          onClick={() => {\n            setTransaction({ ...transaction, amount: -amount });\n            onCommitExpense();\n          }}\n        >\n          Expense\n        </CustomButton>\n        <CustomButton id=\"CommitTransactionBTN\" onClick={onCommitTransaction}>\n          Income\n        </CustomButton>\n      </InsertFormContainer>\n    </InsertTransactionContainer>\n  );\n};\n\nexport default InsertTransaction;\n","import CategoryActionTypes from \"./category.types\";\n\nexport const setCategories = (categories) => ({\n  type: CategoryActionTypes.SET_CATEGORIES,\n  payload: categories,\n});\n","import styled from \"styled-components\";\n\nexport const TransactionPageContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  border: solid;\n  height: 85vh;\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectEditTransactionHidden } from \"../../redux/transaction/transaction.selector\";\n\nimport Scroll from \"../../components/scroll/scroll.component\";\nimport TransactionList from \"../../components/transaction-list/transaction-list.component\";\nimport TransactionEditDropDown from \"../../components/edit-transaction-dropdown/edit-transaction-dropdown.component\";\nimport SideBar from \"../../components/sidebar/sidebar.component\";\nimport InsertTransaction from \"../../components/insert-transaction/insert-transaction.component\";\n\nimport { TransactionPageContainer } from \"./transactions-page.styles\";\n\nconst TransactionPage = () => {\n  const hideEditTransactionDropdown = useSelector(selectEditTransactionHidden);\n\n  return (  \n    <TransactionPageContainer>\n      <SideBar />\n      <Scroll>\n        <InsertTransaction />\n        <TransactionList />\n        {hideEditTransactionDropdown ? null : <TransactionEditDropDown />}\n      </Scroll>\n    </TransactionPageContainer>\n  );\n};\n\nexport default TransactionPage;\n","const BillActionTypes = {\n  ADD_BILL: \"ADD_BILL\",\n  SET_BILLS: \"SET_BILLS\",\n  SET_CURRENT_BILL: \"SET_CURRENT_BILL\",\n  TOGGLE_BILL_HIDDEN: \"TOGGLE_BILL_HIDDEN\",\n  TOGGLE_EDIT_BILL_HIDDEN: \"TOGGLE_EDIT_BILL_HIDDEN\",\n  PAY_BILL: \"PAY_BILL\",\n  UPDATE_BILL: \"UPDATE_BILL\",\n};\n\nexport default BillActionTypes;\n","import BillActionTypes from \"./bills.types\";\n\nexport const setBills = (bills) => ({\n  type: BillActionTypes.SET_BILLS,\n  payload: bills,\n});\n\nexport const setCurrentBill = (bill) => ({\n  type: BillActionTypes.SET_CURRENT_BILL,\n  payload: bill,\n});\n\nexport const toggleBillDropdownHidden = () => ({\n  type: BillActionTypes.TOGGLE_BILL_HIDDEN,\n});\n\nexport const toggleEditBillDropdownHidden = () => ({\n  type: BillActionTypes.TOGGLE_EDIT_BILL_HIDDEN,\n});\n\nexport const paySelectedBill = (bill) => ({\n  type: BillActionTypes.PAY_BILL,\n  payload: bill,\n});\n\nexport const updateSelectedBill = (bill) => ({\n  type: BillActionTypes.UPDATE_BILL,\n  payload: bill,\n});\n","import { createSelector } from \"reselect\";\n\nexport const selectBills = (state) => state.bills;\n\nexport const selectBillList = createSelector(\n  [selectBills],\n  (bills) => bills.billList\n);\n\nexport const selectCurrentBill = createSelector(\n  [selectBills],\n  (bills) => bills.currentBill\n);\n\nexport const selectBillHidden = createSelector(\n  [selectBills],\n  (bills) => bills.hideBillDropdown\n);\n\nexport const selectEditBillHidden = createSelector(\n  [selectBills],\n  (bills) => bills.hideEditBillDropdown\n);\n","import styled from \"styled-components\";\n\nexport const BillDropDownContainer = styled.div`\n  position: absolute;\n  width: 240px;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid black;\n  background-color: white;\n  top: 90px;\n  right: 100px;\n  z-index: 5;\n`;\n\nexport const BillItemsDiv = styled.div`\n  height: 240px;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Select from \"react-select\";\n\nimport {\n  toggleBillDropdownHidden,\n  setCurrentBill,\n  paySelectedBill,\n} from \"../../redux/bills/bills.actions\";\nimport { selectCurrentBill } from \"../../redux/bills/bills.selector\";\nimport { selectAccountList } from \"../../redux/account/account.selector\";\n\nimport { BillDropDownContainer } from \"./bill-dropdown.styles\";\n\nconst BillDropDown = () => {\n  const currentBill = useSelector(selectCurrentBill);\n  const accounts = useSelector(selectAccountList);\n  const dispatch = useDispatch();\n  const d = new Date(currentBill.due_day);\n  const next_month = d.setMonth(d.getMonth() + 1);\n  const [bill, setBill] = useState({\n    bill_id: currentBill.bill_id,\n    date: new Date(currentBill.due_day).toISOString().slice(0, 10),\n    vendor: currentBill.bill_name,\n    category_id: currentBill.category_id,\n    status: \"Pending\",\n    amount: Number(currentBill.amount.replace(/[^0-9.-]+/g, \"\")) * -1,\n    account_id: \"\",\n    next_due_date: new Date(next_month).toISOString().slice(0, 10),\n    bill_website: currentBill.bill_website,\n  });\n  const { vendor, amount, date, next_due_date } = bill;\n\n  accounts.forEach(\n    (e) => (\n      // eslint-disable-next-line no-sequences\n      (e.value = e.account_id),\n      (e.label = e.account_name + \" \" + e.account_type)\n    )\n  );\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setBill({ ...bill, [name]: value });\n  };\n\n  const handleAccountChange = (event) => {\n    setBill({ ...bill, account_id: event.account_id });\n  };\n\n  const handlePayment = () => {\n    handleClose();\n\n    dispatch(paySelectedBill(bill));\n  };\n\n  const handleClose = () => {\n    dispatch(toggleBillDropdownHidden());\n    dispatch(setCurrentBill(null));\n  };\n\n  return (\n    <BillDropDownContainer id={currentBill.bill_id}>\n      <div>\n        <p>Date</p>\n        <input\n          type=\"date\"\n          id=\"date\"\n          name=\"date\"\n          value={date}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Vendor</p>\n        <input\n          type=\"text\"\n          id=\"vendor\"\n          name=\"vendor\"\n          value={vendor}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Account</p>\n        <Select\n          defaultValue={accounts[0]}\n          options={accounts}\n          onChange={handleAccountChange}\n        />\n      </div>\n      <div>\n        <p>Payment</p>\n        <input\n          type=\"text\"\n          id=\"amount\"\n          name=\"amount\"\n          value={amount}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Next Date</p>\n        <input\n          type=\"date\"\n          id=\"next_due_date\"\n          name=\"next_due_date\"\n          value={next_due_date}\n          onChange={handleChange}\n        />\n      </div>\n      <button onClick={handlePayment}>Commit</button>\n      <button onClick={handleClose}>Cancel</button>\n    </BillDropDownContainer>\n  );\n};\n\nexport default BillDropDown;\n","import styled from \"styled-components\";\n\nexport const BillDropDownContainer = styled.div`\n  position: absolute;\n  width: 240px;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid black;\n  background-color: white;\n  top: 90px;\n  right: 100px;\n  z-index: 5;\n`;\n\nexport const BillItemsDiv = styled.div`\n  height: 240px;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { formatDate } from \"../../hooks/global\";\n\nimport { selectCurrentBill } from \"../../redux/bills/bills.selector\";\nimport {\n  updateSelectedBill,\n  setCurrentBill,\n  toggleEditBillDropdownHidden,\n} from \"../../redux/bills/bills.actions\";\n\nimport { BillDropDownContainer } from \"./edit-bill-dropdown.styles\";\n\nconst BillEditDropDown = () => {\n  const currentBill = useSelector(selectCurrentBill);\n  const dispatch = useDispatch();\n  const [bill, setBill] = useState({\n    bill_id: currentBill.bill_id,\n    date: formatDate(currentBill.due_day),\n    vendor: currentBill.bill_name,\n    category_id: currentBill.category_id,\n    status: false,\n    amount: Number(currentBill.amount.replace(/[^0-9.-]+/g, \"\")) * -1,\n    next_due_date: new Date(currentBill.due_day).toISOString().slice(0, 10),\n    bill_website: currentBill.bill_website,\n  });\n  const { vendor, amount, date, next_due_date } = bill;\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setBill({ ...bill, [name]: value });\n  };\n\n  const handleEdit = () => {\n    dispatch(updateSelectedBill(bill));\n    dispatch(toggleEditBillDropdownHidden());\n  };\n\n  const handleClose = () => {\n    dispatch(toggleEditBillDropdownHidden());\n    dispatch(setCurrentBill(null));\n  };\n\n  return (\n    <BillDropDownContainer id={currentBill.bill_id}>\n      <div>\n        <p>Current Due Date</p>\n        <p>{ date }</p>\n      </div>\n      <div>\n        <p>Vendor</p>\n        <input\n          type=\"text\"\n          id=\"vendor\"\n          name=\"vendor\"\n          value={vendor}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Payment</p>\n        <input\n          type=\"text\"\n          id=\"amount\"\n          name=\"amount\"\n          value={amount}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Next Date</p>\n        <input\n          type=\"date\"\n          id=\"next_due_date\"\n          name=\"next_due_date\"\n          value={next_due_date}\n          onChange={handleChange}\n        />\n      </div>\n      <button onClick={handleEdit}>Update</button>\n      <button onClick={handleClose}>Cancel</button>\n    </BillDropDownContainer>\n  );\n};\n\nexport default BillEditDropDown;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n// import { formatDate } from \"../../hooks/global\";\n\nimport {\n  toggleBillDropdownHidden,\n  toggleEditBillDropdownHidden,\n  setCurrentBill,\n} from \"../../redux/bills/bills.actions\";\n\nconst Bill = ({ bill }) => {\n  const { bill_id, bill_name, bill_website, due_day, amount } = bill;\n  const dispatch = useDispatch();\n\n  function getDay(date) {\n    const d = new Date(date);\n    const day = d.getUTCDate();\n    const month = d.getUTCMonth() + 1;\n\n    return month + \"/\" + day;\n  }\n\n  const formatedDay = getDay(due_day);\n\n  const handlePayBill = () => {\n    dispatch(toggleBillDropdownHidden());\n    dispatch(setCurrentBill(bill));\n    if (bill_website) {\n      goToWebSite();\n    }\n  };\n\n  const handleEditBill = () => {\n    dispatch(setCurrentBill(bill));\n    dispatch(toggleEditBillDropdownHidden());\n  };\n\n  const goToWebSite = () => {\n    window.open(bill_website, \"_blank\");\n  };\n\n  return (\n    <div className=\"billDiv\" id={bill_id}>\n      <p className=\"bill\">{formatedDay}</p>\n      <p className=\"vendor\">{bill_name}</p>\n      <p className=\"bill\">{amount}</p>\n      <p className=\"bill paybill\" onClick={handlePayBill}>\n        Pay\n      </p>\n      <p className=\"bill editbill paybill\" onClick={handleEditBill}>\n        Edit\n      </p>\n    </div>\n  );\n};\n\nexport default Bill;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Bill from \"../bill/bill.component\";\n\nimport { selectBillList } from \"../../redux/bills/bills.selector\";\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\nimport { setBills } from \"../../redux/bills/bills.actions\";\n\nimport \"./bills.styles.scss\";\n\nconst Bills = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectCurrentUser);\n  const bills = useSelector(selectBillList);\n\n  useEffect(() => {\n    fetch(`https://star-ship-enterprise.herokuapp.com/upcomingBills`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_id: currentUser.user_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(setBills(data));\n      });\n  }, [dispatch, currentUser]);\n\n  return (\n    <div>\n      <div className=\"heading\">\n        <p className=\"bill Title\">Due Day</p>\n        <p className=\"vendor Title\">Vender</p>\n        <p className=\"bill Title\">Amount</p>\n        <p className=\"bill Title\">Pay</p>\n        <p className=\"bill Title editbill\">Edit</p>\n      </div>\n      {bills.map((bill) => {\n        return <Bill key={bill.bill_id} bill={bill} />;\n      })}\n    </div>\n  );\n};\n\nexport default Bills;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport BillDropDown from \"../../components/bill-dropdown/bill-dropdown.component\";\nimport BillEditDropDown from \"../../components/edit-bill-dropdown/edit-bill-dropdown.component\";\n\nimport Bills from \"../../components/bills/bills.component\";\n\nimport {\n  selectBillHidden,\n  selectEditBillHidden,\n} from \"../../redux/bills/bills.selector\";\n\nimport \"./billspage.styles.scss\";\n\nconst BillsPage = () => {\n  const hideBillDropdown = useSelector(selectBillHidden);\n  const hideEditBillDropdown = useSelector(selectEditBillHidden);\n\n  return (\n    <div>\n      <Bills />\n      {hideBillDropdown ? null : <BillDropDown />}\n      {hideEditBillDropdown ? null : <BillEditDropDown />}\n    </div>\n  );\n};\n\nexport default BillsPage;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Navigation from \"../../components/navigation/navigation.component\";\nimport TransactionPage from \"../transactions-page/transactions-page.component\";\nimport BillsPage from \"../bills-page/billspage.component\";\n\nimport \"./homepage.styles.scss\";\n\nconst HomePage = () => {\n  const main_page = \"/budget_frontend\";\n\n  return (\n    <div className=\"homepage\">\n      <Navigation />\n      <div>\n        <Switch>\n          <Route exact path={`${main_page}/transactions`} component={TransactionPage} ></Route>\n          <Route exact path={`${main_page}/bills`} component={BillsPage} ></Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","const UserActionTypes = {\n  SET_CURRENT_USER: \"SET_CURRENT_USER\",\n  LOG_OUT_USER: \"LOG_OUT_USER\",\n  SIGN_IN_SUCCESS: \"SIGN_IN_SUCCESS\",\n  SIGN_IN_START: \"SIGN_IN_START\",\n  SIGN_IN_FAILURE: \"SIGN_IN_FAILURE\",\n};\n\nexport default UserActionTypes;\n","import UserActionTypes from \"./user.types\";\n\nexport const setCurrentUser = (user) => ({\n  type: UserActionTypes.SET_CURRENT_USER,\n  payload: user,\n});\n\nexport const signInSuccess = (user) => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  payload: user,\n});\n\nexport const logOutUser = () => ({\n  type: UserActionTypes.LOG_OUT_USER,\n});\n\nexport const signInStart = (emailAndPassword) => ({\n  type: UserActionTypes.SIGN_IN_START,\n  payload: emailAndPassword,\n});\n\nexport const signInFailure = (error) => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error,\n});\n","import React from \"react\";\n\nimport \"./custom-button.styles.scss\";\n\nconst CustomButton = ({\n  children,\n  isGoogleSignIn,\n  inverted,\n  ...otherProps\n}) => (\n  <button\n    className={`${inverted ? \"inverted\" : \"\"} ${\n      isGoogleSignIn ? \"google-sign-in\" : \"\"\n    } custom-button`}\n    {...otherProps}\n  >\n    {children}\n  </button>\n);\n\nexport default CustomButton;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n// import { useHistory } from \"react-router-dom\";\n\nimport { setCurrentUser } from \"../../redux/user/user.action\";\n\nimport \"./sign-in.styles.scss\";\n\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nconst SignIn = () => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = userCredentials;\n  const dispatch = useDispatch();\n  // const history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (email && password) {\n      fetch(\"https://star-ship-enterprise.herokuapp.com/signin\", {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          email: email,\n          password: password,\n        }),\n      })\n        .then((response) => response.json())\n        .then((user) => {\n          if (user !== \"wrong credentials\") {\n            dispatch(setCurrentUser(user[0]));\n            // history.replace(\"./\");\n          } else {\n            alert(\"Username and Password combination does not exist\");\n          }\n        });\n    } else if (!email) {\n      alert(\"missing email!!\");\n    } else if (!password) {\n      alert(\"missing password!!\");\n    }\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n  return (\n    <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n      <main className=\"pa4 black-80\">\n        <div className=\"measure\">\n          <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n          <form onSubmit={handleSubmit}>\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n              Email\n            </label>\n            <input\n              className=\"pa2 input-reset ba bg-transparent hover-bg-black  w-100\"\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              value={email}\n              label=\"email\"\n              required\n            />\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n              Password\n            </label>\n            <input\n              className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\"\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              value={password}\n              label=\"password\"\n              required\n            />\n            <div className=\"buttons\">\n              <CustomButton type=\"submit\">{`Sign In`}</CustomButton>\n            </div>\n          </form>\n        </div>\n      </main>\n    </article>\n  );\n};\n\nexport default SignIn;\n","import React from \"react\";\n\nimport { globalVars } from \"../../hooks/global\";\n\nimport \"./sign-up.styles.scss\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      firstname: \"\",\n      lastname: \"\",\n    };\n  }\n\n  onFirstNameChange = (event) => {\n    this.setState({ firstname: event.target.value });\n  };\n\n  onLastNameChange = (event) => {\n    this.setState({ lastname: event.target.value });\n  };\n\n  onEmailChange = (event) => {\n    this.setState({ email: event.target.value });\n  };\n  onPasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  onSubmitRegister = () => {\n    fetch(globalVars.HOST + \"register\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n      }),\n    })\n      .then((response) => response.json())\n      .then((user) => {\n        if (user) {\n          if (user.user_id) {\n            // this.props.loadUser(user)\n            this.props.onChange();\n          }\n        }\n      });\n  };\n\n  render() {\n    const { onRegisterChange } = this.props;\n    return (\n      <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  First Name\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"firstname\"\n                  id=\"firstname\"\n                  onChange={this.onFirstNameChange}\n                  required\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Last Name\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"lastname\"\n                  id=\"lastname\"\n                  onChange={this.onLastNameChange}\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n              <label className=\"pa0 ma0 lh-copy f6 pointer\"></label>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSubmitRegister}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Register\"\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p\n                onClick={() => onRegisterChange(\"signin\")}\n                className=\"f6 link dim black db pointer\"\n              >\n                Sign In\n              </p>\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\n\nimport SignIn from \"../../components/sign-in/sign-in.component\";\nimport SignUp from \"../../components/sign-up/sign-up.component\";\n\nimport \"./sign-in-and-sign-up.styles.scss\";\n\nconst SignInOrSignUpPage = () => (\n  <div className=\"sign-in-or-sign-up\">\n    <SignIn />\n    <SignUp />\n  </div>\n);\n\nexport default SignInOrSignUpPage;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport \"./App.css\";\n\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport SignInOrSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\";\n\nimport { selectCurrentUser } from \"./redux/user/user.selector\";\n\nconst App = () => {\n  const currentUser = useSelector(selectCurrentUser);\n  return <div>{currentUser ? <HomePage /> : <SignInOrSignUpPage />}</div>;\n};\n\nexport default App;\n","import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\n\nimport { signInFailure, signInSuccess } from \"./user.action\";\n\nfunction* fetchUser(email, password) {\n  try {\n    const req = yield fetch(\n      \"https://star-ship-enterprise.herokuapp.com/signin\",\n      {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          email: email,\n          password: password,\n        }),\n      }\n    );\n    const user = yield req.user();\n    console.log(user);\n  } catch (error) {\n    console.log(`ERROR: ${error}`);\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const user = yield fetchUser(email, password);\n\n    yield put(signInSuccess(user));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onSignInStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas() {\n  yield all([call(onSignInStart)]);\n}\n","import { all, call } from \"redux-saga/effects\";\n\nimport { userSagas } from \"./user/user.sagas\";\n\nexport default function* rootSaga() {\n  yield all([call(userSagas)]);\n}\n","export const updateAccountTotal = (accounts, currentAccount, balance) => {\n  const accountToChange = accounts.find(\n    (account) => account.account_id === currentAccount\n  );\n  return accounts.map((account) =>\n    account.account_id === currentAccount\n      ? {\n          ...account,\n          total: (\n            parseFloat(accountToChange.total) + parseFloat(balance)\n          ).toFixed(2),\n        }\n      : account\n  );\n};\n\nexport const updateAccountPending = (accounts, currentAccount, balance) => {\n  const accountToChange = accounts.find(\n    (account) => account.account_id === currentAccount\n  );\n  return accounts.map((account) =>\n    account.account_id === currentAccount\n      ? {\n          ...account,\n          pending: (\n            parseFloat(accountToChange.pending) + parseFloat(balance)\n          ).toFixed(2),\n        }\n      : account\n  );\n};\n","import AccountActionTypes from \"./account.types\";\nimport { updateAccountTotal, updateAccountPending } from \"./account.utils\";\n\nconst INITIAL_STATE = {\n  accountList: [],\n  currentAccount: null,\n};\n\nconst accountReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case AccountActionTypes.SET_ACCOUNTS:\n      return {\n        ...state,\n        accountList: action.payload,\n      };\n    case AccountActionTypes.SET_CURRENT_ACCOUNT:\n      return {\n        ...state,\n        currentAccount: action.payload,\n      };\n    case AccountActionTypes.UPDATE_ACCOUNT_TOTAL:\n      return {\n        ...state,\n        accountList: updateAccountTotal(\n          state.accountList,\n          state.currentAccount,\n          action.payload\n        ),\n      };\n      case AccountActionTypes.UPDATE_ACCOUNT_PENDING:\n        return {\n          ...state,\n          accountList: updateAccountPending(\n            state.accountList,\n            state.currentAccount,\n            action.payload\n          ),\n        };\n    default:\n      return state;\n  }\n};\n\nexport default accountReducer;\n","import UserActionTypes from \"./user.types\";\n\nconst INITIAL_STATE = {\n  currentUser: null,\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SET_CURRENT_USER:\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return {\n        ...state,\n        currentUser: action.payload,\n      };\n    case UserActionTypes.LOG_OUT_USER:\n      return {\n        INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { insertTransaction, updateTransactionStatusAPI, fetchUpdateTransaction } from \"../../hooks/global\";\n\nexport const addTransactionToList = (transactions, transactionToAdd) => {\n  const transaction = {\n    date: transactionToAdd.date,\n    vendor: transactionToAdd.vendor,\n    category_id: transactionToAdd.category.value,\n    status: transactionToAdd.status,\n    amount: transactionToAdd.amount,\n    account_id: transactionToAdd.account_id,\n  };\n  insertTransaction(transaction);\n\n  transactionToAdd = {\n    date: transactionToAdd.date,\n    vendor: transactionToAdd.vendor,\n    label: transactionToAdd.category.label,\n    status: transactionToAdd.status,\n    amount: transactionToAdd.amount,\n    account_id: transactionToAdd.account_id,\n  };\n  return [transactionToAdd, ...transactions];\n};\n\nexport const updateStatus = (transactions, transaction) => {\n  updateTransactionStatusAPI(transaction);\n  return [...transactions];\n};\n\nexport const updateTransaction = (transactionToUpdate) => {\n  fetchUpdateTransaction(transactionToUpdate);\n};\n","import TransactionActionTypes from \"./transaction.types\";\nimport { addTransactionToList, updateStatus, updateTransaction } from \"./transaction.utils\";\n\nconst INITIAL_STATE = {\n  transactionList: [],\n  hideTransactionDropdown: true,\n  hideEditTransactionDropdown: true,\n  currentTransaction: null,\n};\n\nconst transactionReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TransactionActionTypes.SET_TRANSACTIONS:\n      return {\n        ...state,\n        transactionList: action.payload,\n      };\n    case TransactionActionTypes.ADD_TRANSACTION:\n      return {\n        ...state,\n        transactionList: addTransactionToList(\n          state.transactionList,\n          action.payload\n        ),\n      };\n    case TransactionActionTypes.ADD_EXPENSE:\n      return {\n        ...state,\n        transactionList: addTransactionToList(\n          state.transactionList,\n          action.payload\n        ),\n      };\n    case TransactionActionTypes.UPDATE_STATUS:\n      return {\n        ...state,\n        transactionList: updateStatus(\n          state.transactionList,\n          action.payload\n        ),\n      };\n    case TransactionActionTypes.TOGGLE_TRANSACTION_HIDDEN:\n      return {\n        ...state,\n        hideTransactionDropdown: !state.hideTransactionDropdown,\n      };\n    case TransactionActionTypes.TOGGLE_EDIT_TRANSACTION_HIDDEN:\n      return {\n        ...state,\n        hideEditTransactionDropdown: !state.hideEditTransactionDropdown,\n      };\n    case TransactionActionTypes.SET_CURRENT_TRANSACTION:\n      return {\n        ...state,\n        currentTransaction: action.payload,\n      };\n    case TransactionActionTypes.UPDATE_TRANSACTION:\n      return {\n        ...state,\n        transactionToUpdate: updateTransaction(action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default transactionReducer;\n","import CategoryActionTypes from \"./category.types\";\n\nconst INITIAL_STATE = {\n  categoryList: [],\n};\n\nconst categoryReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CategoryActionTypes.SET_CATEGORIES:\n      return {\n        ...state,\n        categoryList: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default categoryReducer;\n","import { insertTransaction, fetchUpdateBill } from \"../../hooks/global\";\n\nexport const addBillToUpcommingBills = (bills, billToAdd) => {\n  return [...bills, billToAdd];\n};\n\nexport const payBill = (billToPay) => {\n  const transaction = {\n    date: billToPay.date,\n    vendor: billToPay.vendor,\n    category_id: billToPay.category_id,\n    status: false,\n    amount: billToPay.amount,\n    account_id: billToPay.account_id,\n  };\n  insertTransaction(transaction);\n  updateBill(billToPay);\n};\n\nexport const updateBill = (billToUpdate) => {\n  fetchUpdateBill(billToUpdate);\n};\n","import BillActionTypes from \"./bills.types\";\nimport { addBillToUpcommingBills, payBill, updateBill } from \"./bills.utils\";\n\nconst INITIAL_STATE = {\n  billList: [],\n  hideBillDropdown: true,\n  hideEditBillDropdown: true,\n  currentBill: null,\n};\n\nconst billReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case BillActionTypes.SET_BILLS:\n      return {\n        ...state,\n        billList: action.payload,\n      };\n    case BillActionTypes.ADD_BILL:\n      return {\n        ...state,\n        billToAdd: addBillToUpcommingBills(state.billToAdd, action.payload),\n      };\n    case BillActionTypes.PAY_BILL:\n      return {\n        ...state,\n        billToPay: payBill(action.payload),\n      };\n    case BillActionTypes.TOGGLE_BILL_HIDDEN:\n      return {\n        ...state,\n        hideBillDropdown: !state.hideBillDropdown,\n      };\n    case BillActionTypes.TOGGLE_EDIT_BILL_HIDDEN:\n      return {\n        ...state,\n        hideEditBillDropdown: !state.hideEditBillDropdown,\n      };\n    case BillActionTypes.SET_CURRENT_BILL:\n      return {\n        ...state,\n        currentBill: action.payload,\n      };\n    case BillActionTypes.UPDATE_BILL:\n      return {\n        ...state,\n        updateToBill: updateBill(action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default billReducer;\n","import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport accountReducer from \"./account/account.reducer\";\nimport userReducer from \"./user/user.reducer\";\nimport transactionReducer from \"./transaction/transaction.reducer\";\nimport categoryReducer from \"./category/category.reducer\";\nimport billReducer from \"./bills/bills.reducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\", \"transactions\", \"accounts\", \"categories\"],\n};\n\nconst appReducer = combineReducers({\n  user: userReducer,\n  transactions: transactionReducer,\n  accounts: accountReducer,\n  categories: categoryReducer,\n  bills: billReducer,\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === \"USER_LOGOUT\") {\n    return appReducer(undefined, action);\n  }\n  return appReducer(state, action);\n};\n\nexport default persistReducer(persistConfig, rootReducer);\n","import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootSaga from \"./root-saga\";\n\nimport rootReducer from \"./root-reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from \"react\";\n\nconst Loading = () => <div>Loading</div>;\n\nexport default Loading;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { store, persistor } from \"./redux/store\";\nimport Loading from \"./components/loading/loading.component\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate loading={<Loading />} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </BrowserRouter>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}