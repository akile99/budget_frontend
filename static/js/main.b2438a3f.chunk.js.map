{"version":3,"sources":["redux/user/user.selector.js","redux/account/account.selector.js","components/account-info/account-info.styles.jsx","components/current-total/current-total.component.jsx","components/current-pending/current-pending.component.jsx","components/account-info/account-info.component.jsx","components/dropdown-menu/dropdown-menu.component.jsx","components/navigation/navigation.styles.jsx","components/navigation/navigation.component.jsx","redux/root-action.js","components/scroll/scroll.component.jsx","hooks/global.js","redux/transaction/transaction.types.js","redux/transaction/transaction.action.js","redux/transaction/transaction.selector.js","redux/account/account.types.js","redux/account/account.action.js","components/transaction/transaction.styles.jsx","components/transaction/transaction.component.jsx","components/transaction-list/transaction-list.styles.jsx","components/transaction-list/transaction-list.component.jsx","components/account/account.styles.jsx","components/account/account.component.jsx","components/account-list/account-list.component.jsx","pages/account-page/account-page.component.jsx","components/sidebar/sidebar.component.jsx","redux/category/category.types.js","redux/category/category.selector.js","components/insert-transaction/insert-transaction.styles.jsx","components/insert-transaction/insert-transaction.component.jsx","redux/category/category.action.js","pages/transactions-page/transactions-page.styles.jsx","pages/transactions-page/transactions-page.component.jsx","redux/bills/bills.types.js","redux/bills/bills.actions.js","redux/bills/bills.selector.js","components/bill-dropdown/bill-dropdown.styles.jsx","components/bill-dropdown/bill-dropdown.component.jsx","components/edit-bill-dropdown/edit-bill-dropdown.styles.jsx","components/edit-bill-dropdown/edit-bill-dropdown.component.jsx","components/bill/bill.component.jsx","components/bills/bills.component.jsx","pages/bills-page/billspage.component.jsx","pages/homepage/homepage.component.jsx","redux/user/user.types.js","redux/user/user.action.js","components/custom-button/custom-button.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx","App.js","redux/user/user.sagas.js","redux/root-saga.js","redux/account/account.utils.js","redux/account/account.reducer.js","redux/user/user.reducer.js","redux/transaction/transaction.utils.js","redux/transaction/transaction.reducer.js","redux/category/category.reducer.js","redux/bills/bills.utils.js","redux/bills/bills.reducer.js","redux/root-reducer.js","redux/store.js","components/loading/loading.component.jsx","index.js"],"names":["selectCurrentUser","createSelector","state","user","currentUser","selectAccounts","accounts","selectAccountList","accountList","selectCurrentAccount","currentAccount","selectAccountTotal","map","account","account_id","total","selectAccountPending","pending","UserContainer","styled","tr","UserHeading","th","UserInfo","td","UserTable","table","CurrentTotal","useSelector","CurrentPending","AccountInfo","firstname","DropDownMenu","history","useHistory","className","Dropdown","Toggle","variant","id","icon","faBars","size","Menu","Item","onClick","push","NavigationContainer","nav","NavigationInfo","div","NavigationSignOut","mapStateToProps","createStructuredSelector","connect","dispatch","logOutUser","type","replace","Scroll","props","children","globalVars","insertTransaction","transaction","fetch","method","headers","body","JSON","stringify","date","vendor","category_id","status","amount","then","response","json","catch","console","log","updateTransactionStatusAPI","transaction_id","formatDate","d","Date","getUTCMonth","getUTCDate","getUTCFullYear","fetchUpdateBill","bill","bill_id","bill_name","bill_website","due_day","next_due_date","TransactionActionTypes","SET_TRANSACTIONS","ADD_TRANSACTION","ADD_EXPENSE","UPDATE_STATUS","addIncome","payload","selectTransactionList","transactions","transactionList","AccountActionTypes","ADD_ACCOUNT","SET_ACCOUNTS","REMOVE_ACCOUNTS","SET_CURRENT_ACCOUNT","SET_ACCOUNT_BALANCE","UPDATE_ACCOUNT_BALANCE","UPDATE_ACCOUNT_TOTAL","UPDATE_ACCOUNT_PENDING","updateAccountTotal","newBalance","TransactionElement","css","TransactionContainer","DateContainer","VendorContainer","StatusContainer","Dollar","AmountContainer","CategoryContainer","EditContainer","Transaction","current_transaction","useDispatch","label","useState","toISOString","slice","setTransaction","onStatusChange","updateTransactionStatus","year","TransactionListElement","TransactionTable","TransactionListContainer","TransactionList","useEffect","t","setDate","getDate","from_date","split","to_date","data","e","AccountContainer","AccountName","Name","p","Total","Account","account_name","account_type","setCurrentAccount","AccountList","refresh","setRefresh","user_id","AccountPage","SideBar","CategoryActionTypes","SET_CATEGORIES","selectCategories","categories","categoryList","Input","InsertTransactionContainer","InsertFormContainer","form","InputContainer","input","VendorInput","Selector","Select","CustomButton","button","InsertTransaction","expenseButton","setExpenseButton","uuidv4","category","handleChange","event","target","value","name","addToPendingOrTotal","error","onSubmit","preventDefault","onChange","placeholder","required","defaultValue","options","alert","TransactionPageContainer","TransactionPage","BillActionTypes","ADD_BILL","SET_BILLS","SET_CURRENT_BILL","TOGGLE_BILL_HIDDEN","TOGGLE_EDIT_BILL_HIDDEN","PAY_BILL","UPDATE_BILL","setCurrentBill","toggleBillDropdownHidden","toggleEditBillDropdownHidden","selectBills","bills","selectBillList","billList","selectCurrentBill","currentBill","selectBillHidden","hideBillDropdown","selectEditBillHidden","hideEditBillDropdown","BillDropDownContainer","BillDropDown","next_month","setMonth","getMonth","Number","setBill","forEach","handleClose","paySelectedBill","BillEditDropDown","updateSelectedBill","Bill","formatedDay","day","getDay","goToWebSite","window","open","Bills","setBills","BillsPage","HomePage","path","component","UserActionTypes","SET_CURRENT_USER","LOG_OUT_USER","SIGN_IN_SUCCESS","SIGN_IN_START","SIGN_IN_FAILURE","signInSuccess","isGoogleSignIn","inverted","otherProps","SignIn","email","password","userCredentials","setCredentials","setCurrentUser","htmlFor","Register","onFirstNameChange","setState","onLastNameChange","lastname","onEmailChange","onPasswordChange","onSubmitRegister","onRegisterChange","this","React","Component","SignInOrSignUpPage","App","fetchUser","signInWithEmail","onSignInStart","userSagas","req","put","takeLatest","all","call","rootSaga","balance","accountToChange","find","parseFloat","toFixed","updateAccountPending","INITIAL_STATE","accountReducer","action","userReducer","addTransactionToList","transactionToAdd","updateStatus","transactionReducer","categoryReducer","addBillToUpcommingBills","billToAdd","payBill","billToPay","updateBill","billToUpdate","billReducer","updateToBill","persistConfig","key","storage","whitelist","appReducer","combineReducers","persistReducer","undefined","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","rootReducer","applyMiddleware","run","persistor","persistStore","Loading","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b2438a3f.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectUser = (state) => state.user;\n\nexport const selectCurrentUser = createSelector(\n  [selectUser],\n  (user) => user.currentUser\n);\n","import { createSelector } from \"reselect\";\n\nexport const selectAccounts = (state) => state.accounts;\n\nexport const selectAccountList = createSelector(\n  [selectAccounts],\n  (accounts) => accounts.accountList\n);\n\nexport const selectCurrentAccount = createSelector(\n  [selectAccounts],\n  (accounts) => accounts.currentAccount\n);\n\nexport const selectAccountTotal = createSelector([selectAccounts], (accounts) =>\n  accounts.accountList.map((account) =>\n    account.account_id === accounts.currentAccount ? account.total : null\n  )\n);\n\nexport const selectAccountPending = createSelector([selectAccounts], (accounts) =>\n  accounts.accountList.map((account) =>\n    account.account_id === accounts.currentAccount ? account.pending : null\n  )\n);\n","import styled from \"styled-components\";\n\nexport const UserContainer = styled.tr`\n  align-content: center;\n  align-items: center;\n`;\n\nexport const UserHeading = styled.th`\n  font-size: 1.3rem;\n  padding: 0 1.5rem 0 1.5rem;\n  text-align: center;\n`;\n\nexport const UserInfo = styled.td`\n  font-size: 1.1rem;\n  text-align: center;\n`;\n\nexport const UserTable = styled.table`\n  border-collapse: collapse;\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectAccountTotal } from \"../../redux/account/account.selector\";\n\nconst CurrentTotal = () => {\n  const total = useSelector(selectAccountTotal);\n  return total ? <div>{total}</div> : null;\n};\n\nexport default CurrentTotal;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectAccountPending } from \"../../redux/account/account.selector\";\n\nconst CurrentPending = () => {\n  const pending = useSelector(selectAccountPending);\n  return pending ? <div>{pending}</div> : null;\n};\n\nexport default CurrentPending;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\n\nimport { UserContainer, UserInfo, UserTable, UserHeading } from \"./account-info.styles\";\nimport CurrentTotal from \"../current-total/current-total.component\";\nimport CurrentPending from \"../current-pending/current-pending.component.jsx\";\n\nconst AccountInfo = () => {\n  const currentUser = useSelector(selectCurrentUser);\n\n  return (\n    <UserTable>\n        <UserContainer>\n            <UserHeading>Total</UserHeading>\n            <UserHeading>Pending</UserHeading>\n          <UserHeading>Name</UserHeading>\n        </UserContainer>\n      <UserContainer>\n            <UserInfo><CurrentTotal /></UserInfo>\n            <UserInfo><CurrentPending /></UserInfo>\n        <UserInfo>{currentUser.firstname}</UserInfo>\n      </UserContainer>\n    </UserTable>\n  );\n};\n\nexport default AccountInfo;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst DropDownMenu = () => {\n  const history = useHistory();\n  const main_page = \"\";\n\n  return (\n    <div className=\"menu\">\n      <Dropdown>\n        <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\n          <FontAwesomeIcon icon={faBars} size=\"2x\" />\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <div>\n            <Dropdown.Item\n              onClick={() => history.push(`${main_page}/transactions`)}\n            >\n              Transactions\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => history.push(`${main_page}/bills`)}>\n              Bills\n            </Dropdown.Item>\n          </div>\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default DropDownMenu;\n","import styled from \"styled-components\";\n\nexport const NavigationContainer = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  align-content: center;\n  margin-bottom: 1rem;\n`;\n\nexport const NavigationInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const NavigationSignOut = styled.div`\n  font-size: 1.5rem;\n  opacity: 1;\n  transition: opacity 0.15s ease-in;\n  text-decoration: none;\n  padding: 1rem;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\nimport { logOutUser } from \"../../redux/root-action\";\nimport { selectCurrentAccount } from \"../../redux/account/account.selector\";\n\nimport AccountInfo from \"../account-info/account-info.component\";\nimport DropDownMenu from \"../dropdown-menu/dropdown-menu.component\";\n\nimport {\n  NavigationContainer,\n  NavigationInfo,\n  NavigationSignOut,\n} from \"./navigation.styles\";\n\nconst Navigation = ({ logOutUser }) => {\n  const history = useHistory();\n\n  return (\n    <NavigationContainer>\n      <div>\n        <DropDownMenu />\n      </div>\n      <NavigationInfo>\n        <AccountInfo />\n        <NavigationSignOut\n          onClick={() => {\n            history.replace(`/budget_frontend`);\n            logOutUser();\n          }}\n        >\n          Sign Out\n        </NavigationSignOut>\n      </NavigationInfo>\n    </NavigationContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  currentAccount: selectCurrentAccount,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  logOutUser: () => dispatch(logOutUser()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","export const logOutUser = () => ({\n  type: \"USER_LOGOUT\",\n});\n","import React from \"react\";\n\nimport \"./scroll.styles.scss\";\n\nconst Scroll = (props) => {\n  return (\n    <div className=\"scroll\" key={props.children}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","export const globalVars = {\n  HOST: \"https://star-ship-enterprise.herokuapp.com/\",\n  USER_ID: \"368c15a4-0c45-441f-959d-0d33a6542cb3\",\n};\n\nexport const insertTransaction = async (transaction) => {\n  await fetch(globalVars.HOST + \"insert\", {\n    method: \"post\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      date: transaction.date,\n      vendor: transaction.vendor,\n      category_id: transaction.category_id,\n      status: transaction.status,\n      amount: transaction.amount,\n      account_id: transaction.account_id,\n    }),\n  })\n    .then((response) => response.json())\n    .catch(console.log);\n};\n\nexport const updateTransactionStatusAPI = async (transaction) => {\n  await fetch(globalVars.HOST + \"updateStatus\", {\n    method: \"post\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      transaction_id: transaction.transaction_id,\n    }),\n  })\n    .then((response) => response.json())\n    .catch(console.log);\n};\n\nexport const formatDate = (date) => {\n  const d = new Date(date);\n  const month = d.getUTCMonth() + 1;\n  const day = d.getUTCDate();\n  const year = d.getUTCFullYear();\n  return month + \"-\" + day + \"-\" + year;\n};\n\nexport const fetchUpdateBill = async (bill) => {\n  await fetch(globalVars.HOST + \"update_bill\", {\n    method: \"post\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      bill_id: bill.bill_id,\n      bill_name: bill.vendor,\n      amount: bill.amount * -1,\n      bill_website: bill.bill_website,\n      due_day: bill.next_due_date,\n    }),\n  })\n    .then((response) => response.json())\n    .catch(console.log);\n};\n","const TransactionActionTypes = {\n  SET_TRANSACTIONS: \"SET_TRANSACTIONS\",\n  ADD_TRANSACTION: \"ADD_TRANSACTION\",\n  ADD_EXPENSE: \"ADD_EXPENSE\",\n  UPDATE_STATUS: \"UPDATE_STATUS\",\n};\n\nexport default TransactionActionTypes;\n","import TransactionActionTypes from \"./transaction.types\";\n\nexport const setTransactions = (transactions) => ({\n  type: TransactionActionTypes.SET_TRANSACTIONS,\n  payload: transactions,\n});\n\nexport const addTransaction = (transaction) => ({\n  type: TransactionActionTypes.ADD_TRANSACTION,\n  payload: transaction,\n});\n\nexport const addExpense = (transaction) => ({\n  type: TransactionActionTypes.ADD_EXPENSE,\n  payload: transaction,\n});\n\nexport const addIncome = (transaction) => ({\n  type: TransactionActionTypes.ADD_EXPENSE,\n  payload: transaction,\n});\n\nexport const updateTransactionStatus = (transaction) => ({\n  type: TransactionActionTypes.UPDATE_STATUS,\n  payload: transaction,\n});","import { createSelector } from \"reselect\";\n\nexport const selectTransactions = (state) => state.transactions;\n\nexport const selectTransactionList = createSelector(\n  [selectTransactions],\n  (transactions) => transactions.transactionList\n);\n","const AccountActionTypes = {\n  ADD_ACCOUNT: \"ADD_ACCOUNT\",\n  SET_ACCOUNTS: \"SET_ACCOUNTS\",\n  REMOVE_ACCOUNTS: \"REMOVE_ACCOUNTS\",\n  SET_CURRENT_ACCOUNT: \"SET_CURRENT_ACCOUNT\",\n  SET_ACCOUNT_BALANCE: \"SET_ACCOUNT_BALANCE\",\n  UPDATE_ACCOUNT_BALANCE: \"UPDATE_ACCOUNT_BALANCE\",\n  UPDATE_ACCOUNT_TOTAL: \"UPDATE_ACCOUNT_TOTAL\",\n  UPDATE_ACCOUNT_PENDING: \"UPDATE_ACCOUNT_PENDING\",\n};\n\nexport default AccountActionTypes;\n","import AccountActionTypes from \"./account.types\";\n\nexport const setAccounts = (accounts) => ({\n  type: AccountActionTypes.SET_ACCOUNTS,\n  payload: accounts,\n});\n\nexport const setCurrentAccount = (account) => ({\n  type: AccountActionTypes.SET_CURRENT_ACCOUNT,\n  payload: account,\n});\n\nexport const setAccountBalance = (balance) => ({\n  type: AccountActionTypes.SET_ACCOUNT_BALANCE,\n  payload: balance,\n});\n\nexport const updateBalance = (newBalance) => ({\n  type: AccountActionTypes.UPDATE_ACCOUNT_BALANCE,\n  payload: newBalance,\n});\n\nexport const updateAccountTotal = (newBalance) => ({\n  type: AccountActionTypes.UPDATE_ACCOUNT_TOTAL,\n  payload: newBalance,\n});\n\nexport const updateAccountPending = (newBalance) => ({\n  type: AccountActionTypes.UPDATE_ACCOUNT_PENDING,\n  payload: newBalance,\n});\n","import styled, { css } from \"styled-components\";\n\nconst TransactionElement = css`\n  border-style: none solid none none;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nexport const TransactionContainer = styled.tr`\n  outline: 1px solid;\n  display: flex;\n  align-items: center;\n  padding: 0.5rem;\n`;\n\nexport const DateContainer = styled.td`\n  flex-grow: 0;\n  justify-items: left;\n  width: 8rem;\n  text-align: center;\n  ${TransactionElement}\n`;\n\nexport const VendorContainer = styled.td`\n  ${TransactionElement}\n  flex-grow: 2;\n  text-align: left;\n  min-width: 8rem;\n  border-bottom: none;\n  padding-left: 2rem;\n`;\n\nexport const StatusContainer = styled.td`\n  cursor: pointer;\n  min-width: 5em;\n  ${TransactionElement}\n`;\n\nexport const Dollar = styled.td`\n  border-style: none;\n`;\n\nexport const AmountContainer = styled.td`\n  text-align: right;\n  padding-right: 1em;\n  width: 5em;\n  ${TransactionElement}\n`;\n\nexport const CategoryContainer = styled.td`\n  flex-grow: 0;\n  width: 8em;\n  ${TransactionElement}\n`;\n\nexport const EditContainer = styled.td`\n  cursor: pointer;\n  min-width: 5em;\n  ${TransactionElement}\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { updateTransactionStatus } from \"../../redux/transaction/transaction.action\";\nimport { updateAccountTotal } from \"../../redux/account/account.action\";\n\n\nimport {\n  TransactionContainer,\n  DateContainer,\n  VendorContainer,\n  StatusContainer,\n  Dollar,\n  AmountContainer,\n  CategoryContainer,\n  EditContainer\n} from \"./transaction.styles\";\n\nconst Transaction = ({ current_transaction }) => {\n  const dispatch = useDispatch();\n  const { transaction_id, date, vendor, amount, status, label } = current_transaction;\n  const [transaction, setTransaction] = useState({\n    date: new Date().toISOString().slice(0, 10),\n    transaction_id: transaction_id,\n    vendor: vendor,\n    amount: amount,\n    status: status,\n  });\n\n  function formatDate(date) {\n    const d = new Date(date);\n    const year = d.getUTCFullYear();\n    const month = d.getUTCMonth() + 1;\n    const day = d.getUTCDate();\n    return month + \"-\" + day + \"-\" + year;\n  }\n\n  const onStatusChange = () => {\n    setTransaction({ ...transaction, status: !transaction.status })\n    if (transaction.status) {\n      dispatch(updateAccountTotal(-amount))\n    } else {\n      dispatch(updateAccountTotal(amount))\n    }\n    dispatch(updateTransactionStatus(transaction));\n  }\n\n  return (\n    <TransactionContainer key={transaction_id}>\n      <DateContainer>{formatDate(date)}</DateContainer>\n      <VendorContainer>{vendor}</VendorContainer>\n      <Dollar>$</Dollar>\n      <AmountContainer>{amount}</AmountContainer>\n      <StatusContainer\n        onClick={() => {\n          onStatusChange();\n        }}\n      >{ transaction.status ? \"Cleared\" : \"Pending\" } </StatusContainer>\n      <CategoryContainer>{label}</CategoryContainer>\n      <EditContainer>Edit</EditContainer>\n    </TransactionContainer>\n  );\n};\n\nexport default Transaction;\n","import styled, { css } from \"styled-components\";\n\nconst TransactionListElement = css`\n  border-style: none solid none none;\n  margin: 0.5em;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  text-align: center;\n`;\n\nexport const TransactionTable = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n`;\n\nexport const TransactionListContainer = styled.tr`\n  justify-content: center;\n  display: flex;\n  outline: 1px solid;\n`;\n\nexport const DateContainer = styled.th`\n  flex-grow: 0;\n  justify-items: left;\n  width: 8rem;\n  text-align: center;\n  ${TransactionListElement}\n`;\n\nexport const VendorContainer = styled.th`\n  ${TransactionListElement}\n  flex-grow: 2;\n  text-align: left;\n  min-width: 8rem;\n  border-bottom: none;\n  padding-left: 1rem;\n`;\n\nexport const StatusContainer = styled.th`\n  cursor: pointer;\n  min-width: 5em;\n  ${TransactionListElement}\n`;\n\nexport const Dollar = styled.th`\n  border-style: none;\n`;\n\nexport const AmountContainer = styled.th`\n  text-align: right;\n  padding-right: 1em;\n  width: 5em;\n  ${TransactionListElement}\n`;\n\nexport const CategoryContainer = styled.th`\n  flex-grow: 0;\n  width: 8em;\n  ${TransactionListElement}\n`;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { globalVars } from \"../../hooks/global\";\nimport { setTransactions } from \"../../redux/transaction/transaction.action\";\nimport { selectTransactionList } from \"../../redux/transaction/transaction.selector\";\nimport { selectCurrentAccount } from \"../../redux/account/account.selector\";\n\nimport Transaction from \"../transaction/transaction.component\";\n\nimport {\n  TransactionTable,\n  TransactionListContainer,\n  DateContainer,\n  VendorContainer,\n  StatusContainer,\n  Dollar,\n  AmountContainer,\n  CategoryContainer,\n} from \"./transaction-list.styles\";\n\nconst TransactionList = () => {\n  const transactionList = useSelector(selectTransactionList);\n  const currentAccount = useSelector(selectCurrentAccount);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const d = new Date();\n    const t = new Date();\n    d.setDate(d.getDate() - 90);\n    t.setDate(t.getDate() + 60);\n    const from_date = d.toISOString().split(\"T\")[0];\n    const to_date = t.toISOString().split(\"T\")[0];\n    if (!currentAccount) {\n      return;\n    }\n    try {\n      fetch(`${globalVars.HOST}transactions`, {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          account_id: currentAccount,\n          from_date: from_date,\n          to_date: to_date,\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          dispatch(setTransactions(data));\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [currentAccount, dispatch]);\n  return (\n    <TransactionTable>\n      <TransactionListContainer >\n        <DateContainer>Date</DateContainer>\n        <VendorContainer>Vender</VendorContainer>\n        <Dollar>&nbsp;&nbsp;</Dollar>\n        <AmountContainer>Amount</AmountContainer>\n        <StatusContainer>Status</StatusContainer>\n        <CategoryContainer>Category</CategoryContainer>\n        {/* <p className=\"edit transaction\">Edit</p> */}\n      </TransactionListContainer>\n      {transactionList.map((transaction) => (\n        <Transaction\n          key={transaction.transaction_id}\n          current_transaction={transaction}\n        />\n      ))}\n    </TransactionTable>\n  );\n};\n\nexport default TransactionList;\n","import styled from \"styled-components\";\n\nexport const AccountContainer = styled.div`\n  margin: 2px;\n  border-style: solid;\n  border-radius: 8px;\n  min-width: 8em;\n  display: flex;\n  flex-direction: column;\n  background: antiquewhite;\n  cursor: pointer;\n`;\n\nexport const AccountName = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: left;\n  padding-left: 0.25rem;\n  padding-top: 0.5rem;\n`;\n\nexport const Name = styled.p`\n  font-weight: bold;\n  padding: 0.2rem;\n  margin: unset;\n`;\n\nexport const Total = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: left;\n  font-weight: bold;\n  padding-left: 0.25rem;\n  padding-bottom: 1rem;\n`;\n","import React from \"react\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport { AccountContainer, AccountName, Name, Total } from \"./account.styles\";\n\nimport { setCurrentAccount } from \"../../redux/account/account.action\";\n\nconst Account = ({ account }) => {\n  const { account_id, account_name, account_type, total } = account;\n  const dispatch = useDispatch();\n\n  return (\n    <AccountContainer\n      onClick={() => {\n        dispatch(setCurrentAccount(account_id));\n      }}\n    >\n      <AccountName>\n        <Name>{account_name}</Name>\n        <Name>{account_type}</Name>\n      </AccountName>\n      <Total>{total ? `$ ${total}` : \"$ 0.00\"}</Total>\n    </AccountContainer>\n  );\n};\n\nexport default Account;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { globalVars } from \"../../hooks/global.js\";\n\nimport { setAccounts } from \"../../redux/account/account.action\";\n\nimport { selectAccountList } from \"../../redux/account/account.selector\";\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\n\nimport Account from \"../account/account.component\";\n\nimport \"./account-list.styles.scss\";\n\nconst AccountList = () => {\n  const accountList = useSelector(selectAccountList);\n  const currentUser = useSelector(selectCurrentUser);\n\n  const dispatch = useDispatch();\n  const [refresh, setRefresh] = useState(true);\n\n  useEffect(() => {\n    fetch(`${globalVars.HOST}accounts`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_id: currentUser.user_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(setAccounts(data));\n      });\n  }, [currentUser.user_id, dispatch, refresh]);\n\n  return (\n    <div>\n      <p onClick={()=>{\n        setRefresh(!refresh);\n      }}>Refresh</p>\n      {accountList.map((account) => (\n        <Account key={account.account_id} account={account} />\n      ))}\n    </div>\n  );\n};\n\nexport default AccountList;\n","import React from \"react\";\n\nimport AccountList from \"../../components/account-list/account-list.component.jsx\";\n\nconst AccountPage = () => (\n  <div>\n    <div className=\"flex justify-center\">\n      <h2 className=\"Account\">Accounts </h2>\n    </div>\n    <AccountList />\n  </div>\n);\n\nexport default AccountPage;\n","import React from \"react\";\n\nimport AccountPage from \"../../pages/account-page/account-page.component\";\n\nimport \"./sidebar.styles.scss\";\n\nconst SideBar = () => {\n  return (\n    <div className=\"side-bar\">\n      <AccountPage />\n    </div>\n  );\n};\n\nexport default SideBar;\n","const CategoryActionTypes = {\n  SET_CATEGORIES: \"SET_CATEGORIES\",\n};\n\nexport default CategoryActionTypes;\n","import { createSelector } from \"reselect\";\n\nexport const selectCategories = (state) => state.categories;\n\nexport const selectTransactionList = createSelector(\n  [selectCategories],\n  (categories) => categories.categoryList\n);\n","import styled, { css } from \"styled-components\";\nimport Select from \"react-select\";\n\nconst Input = css`\n  font-size: 1.25rem;\n  padding: 0.5rem;\n`;\n\nexport const InsertTransactionContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const InsertFormContainer = styled.form`\n  display: flex;\n  align-items: center;\n  /* padding: 2rem; */\n  padding-bottom: 2rem;\n  border-radius: 0.5rem;\n`;\n\nexport const InputContainer = styled.input`\n  ${Input}\n\n  width: 20%;\n`;\n\nexport const VendorInput = styled.input`\n  ${Input}\n  width: 25%;\n`;\n\nexport const Selector = styled(Select)`\n  ${Input}\n  width: 30%;\n`;\n\nexport const CustomButton = styled.button`\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  transform: translateZ(0);\n  transition: transform 0.25s ease-out;\n  text-transform: none;\n  display: inline-block;\n  width: 15%;\n  padding-bottom: 0.5rem;\n  padding-top: 0.5rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  text-decoration: none;\n  transition: color 0.15s ease-in;\n  background-color: #dae6ff;\n  color: black;\n  ${Input}\n`;\n\n// .btn - white {\n// \tpadding: 0;\n// \tbackground: white;\n// }\n\n// .form {\n// \tdisplay: flex;\n//     align-items: center;\n// }\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { globalVars } from \"../../hooks/global\";\n\nimport { selectCurrentAccount } from \"../../redux/account/account.selector\";\nimport { updateAccountTotal, updateAccountPending } from \"../../redux/account/account.action\";\nimport {\n  addIncome,\n} from \"../../redux/transaction/transaction.action\";\nimport { setCategories } from \"../../redux/category/category.action\";\nimport { selectCategories } from \"../../redux/category/category.selector\";\n\nimport {\n  InsertTransactionContainer,\n  InsertFormContainer,\n  InputContainer,\n  VendorInput,\n  Selector,\n  CustomButton,\n} from \"./insert-transaction.styles\";\n\nconst InsertTransaction = () => {\n  const currentAccount = useSelector(selectCurrentAccount);\n  const { categoryList } = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const [expenseButton, setExpenseButton] = useState(false); \n  const [transaction, setTransaction] = useState({\n    date: new Date().toISOString().slice(0, 10),\n    transaction_id: uuidv4(),\n    vendor: \"\",\n    amount: \"\",\n    status: true,\n    category: {},\n    account_id: currentAccount,\n  });\n  const { date, vendor, amount, status, category } = transaction;\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setTransaction({ ...transaction, [name]: value });\n  };\n\n  const onStatusChange = () => {\n    setTransaction({ ...transaction, status: !status });\n  };\n\n  const onCategoryChange = (event) => {\n    console.log(event)\n    setTransaction({ ...transaction, category: event });\n  };\n\n  const onCommitExpense = () => {\n    if (!vendor || !amount || !category) {\n      alert(`Required Field is missing`);\n    } else {\n      setTransaction({ ...transaction, amount: -amount });\n      setExpenseButton(true)\n    }\n  };\n\n  const onCommitTransaction = () => {\n    if (!vendor || !amount || !category) {\n      alert(`Required Field is missing`);\n    } else {\n      addToPendingOrTotal()\n      dispatch(addIncome(transaction));\n      setTransaction({ ...transaction, vendor: \"\", amount: 0 });\n    }\n  };\n\n  function addToPendingOrTotal() {\n    if (status) {\n      dispatch(updateAccountTotal(amount));\n    } else {\n      dispatch(updateAccountPending(amount));\n    }\n  }\n\n  const addToTransactions = () => {\n    dispatch(addIncome(transaction));\n    setTransaction({ ...transaction, vendor: \"\", amount: 0 });\n  }\n  useEffect(() => {\n    try {\n      fetch(globalVars.HOST + \"category\")\n        .then((response) => response.json())\n        .then((data) => {\n          dispatch(setCategories(data));\n        });\n    } catch (error) {\n      console.error(error);\n    }\n    if (expenseButton) {\n      addToPendingOrTotal();\n      addToTransactions();\n      setExpenseButton(false);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, expenseButton]);\n\n  return (\n    <InsertTransactionContainer>\n      <InsertFormContainer onSubmit={(e) => e.preventDefault()}>\n        <InputContainer\n          type=\"date\"\n          id=\"date\"\n          name=\"date\"\n          value={date}\n          onChange={handleChange}\n        />\n        <VendorInput\n          type=\"text\"\n          placeholder=\"Vendor\"\n          id=\"vendor\"\n          name=\"vendor\"\n          value={vendor}\n          onChange={handleChange}\n          required\n        />\n        <InputContainer\n          type=\"double\"\n          placeholder=\"Amount\"\n          id=\"amount\"\n          name=\"amount\"\n          value={amount}\n          onChange={handleChange}\n        />\n        <CustomButton id=\"status\" onClick={onStatusChange}>\n          {status ? \"Cleared\" : \"Pending\"}\n        </CustomButton>\n        <Selector\n          defaultValue={categoryList[0]}\n          onChange={onCategoryChange}\n          options={categoryList}\n        />\n        <CustomButton\n          id=\"CommitTransactionBTN\"\n          onClick={() => {\n            setTransaction({ ...transaction, amount: -amount });\n            onCommitExpense();\n          }}\n        >\n          Expense\n        </CustomButton>\n        <CustomButton id=\"CommitTransactionBTN\" onClick={onCommitTransaction}>\n          Income\n        </CustomButton>\n      </InsertFormContainer>\n    </InsertTransactionContainer>\n  );\n};\n\nexport default InsertTransaction;\n","import CategoryActionTypes from \"./category.types\";\n\nexport const setCategories = (categories) => ({\n  type: CategoryActionTypes.SET_CATEGORIES,\n  payload: categories,\n});\n","import styled from \"styled-components\";\n\nexport const TransactionPageContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  border: solid;\n  height: 85vh;\n`;\n","import React from \"react\";\n\nimport Scroll from \"../../components/scroll/scroll.component\";\nimport TransactionList from \"../../components/transaction-list/transaction-list.component\";\nimport SideBar from \"../../components/sidebar/sidebar.component\";\nimport InsertTransaction from \"../../components/insert-transaction/insert-transaction.component\";\n\nimport { TransactionPageContainer } from \"./transactions-page.styles\";\n\nconst TransactionPage = () => (\n  <TransactionPageContainer>\n    <SideBar />\n    <Scroll>\n      <InsertTransaction />\n      <TransactionList />\n    </Scroll>\n  </TransactionPageContainer>\n);\n\nexport default TransactionPage;\n","const BillActionTypes = {\n  ADD_BILL: \"ADD_BILL\",\n  SET_BILLS: \"SET_BILLS\",\n  SET_CURRENT_BILL: \"SET_CURRENT_BILL\",\n  TOGGLE_BILL_HIDDEN: \"TOGGLE_BILL_HIDDEN\",\n  TOGGLE_EDIT_BILL_HIDDEN: \"TOGGLE_EDIT_BILL_HIDDEN\",\n  PAY_BILL: \"PAY_BILL\",\n  UPDATE_BILL: \"UPDATE_BILL\",\n};\n\nexport default BillActionTypes;\n","import BillActionTypes from \"./bills.types\";\n\nexport const setBills = (bills) => ({\n  type: BillActionTypes.SET_BILLS,\n  payload: bills,\n});\n\nexport const setCurrentBill = (bill) => ({\n  type: BillActionTypes.SET_CURRENT_BILL,\n  payload: bill,\n});\n\nexport const toggleBillDropdownHidden = () => ({\n  type: BillActionTypes.TOGGLE_BILL_HIDDEN,\n});\n\nexport const toggleEditBillDropdownHidden = () => ({\n  type: BillActionTypes.TOGGLE_EDIT_BILL_HIDDEN,\n});\n\nexport const paySelectedBill = (bill) => ({\n  type: BillActionTypes.PAY_BILL,\n  payload: bill,\n});\n\nexport const updateSelectedBill = (bill) => ({\n  type: BillActionTypes.UPDATE_BILL,\n  payload: bill,\n});\n","import { createSelector } from \"reselect\";\n\nexport const selectBills = (state) => state.bills;\n\nexport const selectBillList = createSelector(\n  [selectBills],\n  (bills) => bills.billList\n);\n\nexport const selectCurrentBill = createSelector(\n  [selectBills],\n  (bills) => bills.currentBill\n);\n\nexport const selectBillHidden = createSelector(\n  [selectBills],\n  (bills) => bills.hideBillDropdown\n);\n\nexport const selectEditBillHidden = createSelector(\n  [selectBills],\n  (bills) => bills.hideEditBillDropdown\n);\n","import styled from \"styled-components\";\n\nexport const BillDropDownContainer = styled.div`\n  position: absolute;\n  width: 240px;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid black;\n  background-color: white;\n  top: 90px;\n  right: 100px;\n  z-index: 5;\n`;\n\nexport const BillItemsDiv = styled.div`\n  height: 240px;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Select from \"react-select\";\n\nimport {\n  toggleBillDropdownHidden,\n  setCurrentBill,\n  paySelectedBill,\n} from \"../../redux/bills/bills.actions\";\nimport { selectCurrentBill } from \"../../redux/bills/bills.selector\";\nimport { selectAccountList } from \"../../redux/account/account.selector\";\n\nimport { BillDropDownContainer } from \"./bill-dropdown.styles\";\n\nconst BillDropDown = () => {\n  const currentBill = useSelector(selectCurrentBill);\n  const accounts = useSelector(selectAccountList);\n  const dispatch = useDispatch();\n  const d = new Date(currentBill.due_day);\n  const next_month = d.setMonth(d.getMonth() + 1);\n  const [bill, setBill] = useState({\n    bill_id: currentBill.bill_id,\n    date: new Date(currentBill.due_day).toISOString().slice(0, 10),\n    vendor: currentBill.bill_name,\n    category_id: currentBill.category_id,\n    status: \"Pending\",\n    amount: Number(currentBill.amount.replace(/[^0-9.-]+/g, \"\")) * -1,\n    account_id: \"\",\n    next_due_date: new Date(next_month).toISOString().slice(0, 10),\n    bill_website: currentBill.bill_website,\n  });\n  const { vendor, amount, date, next_due_date } = bill;\n\n  accounts.forEach(\n    (e) => (\n      // eslint-disable-next-line no-sequences\n      (e.value = e.account_id),\n      (e.label = e.account_name + \" \" + e.account_type)\n    )\n  );\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setBill({ ...bill, [name]: value });\n  };\n\n  const handleAccountChange = (event) => {\n    setBill({ ...bill, account_id: event.account_id });\n  };\n\n  const handlePayment = () => {\n    handleClose();\n\n    dispatch(paySelectedBill(bill));\n  };\n\n  const handleClose = () => {\n    dispatch(toggleBillDropdownHidden());\n    dispatch(setCurrentBill(null));\n  };\n\n  return (\n    <BillDropDownContainer id={currentBill.bill_id}>\n      <div>\n        <p>Date</p>\n        <input\n          type=\"date\"\n          id=\"date\"\n          name=\"date\"\n          value={date}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Vendor</p>\n        <input\n          type=\"text\"\n          id=\"vendor\"\n          name=\"vendor\"\n          value={vendor}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Account</p>\n        <Select\n          defaultValue={accounts[0]}\n          options={accounts}\n          onChange={handleAccountChange}\n        />\n      </div>\n      <div>\n        <p>Payment</p>\n        <input\n          type=\"text\"\n          id=\"amount\"\n          name=\"amount\"\n          value={amount}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Next Date</p>\n        <input\n          type=\"date\"\n          id=\"next_due_date\"\n          name=\"next_due_date\"\n          value={next_due_date}\n          onChange={handleChange}\n        />\n      </div>\n      <button onClick={handlePayment}>Commit</button>\n      <button onClick={handleClose}>Cancel</button>\n    </BillDropDownContainer>\n  );\n};\n\nexport default BillDropDown;\n","import styled from \"styled-components\";\n\nexport const BillDropDownContainer = styled.div`\n  position: absolute;\n  width: 240px;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid black;\n  background-color: white;\n  top: 90px;\n  right: 100px;\n  z-index: 5;\n`;\n\nexport const BillItemsDiv = styled.div`\n  height: 240px;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { formatDate } from \"../../hooks/global\";\n\nimport { selectCurrentBill } from \"../../redux/bills/bills.selector\";\nimport {\n  updateSelectedBill,\n  setCurrentBill,\n  toggleEditBillDropdownHidden,\n} from \"../../redux/bills/bills.actions\";\n\nimport { BillDropDownContainer } from \"./edit-bill-dropdown.styles\";\n\nconst BillEditDropDown = () => {\n  const currentBill = useSelector(selectCurrentBill);\n  const dispatch = useDispatch();\n  const [bill, setBill] = useState({\n    bill_id: currentBill.bill_id,\n    date: formatDate(currentBill.due_day),\n    vendor: currentBill.bill_name,\n    category_id: currentBill.category_id,\n    status: false,\n    amount: Number(currentBill.amount.replace(/[^0-9.-]+/g, \"\")) * -1,\n    next_due_date: new Date(currentBill.due_day).toISOString().slice(0, 10),\n    bill_website: currentBill.bill_website,\n  });\n  const { vendor, amount, date, next_due_date } = bill;\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setBill({ ...bill, [name]: value });\n  };\n\n  const handleEdit = () => {\n    dispatch(updateSelectedBill(bill));\n    dispatch(toggleEditBillDropdownHidden());\n  };\n\n  const handleClose = () => {\n    dispatch(toggleEditBillDropdownHidden());\n    dispatch(setCurrentBill(null));\n  };\n\n  return (\n    <BillDropDownContainer id={currentBill.bill_id}>\n      <div>\n        <p>Current Due Date</p>\n        <p>{ date }</p>\n      </div>\n      <div>\n        <p>Vendor</p>\n        <input\n          type=\"text\"\n          id=\"vendor\"\n          name=\"vendor\"\n          value={vendor}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Payment</p>\n        <input\n          type=\"text\"\n          id=\"amount\"\n          name=\"amount\"\n          value={amount}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Next Date</p>\n        <input\n          type=\"date\"\n          id=\"next_due_date\"\n          name=\"next_due_date\"\n          value={next_due_date}\n          onChange={handleChange}\n        />\n      </div>\n      <button onClick={handleEdit}>Update</button>\n      <button onClick={handleClose}>Cancel</button>\n    </BillDropDownContainer>\n  );\n};\n\nexport default BillEditDropDown;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n// import { formatDate } from \"../../hooks/global\";\n\nimport {\n  toggleBillDropdownHidden,\n  toggleEditBillDropdownHidden,\n  setCurrentBill,\n} from \"../../redux/bills/bills.actions\";\n\nconst Bill = ({ bill }) => {\n  const { bill_id, bill_name, bill_website, due_day, amount } = bill;\n  const dispatch = useDispatch();\n\n  function getDay(date) {\n    const d = new Date(date);\n    const day = d.getUTCDate();\n    const month = d.getUTCMonth() + 1;\n\n    return month + \"/\" + day;\n  }\n\n  const formatedDay = getDay(due_day);\n\n  const handlePayBill = () => {\n    dispatch(toggleBillDropdownHidden());\n    dispatch(setCurrentBill(bill));\n    if (bill_website) {\n      goToWebSite();\n    }\n  };\n\n  const handleEditBill = () => {\n    dispatch(setCurrentBill(bill));\n    dispatch(toggleEditBillDropdownHidden());\n  };\n\n  const goToWebSite = () => {\n    window.open(bill_website, \"_blank\");\n  };\n\n  return (\n    <div className=\"billDiv\" id={bill_id}>\n      <p className=\"bill\">{formatedDay}</p>\n      <p className=\"vendor\">{bill_name}</p>\n      <p className=\"bill\">{amount}</p>\n      <p className=\"bill paybill\" onClick={handlePayBill}>\n        Pay\n      </p>\n      <p className=\"bill editbill paybill\" onClick={handleEditBill}>\n        Edit\n      </p>\n    </div>\n  );\n};\n\nexport default Bill;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Bill from \"../bill/bill.component\";\n\nimport { selectBillList } from \"../../redux/bills/bills.selector\";\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\nimport { setBills } from \"../../redux/bills/bills.actions\";\n\nimport \"./bills.styles.scss\";\n\nconst Bills = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectCurrentUser);\n  const bills = useSelector(selectBillList);\n\n  useEffect(() => {\n    fetch(`https://star-ship-enterprise.herokuapp.com/upcomingBills`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_id: currentUser.user_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(setBills(data));\n      });\n  }, [dispatch, currentUser]);\n\n  return (\n    <div>\n      <div className=\"heading\">\n        <p className=\"bill Title\">Due Day</p>\n        <p className=\"vendor Title\">Vender</p>\n        <p className=\"bill Title\">Amount</p>\n        <p className=\"bill Title\">Pay</p>\n        <p className=\"bill Title editbill\">Edit</p>\n      </div>\n      {bills.map((bill) => {\n        return <Bill key={bill.bill_id} bill={bill} />;\n      })}\n    </div>\n  );\n};\n\nexport default Bills;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport BillDropDown from \"../../components/bill-dropdown/bill-dropdown.component\";\nimport BillEditDropDown from \"../../components/edit-bill-dropdown/edit-bill-dropdown.component\";\n\nimport Bills from \"../../components/bills/bills.component\";\n\nimport {\n  selectBillHidden,\n  selectEditBillHidden,\n} from \"../../redux/bills/bills.selector\";\n\nimport \"./billspage.styles.scss\";\n\nconst BillsPage = () => {\n  const hideBillDropdown = useSelector(selectBillHidden);\n  const hideEditBillDropdown = useSelector(selectEditBillHidden);\n\n  return (\n    <div>\n      <Bills />\n      {hideBillDropdown ? null : <BillDropDown />}\n      {hideEditBillDropdown ? null : <BillEditDropDown />}\n    </div>\n  );\n};\n\nexport default BillsPage;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Navigation from \"../../components/navigation/navigation.component\";\nimport TransactionPage from \"../transactions-page/transactions-page.component\";\nimport BillsPage from \"../bills-page/billspage.component\";\n\nimport \"./homepage.styles.scss\";\n\nconst HomePage = () => {\n  const main_page = \"\";\n\n  return (\n    <div className=\"homepage\">\n      <Navigation />\n      <div>\n        <Switch>\n          <Route\n            // exact\n            path={`${main_page}/transactions`}\n            component={TransactionPage}\n          ></Route>\n          <Route\n            // exact\n            path={`${main_page}/bills`}\n            component={BillsPage}\n          ></Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","const UserActionTypes = {\n  SET_CURRENT_USER: \"SET_CURRENT_USER\",\n  LOG_OUT_USER: \"LOG_OUT_USER\",\n  SIGN_IN_SUCCESS: \"SIGN_IN_SUCCESS\",\n  SIGN_IN_START: \"SIGN_IN_START\",\n  SIGN_IN_FAILURE: \"SIGN_IN_FAILURE\",\n};\n\nexport default UserActionTypes;\n","import UserActionTypes from \"./user.types\";\n\nexport const setCurrentUser = (user) => ({\n  type: UserActionTypes.SET_CURRENT_USER,\n  payload: user,\n});\n\nexport const signInSuccess = (user) => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  payload: user,\n});\n\nexport const logOutUser = () => ({\n  type: UserActionTypes.LOG_OUT_USER,\n});\n\nexport const signInStart = (emailAndPassword) => ({\n  type: UserActionTypes.SIGN_IN_START,\n  payload: emailAndPassword,\n});\n\nexport const signInFailure = (error) => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error,\n});\n","import React from \"react\";\n\nimport \"./custom-button.styles.scss\";\n\nconst CustomButton = ({\n  children,\n  isGoogleSignIn,\n  inverted,\n  ...otherProps\n}) => (\n  <button\n    className={`${inverted ? \"inverted\" : \"\"} ${\n      isGoogleSignIn ? \"google-sign-in\" : \"\"\n    } custom-button`}\n    {...otherProps}\n  >\n    {children}\n  </button>\n);\n\nexport default CustomButton;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n// import { useHistory } from \"react-router-dom\";\n\nimport { setCurrentUser } from \"../../redux/user/user.action\";\n\nimport \"./sign-in.styles.scss\";\n\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nconst SignIn = () => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = userCredentials;\n  const dispatch = useDispatch();\n  // const history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (email && password) {\n      fetch(\"https://star-ship-enterprise.herokuapp.com/signin\", {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          email: email,\n          password: password,\n        }),\n      })\n        .then((response) => response.json())\n        .then((user) => {\n          if (user !== \"wrong credentials\") {\n            dispatch(setCurrentUser(user[0]));\n            // history.replace(\"./\");\n          } else {\n            alert(\"Username and Password combination does not exist\");\n          }\n        });\n    } else if (!email) {\n      alert(\"missing email!!\");\n    } else if (!password) {\n      alert(\"missing password!!\");\n    }\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n  return (\n    <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n      <main className=\"pa4 black-80\">\n        <div className=\"measure\">\n          <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n          <form onSubmit={handleSubmit}>\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n              Email\n            </label>\n            <input\n              className=\"pa2 input-reset ba bg-transparent hover-bg-black  w-100\"\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              value={email}\n              label=\"email\"\n              required\n            />\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n              Password\n            </label>\n            <input\n              className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\"\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              value={password}\n              label=\"password\"\n              required\n            />\n            <div className=\"buttons\">\n              <CustomButton type=\"submit\">{`Sign In`}</CustomButton>\n            </div>\n          </form>\n        </div>\n      </main>\n    </article>\n  );\n};\n\nexport default SignIn;\n","import React from \"react\";\n\nimport { globalVars } from \"../../hooks/global\";\n\nimport \"./sign-up.styles.scss\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      firstname: \"\",\n      lastname: \"\",\n    };\n  }\n\n  onFirstNameChange = (event) => {\n    this.setState({ firstname: event.target.value });\n  };\n\n  onLastNameChange = (event) => {\n    this.setState({ lastname: event.target.value });\n  };\n\n  onEmailChange = (event) => {\n    this.setState({ email: event.target.value });\n  };\n  onPasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  onSubmitRegister = () => {\n    fetch(globalVars.HOST + \"register\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n      }),\n    })\n      .then((response) => response.json())\n      .then((user) => {\n        if (user) {\n          if (user.user_id) {\n            // this.props.loadUser(user)\n            this.props.onChange();\n          }\n        }\n      });\n  };\n\n  render() {\n    const { onRegisterChange } = this.props;\n    return (\n      <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  First Name\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"firstname\"\n                  id=\"firstname\"\n                  onChange={this.onFirstNameChange}\n                  required\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Last Name\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"lastname\"\n                  id=\"lastname\"\n                  onChange={this.onLastNameChange}\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n              <label className=\"pa0 ma0 lh-copy f6 pointer\"></label>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSubmitRegister}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Register\"\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p\n                onClick={() => onRegisterChange(\"signin\")}\n                className=\"f6 link dim black db pointer\"\n              >\n                Sign In\n              </p>\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\n\nimport SignIn from \"../../components/sign-in/sign-in.component\";\nimport SignUp from \"../../components/sign-up/sign-up.component\";\n\nimport \"./sign-in-and-sign-up.styles.scss\";\n\nconst SignInOrSignUpPage = () => (\n  <div className=\"sign-in-or-sign-up\">\n    <SignIn />\n    <SignUp />\n  </div>\n);\n\nexport default SignInOrSignUpPage;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport \"./App.css\";\n\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport SignInOrSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\";\n\nimport { selectCurrentUser } from \"./redux/user/user.selector\";\n\nconst App = () => {\n  const currentUser = useSelector(selectCurrentUser);\n  return <div>{currentUser ? <HomePage /> : <SignInOrSignUpPage />}</div>;\n};\n\nexport default App;\n","import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\n\nimport { signInFailure, signInSuccess } from \"./user.action\";\n\nfunction* fetchUser(email, password) {\n  try {\n    const req = yield fetch(\n      \"https://star-ship-enterprise.herokuapp.com/signin\",\n      {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          email: email,\n          password: password,\n        }),\n      }\n    );\n    const user = yield req.user();\n    console.log(user);\n  } catch (error) {\n    console.log(`ERROR: ${error}`);\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const user = yield fetchUser(email, password);\n\n    yield put(signInSuccess(user));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onSignInStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas() {\n  yield all([call(onSignInStart)]);\n}\n","import { all, call } from \"redux-saga/effects\";\n\nimport { userSagas } from \"./user/user.sagas\";\n\nexport default function* rootSaga() {\n  yield all([call(userSagas)]);\n}\n","export const updateAccountTotal = (accounts, currentAccount, balance) => {\n  const accountToChange = accounts.find(\n    (account) => account.account_id === currentAccount\n  );\n  return accounts.map((account) =>\n    account.account_id === currentAccount\n      ? {\n          ...account,\n          total: (\n            parseFloat(accountToChange.total) + parseFloat(balance)\n          ).toFixed(2),\n        }\n      : account\n  );\n};\n\nexport const updateAccountPending = (accounts, currentAccount, balance) => {\n  const accountToChange = accounts.find(\n    (account) => account.account_id === currentAccount\n  );\n  return accounts.map((account) =>\n    account.account_id === currentAccount\n      ? {\n          ...account,\n          pending: (\n            parseFloat(accountToChange.pending) + parseFloat(balance)\n          ).toFixed(2),\n        }\n      : account\n  );\n};\n","import AccountActionTypes from \"./account.types\";\nimport { updateAccountTotal, updateAccountPending } from \"./account.utils\";\n\nconst INITIAL_STATE = {\n  accountList: [],\n  currentAccount: null,\n};\n\nconst accountReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case AccountActionTypes.SET_ACCOUNTS:\n      return {\n        ...state,\n        accountList: action.payload,\n      };\n    case AccountActionTypes.SET_CURRENT_ACCOUNT:\n      return {\n        ...state,\n        currentAccount: action.payload,\n      };\n    case AccountActionTypes.UPDATE_ACCOUNT_TOTAL:\n      return {\n        ...state,\n        accountList: updateAccountTotal(\n          state.accountList,\n          state.currentAccount,\n          action.payload\n        ),\n      };\n      case AccountActionTypes.UPDATE_ACCOUNT_PENDING:\n        return {\n          ...state,\n          accountList: updateAccountPending(\n            state.accountList,\n            state.currentAccount,\n            action.payload\n          ),\n        };\n    default:\n      return state;\n  }\n};\n\nexport default accountReducer;\n","import UserActionTypes from \"./user.types\";\n\nconst INITIAL_STATE = {\n  currentUser: null,\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SET_CURRENT_USER:\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return {\n        ...state,\n        currentUser: action.payload,\n      };\n    case UserActionTypes.LOG_OUT_USER:\n      return {\n        INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { insertTransaction, updateTransactionStatusAPI } from \"../../hooks/global\";\n\nexport const addTransactionToList = (transactions, transactionToAdd) => {\n  const transaction = {\n    date: transactionToAdd.date,\n    vendor: transactionToAdd.vendor,\n    category_id: transactionToAdd.category.value,\n    status: transactionToAdd.status,\n    amount: transactionToAdd.amount,\n    account_id: transactionToAdd.account_id,\n  };\n  insertTransaction(transaction);\n\n  transactionToAdd = {\n    date: transactionToAdd.date,\n    vendor: transactionToAdd.vendor,\n    label: transactionToAdd.category.label,\n    status: transactionToAdd.status,\n    amount: transactionToAdd.amount,\n    account_id: transactionToAdd.account_id,\n  };\n  return [transactionToAdd, ...transactions];\n};\n\nexport const updateStatus = (transactions, transaction) => {\n  updateTransactionStatusAPI(transaction);\n  return [...transactions];\n}\n","import TransactionActionTypes from \"./transaction.types\";\nimport { addTransactionToList, updateStatus } from \"./transaction.utils\";\n\nconst INITIAL_STATE = {\n  transactionList: [],\n};\n\nconst transactionReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TransactionActionTypes.SET_TRANSACTIONS:\n      return {\n        ...state,\n        transactionList: action.payload,\n      };\n    case TransactionActionTypes.ADD_TRANSACTION:\n      return {\n        ...state,\n        transactionList: addTransactionToList(\n          state.transactionList,\n          action.payload\n        ),\n      };\n    case TransactionActionTypes.ADD_EXPENSE:\n      return {\n        ...state,\n        transactionList: addTransactionToList(\n          state.transactionList,\n          action.payload\n        ),\n      };\n    case TransactionActionTypes.UPDATE_STATUS:\n      return {\n        ...state,\n        transactionList: updateStatus(\n          state.transactionList,\n          action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default transactionReducer;\n","import CategoryActionTypes from \"./category.types\";\n\nconst INITIAL_STATE = {\n  categoryList: [],\n};\n\nconst categoryReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CategoryActionTypes.SET_CATEGORIES:\n      return {\n        ...state,\n        categoryList: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default categoryReducer;\n","import { insertTransaction, fetchUpdateBill } from \"../../hooks/global\";\n\nexport const addBillToUpcommingBills = (bills, billToAdd) => {\n  return [...bills, billToAdd];\n};\n\nexport const payBill = (billToPay) => {\n  const transaction = {\n    date: billToPay.date,\n    vendor: billToPay.vendor,\n    category_id: billToPay.category_id,\n    status: false,\n    amount: billToPay.amount,\n    account_id: billToPay.account_id,\n  };\n  insertTransaction(transaction);\n  updateBill(billToPay);\n};\n\nexport const updateBill = (billToUpdate) => {\n  fetchUpdateBill(billToUpdate);\n};\n","import BillActionTypes from \"./bills.types\";\nimport { addBillToUpcommingBills, payBill, updateBill } from \"./bills.utils\";\n\nconst INITIAL_STATE = {\n  billList: [],\n  hideBillDropdown: true,\n  hideEditBillDropdown: true,\n  currentBill: null,\n};\n\nconst billReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case BillActionTypes.SET_BILLS:\n      return {\n        ...state,\n        billList: action.payload,\n      };\n    case BillActionTypes.ADD_BILL:\n      return {\n        ...state,\n        billToAdd: addBillToUpcommingBills(state.billToAdd, action.payload),\n      };\n    case BillActionTypes.PAY_BILL:\n      return {\n        ...state,\n        billToPay: payBill(action.payload),\n      };\n    case BillActionTypes.TOGGLE_BILL_HIDDEN:\n      return {\n        ...state,\n        hideBillDropdown: !state.hideBillDropdown,\n      };\n    case BillActionTypes.TOGGLE_EDIT_BILL_HIDDEN:\n      return {\n        ...state,\n        hideEditBillDropdown: !state.hideEditBillDropdown,\n      };\n    case BillActionTypes.SET_CURRENT_BILL:\n      return {\n        ...state,\n        currentBill: action.payload,\n      };\n    case BillActionTypes.UPDATE_BILL:\n      return {\n        ...state,\n        updateToBill: updateBill(action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default billReducer;\n","import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport accountReducer from \"./account/account.reducer\";\nimport userReducer from \"./user/user.reducer\";\nimport transactionReducer from \"./transaction/transaction.reducer\";\nimport categoryReducer from \"./category/category.reducer\";\nimport billReducer from \"./bills/bills.reducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\", \"transactions\", \"accounts\", \"categories\"],\n};\n\nconst appReducer = combineReducers({\n  user: userReducer,\n  transactions: transactionReducer,\n  accounts: accountReducer,\n  categories: categoryReducer,\n  bills: billReducer,\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === \"USER_LOGOUT\") {\n    return appReducer(undefined, action);\n  }\n  return appReducer(state, action);\n};\n\nexport default persistReducer(persistConfig, rootReducer);\n","import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootSaga from \"./root-saga\";\n\nimport rootReducer from \"./root-reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from \"react\";\n\nconst Loading = () => <div>Loading</div>;\n\nexport default Loading;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { store, persistor } from \"./redux/store\";\nimport Loading from \"./components/loading/loading.component\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate loading={<Loading />} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </BrowserRouter>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}