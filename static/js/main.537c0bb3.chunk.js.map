{"version":3,"sources":["redux/user/user.selector.js","redux/account/account.selector.js","hooks/global.js","redux/account/account.types.js","redux/account/account.action.js","components/account-info/account-info.styles.jsx","components/current-total/current-total.component.jsx","components/account-info/account-info.component.jsx","components/dropdown-menu/dropdown-menu.component.jsx","components/navigation/navigation.styles.jsx","components/navigation/navigation.component.jsx","redux/root-action.js","components/scroll/scroll.component.jsx","redux/transaction/transaction.types.js","redux/transaction/transaction.action.js","redux/transaction/transaction.selector.js","components/transaction/transaction.styles.jsx","components/transaction/transaction.component.jsx","components/transaction-list/transaction-list.component.jsx","components/account/account.styles.jsx","components/account/account.component.jsx","components/account-list/account-list.component.jsx","pages/account-page/account-page.component.jsx","components/sidebar/sidebar.component.jsx","redux/category/category.types.js","redux/category/category.selector.js","components/insert-transaction/insert-transaction.styles.jsx","components/insert-transaction/insert-transaction.component.jsx","redux/category/category.action.js","pages/transactions-page/transactions-page.styles.jsx","pages/transactions-page/transactions-page.component.jsx","redux/bills/bills.types.js","redux/bills/bills.actions.js","redux/bills/bills.selector.js","components/bill-dropdown/bill-dropdown.styles.jsx","components/bill-dropdown/bill-dropdown.component.jsx","components/edit-bill-dropdown/edit-bill-dropdown.styles.jsx","components/edit-bill-dropdown/edit-bill-dropdown.component.jsx","components/bill/bill.component.jsx","components/bills/bills.component.jsx","pages/bills-page/billspage.component.jsx","pages/homepage/homepage.component.jsx","redux/user/user.types.js","redux/user/user.action.js","components/custom-button/custom-button.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx","App.js","redux/user/user.sagas.js","redux/root-saga.js","redux/account/account.utils.js","redux/account/account.reducer.js","redux/user/user.reducer.js","redux/transaction/transaction.utils.js","redux/transaction/transaction.reducer.js","redux/category/category.reducer.js","redux/bills/bills.utils.js","redux/bills/bills.reducer.js","redux/root-reducer.js","redux/store.js","components/loading/loading.component.jsx","index.js"],"names":["selectCurrentUser","createSelector","state","user","currentUser","selectAccounts","accounts","selectAccountList","accountList","selectCurrentAccount","currentAccount","selectAccountTotal","map","account","account_id","total","globalVars","insertTransaction","transaction","a","fetch","method","headers","body","JSON","stringify","date","vendor","category_id","status","amount","then","response","json","catch","console","log","fetchUpdateBill","bill","bill_id","bill_name","bill_website","due_day","next_due_date","AccountActionTypes","ADD_ACCOUNT","SET_ACCOUNTS","REMOVE_ACCOUNTS","SET_CURRENT_ACCOUNT","SET_ACCOUNT_BALANCE","UPDATE_ACCOUNT_BALANCE","UPDATE_ACCOUNT_TOTAL","updateAccountTotal","newBalance","type","payload","UserContainer","styled","div","UserInfo","CurrentTotal","useSelector","AccountInfo","dispatch","useDispatch","useEffect","user_id","data","firstname","DropDownMenu","history","useHistory","main_page","className","Dropdown","Toggle","variant","id","icon","faBars","size","Menu","Item","onClick","push","NavigationContainer","nav","NavigationInfo","NavigationSignOut","mapStateToProps","createStructuredSelector","connect","logOutUser","replace","Scroll","props","children","TransactionActionTypes","SET_TRANSACTIONS","ADD_TRANSACTION","ADD_EXPENSE","addIncome","selectTransactionList","transactions","transactionList","TransactionElement","css","TransactionContainer","DateContainer","VendorContainer","StatusContainer","Dollar","AmountContainer","CategoryContainer","Transaction","transaction_id","label","d","Date","year","getFullYear","getMonth","getDate","formatDate","TransactionList","setDate","from_date","toISOString","split","to_date","e","AccountContainer","AccountName","Name","p","Total","Account","account_name","account_type","setCurrentAccount","AccountList","AccountPage","SideBar","CategoryActionTypes","SET_CATEGORIES","selectCategories","categories","categoryList","Input","InsertTransactionContainer","InsertFormContainer","form","InputContainer","input","VendorInput","Selector","Select","CustomButton","button","InsertTransaction","useState","expenseButton","setExpenseButton","slice","uuidv4","category","setTransaction","handleChange","event","target","value","name","error","onSubmit","preventDefault","onChange","placeholder","required","defaultValue","options","alert","TransactionPageContainer","TransactionPage","BillActionTypes","ADD_BILL","SET_BILLS","SET_CURRENT_BILL","TOGGLE_BILL_HIDDEN","TOGGLE_EDIT_BILL_HIDDEN","PAY_BILL","UPDATE_BILL","setCurrentBill","toggleBillDropdownHidden","toggleEditBillDropdownHidden","selectBills","bills","selectBillList","billList","selectCurrentBill","currentBill","selectBillHidden","hideBillDropdown","selectEditBillHidden","hideEditBillDropdown","BillDropDownContainer","BillDropDown","Number","setBill","forEach","handleClose","paySelectedBill","BillEditDropDown","updateSelectedBill","Bill","formatedDay","day","getDay","goToWebSite","window","open","Bills","setBills","BillsPage","HomePage","exact","path","component","UserActionTypes","SET_CURRENT_USER","LOG_OUT_USER","SIGN_IN_SUCCESS","SIGN_IN_START","SIGN_IN_FAILURE","signInSuccess","isGoogleSignIn","inverted","otherProps","SignIn","email","password","userCredentials","setCredentials","setCurrentUser","htmlFor","Register","onFirstNameChange","setState","onLastNameChange","lastname","onEmailChange","onPasswordChange","onSubmitRegister","onRegisterChange","this","React","Component","SignInOrSignUpPage","App","fetchUser","signInWithEmail","onSignInStart","userSagas","req","put","takeLatest","all","call","rootSaga","balance","accountToChange","find","parseFloat","toFixed","INITIAL_STATE","accountReducer","action","userReducer","addTransactionToList","transactionToAdd","transactionReducer","categoryReducer","addBillToUpcommingBills","billToAdd","payBill","billToPay","updateBill","billToUpdate","billReducer","updateToBill","persistConfig","key","storage","whitelist","appReducer","combineReducers","persistReducer","undefined","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","rootReducer","applyMiddleware","run","persistor","persistStore","Loading","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.537c0bb3.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectUser = (state) => state.user;\n\nexport const selectCurrentUser = createSelector(\n  [selectUser],\n  (user) => user.currentUser\n);\n","import { createSelector } from \"reselect\";\n\nexport const selectAccounts = (state) => state.accounts;\n\nexport const selectAccountList = createSelector(\n  [selectAccounts],\n  (accounts) => accounts.accountList\n);\n\nexport const selectCurrentAccount = createSelector(\n  [selectAccounts],\n  (accounts) => accounts.currentAccount\n);\n\nexport const selectAccountTotal = createSelector([selectAccounts], (accounts) =>\n  accounts.accountList.map((account) =>\n    account.account_id === accounts.currentAccount ? account.total : null\n  )\n);\n","export const globalVars = {\n  HOST: \"https://star-ship-enterprise.herokuapp.com/\",\n  USER_ID: \"368c15a4-0c45-441f-959d-0d33a6542cb3\",\n};\n\nexport const insertTransaction = async (transaction) => {\n  await fetch(globalVars.HOST + \"insert\", {\n    method: \"post\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      date: transaction.date,\n      vendor: transaction.vendor,\n      category_id: transaction.category_id,\n      status: transaction.status,\n      amount: transaction.amount,\n      account_id: transaction.account_id,\n    }),\n  })\n    .then((response) => response.json())\n    .catch(console.log);\n};\n\nexport const formatDate = (date) => {\n  const d = new Date(date);\n  const month = d.getMonth() + 1;\n  const day = d.getDate();\n  const year = d.getFullYear();\n  return year + \"-\" + month + \"-\" + day;\n};\n\nexport const fetchUpdateBill = async (bill) => {\n  await fetch(globalVars.HOST + \"update_bill\", {\n    method: \"post\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      bill_id: bill.bill_id,\n      bill_name: bill.vendor,\n      amount: bill.amount * -1,\n      bill_website: bill.bill_website,\n      due_day: bill.next_due_date,\n    }),\n  })\n    .then((response) => response.json())\n    .catch(console.log);\n};\n","const AccountActionTypes = {\n  ADD_ACCOUNT: \"ADD_ACCOUNT\",\n  SET_ACCOUNTS: \"SET_ACCOUNTS\",\n  REMOVE_ACCOUNTS: \"REMOVE_ACCOUNTS\",\n  SET_CURRENT_ACCOUNT: \"SET_CURRENT_ACCOUNT\",\n  SET_ACCOUNT_BALANCE: \"SET_ACCOUNT_BALANCE\",\n  UPDATE_ACCOUNT_BALANCE: \"UPDATE_ACCOUNT_BALANCE\",\n  UPDATE_ACCOUNT_TOTAL: \"UPDATE_ACCOUNT_TOTAL\",\n};\n\nexport default AccountActionTypes;\n","import AccountActionTypes from \"./account.types\";\n\nexport const setAccounts = (accounts) => ({\n  type: AccountActionTypes.SET_ACCOUNTS,\n  payload: accounts,\n});\n\nexport const setCurrentAccount = (account) => ({\n  type: AccountActionTypes.SET_CURRENT_ACCOUNT,\n  payload: account,\n});\n\nexport const setAccountBalance = (balance) => ({\n  type: AccountActionTypes.SET_ACCOUNT_BALANCE,\n  payload: balance,\n});\n\nexport const updateBalance = (newBalance) => ({\n  type: AccountActionTypes.UPDATE_ACCOUNT_BALANCE,\n  payload: newBalance,\n});\n\nexport const updateAccountTotal = (newBalance) => ({\n  type: AccountActionTypes.UPDATE_ACCOUNT_TOTAL,\n  payload: newBalance,\n});\n","import styled from \"styled-components\";\n\nexport const UserContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-content: center;\n  align-items: center;\n`;\n\nexport const UserInfo = styled.div`\n  font-size: 1.5rem;\n  padding: 1rem;\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectAccountTotal } from \"../../redux/account/account.selector\";\n\nconst CurrentTotal = () => {\n  const total = useSelector(selectAccountTotal);\n  return total ? <div>{total}</div> : null;\n};\n\nexport default CurrentTotal;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { globalVars } from \"../../hooks/global.js\";\n\nimport { setAccounts } from \"../../redux/account/account.action\";\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\nimport { selectCurrentAccount } from \"../../redux/account/account.selector\";\n\nimport { UserContainer, UserInfo } from \"./account-info.styles\";\nimport CurrentTotal from \"../current-total/current-total.component\";\n\nconst AccountInfo = () => {\n  const currentUser = useSelector(selectCurrentUser);\n  const currentAccount = useSelector(selectCurrentAccount);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetch(`${globalVars.HOST}accounts`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_id: currentUser.user_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(setAccounts(data));\n      });\n  }, [currentUser.user_id, dispatch]);\n\n  return (\n    <UserContainer>\n      {currentAccount ? (\n        <UserInfo>\n          <CurrentTotal />\n        </UserInfo>\n      ) : null}\n      <UserInfo>{currentUser.firstname}</UserInfo>\n    </UserContainer>\n  );\n};\n\nexport default AccountInfo;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst DropDownMenu = () => {\n  const history = useHistory();\n  const main_page = \"/budget_frontend\";\n\n  return (\n    <div className=\"menu\">\n      <Dropdown>\n        <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\n          <FontAwesomeIcon icon={faBars} size=\"2x\" />\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <div>\n            <Dropdown.Item\n              onClick={() => history.push(`${main_page}/transactions`)}\n            >\n              Transactions\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => history.push(`${main_page}/bills`)}>\n              Bills\n            </Dropdown.Item>\n          </div>\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default DropDownMenu;\n","import styled from \"styled-components\";\n\nexport const NavigationContainer = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  align-content: center;\n  margin-bottom: 1rem;\n`;\n\nexport const NavigationInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const NavigationSignOut = styled.div`\n  font-size: 1.5rem;\n  opacity: 1;\n  transition: opacity 0.15s ease-in;\n  text-decoration: none;\n  padding: 1rem;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\nimport { logOutUser } from \"../../redux/root-action\";\nimport { selectCurrentAccount } from \"../../redux/account/account.selector\";\n\nimport AccountInfo from \"../account-info/account-info.component\";\nimport DropDownMenu from \"../dropdown-menu/dropdown-menu.component\";\n\nimport {\n  NavigationContainer,\n  NavigationInfo,\n  NavigationSignOut,\n} from \"./navigation.styles\";\n\nconst Navigation = ({ logOutUser }) => {\n  const history = useHistory();\n\n  return (\n    <NavigationContainer>\n      <div>\n        <DropDownMenu />\n      </div>\n      <NavigationInfo>\n        <AccountInfo />\n        <NavigationSignOut\n          onClick={() => {\n            history.replace(`/budget_frontend`);\n            logOutUser();\n          }}\n        >\n          Sign Out\n        </NavigationSignOut>\n      </NavigationInfo>\n    </NavigationContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  currentAccount: selectCurrentAccount,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  logOutUser: () => dispatch(logOutUser()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","export const logOutUser = () => ({\n  type: \"USER_LOGOUT\",\n});\n","import React from \"react\";\n\nimport \"./scroll.styles.scss\";\n\nconst Scroll = (props) => {\n  return (\n    <div className=\"scroll\" key={props.children}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","const TransactionActionTypes = {\n  SET_TRANSACTIONS: \"SET_TRANSACTIONS\",\n  ADD_TRANSACTION: \"ADD_TRANSACTION\",\n  ADD_EXPENSE: \"ADD_EXPENSE\",\n};\n\nexport default TransactionActionTypes;\n","import TransactionActionTypes from \"./transaction.types\";\n\nexport const setTransactions = (transactions) => ({\n  type: TransactionActionTypes.SET_TRANSACTIONS,\n  payload: transactions,\n});\n\nexport const addTransaction = (transaction) => ({\n  type: TransactionActionTypes.ADD_TRANSACTION,\n  payload: transaction,\n});\n\nexport const addExpense = (transaction) => ({\n  type: TransactionActionTypes.ADD_EXPENSE,\n  payload: transaction,\n});\n\nexport const addIncome = (transaction) => ({\n  type: TransactionActionTypes.ADD_EXPENSE,\n  payload: transaction,\n});","import { createSelector } from \"reselect\";\n\nexport const selectTransactions = (state) => state.transactions;\n\nexport const selectTransactionList = createSelector(\n  [selectTransactions],\n  (transactions) => transactions.transactionList\n);\n","import styled, { css } from \"styled-components\";\n\nconst TransactionElement = css`\n  border-style: none solid none none;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nexport const TransactionContainer = styled.div`\n  outline: 1px solid;\n  display: flex;\n  align-items: center;\n  padding: 0.5rem;\n`;\n\nexport const DateContainer = styled.div`\n  flex-grow: 0;\n  justify-items: left;\n  width: 8rem;\n  text-align: center;\n  ${TransactionElement}\n`;\n\nexport const VendorContainer = styled.div`\n  ${TransactionElement}\n  flex-grow: 2;\n  text-align: left;\n  min-width: 8rem;\n  border-bottom: none;\n  padding-left: 1rem;\n`;\n\nexport const StatusContainer = styled.div`\n  cursor: pointer;\n  min-width: 5em;\n  ${TransactionElement}\n`;\n\nexport const Dollar = styled.div`\n  border-style: none;\n`;\n\nexport const AmountContainer = styled.div`\n  text-align: right;\n  padding-right: 1em;\n  width: 5em;\n  ${TransactionElement}\n`;\n\nexport const CategoryContainer = styled.div`\n  flex-grow: 0;\n  width: 8em;\n  ${TransactionElement}\n`;\n","import React from \"react\";\n\nimport {\n  TransactionContainer,\n  DateContainer,\n  VendorContainer,\n  StatusContainer,\n  Dollar,\n  AmountContainer,\n  CategoryContainer,\n} from \"./transaction.styles\";\n\nconst Transaction = ({ transaction }) => {\n  const { transaction_id, date, vendor, amount, status, label } = transaction;\n\n  function formatDate(date) {\n    const d = new Date(date);\n    const year = d.getFullYear();\n    const month = d.getMonth() + 1;\n    const day = d.getDate();\n    return month + \"-\" + day + \"-\" + year;\n  }\n  return (\n    <TransactionContainer key={transaction_id}>\n      <DateContainer>{formatDate(date)}</DateContainer>\n      <VendorContainer>{vendor}</VendorContainer>\n      <Dollar>$</Dollar>\n      <AmountContainer>{amount}</AmountContainer>\n      <StatusContainer>{status} </StatusContainer>\n      <CategoryContainer>{label}</CategoryContainer>\n    </TransactionContainer>\n  );\n};\n\nexport default Transaction;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { globalVars } from \"../../hooks/global\";\nimport { setTransactions } from \"../../redux/transaction/transaction.action\";\nimport { selectTransactionList } from \"../../redux/transaction/transaction.selector\";\nimport { selectCurrentAccount } from \"../../redux/account/account.selector\";\n\nimport Transaction from \"../transaction/transaction.component\";\n\nimport \"./transaction-list.styles.scss\";\n\nconst TransactionList = () => {\n  const transactionList = useSelector(selectTransactionList);\n  const currentAccount = useSelector(selectCurrentAccount);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const d = new Date();\n    d.setDate(d.getDate() - 180);\n    const from_date = d.toISOString().split(\"T\")[0];\n    const to_date = new Date().toISOString().split(\"T\")[0];\n    if (!currentAccount) {\n      return;\n    }\n    try {\n      fetch(`${globalVars.HOST}transactions`, {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          account_id: currentAccount,\n          from_date: from_date,\n          to_date: to_date,\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          dispatch(setTransactions(data));\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [currentAccount, dispatch]);\n  return (\n    <div>\n      <div className=\"outline flex justify-center\">\n        <p className=\"date transaction\">Date</p>\n        <p className=\"vendor1 transaction\">Vender</p>\n        <p className=\"dollar transaction\">&nbsp;&nbsp;</p>\n        <p className=\"amount transaction\">Amount</p>\n        <p className=\"status transaction\">Status</p>\n        <p className=\"category transaction\">Category</p>\n        <p className=\"edit transaction\">Edit</p>\n      </div>\n      {transactionList.map((transaction) => (\n        <Transaction\n          key={transaction.transaction_id}\n          transaction={transaction}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TransactionList;\n","import styled from \"styled-components\";\n\nexport const AccountContainer = styled.div`\n  margin: 2px;\n  border-style: solid;\n  border-radius: 8px;\n  min-width: 8em;\n  display: flex;\n  flex-direction: column;\n  background: antiquewhite;\n  cursor: pointer;\n`;\n\nexport const AccountName = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: left;\n  padding-left: 0.25rem;\n  padding-top: 0.5rem;\n`;\n\nexport const Name = styled.p`\n  font-weight: bold;\n  padding: 0.2rem;\n  margin: unset;\n`;\n\nexport const Total = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: left;\n  font-weight: bold;\n  padding-left: 0.25rem;\n  padding-bottom: 1rem;\n`;\n","import React from \"react\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport { AccountContainer, AccountName, Name, Total } from \"./account.styles\";\n\nimport { setCurrentAccount } from \"../../redux/account/account.action\";\n\nconst Account = ({ account }) => {\n  const { account_id, account_name, account_type, total } = account;\n  const dispatch = useDispatch();\n\n  return (\n    <AccountContainer\n      onClick={() => {\n        dispatch(setCurrentAccount(account_id));\n      }}\n    >\n      <AccountName>\n        <Name>{account_name}</Name>\n        <Name>{account_type}</Name>\n      </AccountName>\n      <Total>{total ? `$ ${total}` : \"$ 0.00\"}</Total>\n    </AccountContainer>\n  );\n};\n\nexport default Account;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectAccountList } from \"../../redux/account/account.selector\";\n\nimport Account from \"../account/account.component\";\n\nimport \"./account-list.styles.scss\";\n\nconst AccountList = () => {\n  const accountList = useSelector(selectAccountList);\n\n  return (\n    <div>\n      {accountList.map((account) => (\n        <Account key={account.account_id} account={account} />\n      ))}\n    </div>\n  );\n};\n\nexport default AccountList;\n","import React from \"react\";\n\nimport AccountList from \"../../components/account-list/account-list.component.jsx\";\n\nconst AccountPage = () => (\n  <div>\n    <div className=\"flex justify-center\">\n      <h2 className=\"Account\">Accounts </h2>\n    </div>\n    <AccountList />\n  </div>\n);\n\nexport default AccountPage;\n","import React from \"react\";\n\nimport AccountPage from \"../../pages/account-page/account-page.component\";\n\nimport \"./sidebar.styles.scss\";\n\nconst SideBar = () => {\n  return (\n    <div className=\"side-bar\">\n      <AccountPage />\n    </div>\n  );\n};\n\nexport default SideBar;\n","const CategoryActionTypes = {\n  SET_CATEGORIES: \"SET_CATEGORIES\",\n};\n\nexport default CategoryActionTypes;\n","import { createSelector } from \"reselect\";\n\nexport const selectCategories = (state) => state.categories;\n\nexport const selectTransactionList = createSelector(\n  [selectCategories],\n  (categories) => categories.categoryList\n);\n","import styled, { css } from \"styled-components\";\nimport Select from \"react-select\";\n\nconst Input = css`\n  font-size: 1.25rem;\n  padding: 0.5rem;\n`;\n\nexport const InsertTransactionContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const InsertFormContainer = styled.form`\n  display: flex;\n  align-items: center;\n  /* padding: 2rem; */\n  padding-bottom: 2rem;\n  border-radius: 0.5rem;\n`;\n\nexport const InputContainer = styled.input`\n  ${Input}\n\n  width: 20%;\n`;\n\nexport const VendorInput = styled.input`\n  ${Input}\n  width: 25%;\n`;\n\nexport const Selector = styled(Select)`\n  ${Input}\n  width: 30%;\n`;\n\nexport const CustomButton = styled.button`\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  transform: translateZ(0);\n  transition: transform 0.25s ease-out;\n  text-transform: none;\n  display: inline-block;\n  width: 15%;\n  padding-bottom: 0.5rem;\n  padding-top: 0.5rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  text-decoration: none;\n  transition: color 0.15s ease-in;\n  background-color: #dae6ff;\n  color: black;\n  ${Input}\n`;\n\n// .btn - white {\n// \tpadding: 0;\n// \tbackground: white;\n// }\n\n// .form {\n// \tdisplay: flex;\n//     align-items: center;\n// }\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { globalVars } from \"../../hooks/global\";\n\nimport { selectCurrentAccount } from \"../../redux/account/account.selector\";\nimport { updateAccountTotal } from \"../../redux/account/account.action\";\nimport {\n  addIncome,\n} from \"../../redux/transaction/transaction.action\";\nimport { setCategories } from \"../../redux/category/category.action\";\nimport { selectCategories } from \"../../redux/category/category.selector\";\n\nimport {\n  InsertTransactionContainer,\n  InsertFormContainer,\n  InputContainer,\n  VendorInput,\n  Selector,\n  CustomButton,\n} from \"./insert-transaction.styles\";\n\nconst InsertTransaction = () => {\n  const currentAccount = useSelector(selectCurrentAccount);\n  const { categoryList } = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const [expenseButton, setExpenseButton] = useState(false); \n  const [transaction, setTransaction] = useState({\n    date: new Date().toISOString().slice(0, 10),\n    transaction_id: uuidv4(),\n    vendor: \"\",\n    amount: \"\",\n    status: true,\n    category: {},\n    account_id: currentAccount,\n  });\n  const { date, vendor, amount, status, category } = transaction;\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setTransaction({ ...transaction, [name]: value });\n  };\n\n  const onStatusChange = () => {\n    setTransaction({ ...transaction, status: !status });\n  };\n\n  const onCategoryChange = (event) => {\n    setTransaction({ ...transaction, category: event });\n  };\n\n  const onCommitExpense = () => {\n    if (!vendor || !amount || !category) {\n      alert(`Required Field is missing`);\n    } else {\n      setTransaction({ ...transaction, amount: -amount });\n      setExpenseButton(true)\n    }\n  };\n\n  const onCommitTransaction = () => {\n    if (!vendor || !amount || !category) {\n      alert(`Required Field is missing`);\n    } else {\n      dispatch(updateAccountTotal(amount));\n      dispatch(addIncome(transaction));\n      setTransaction({ ...transaction, vendor: \"\", amount: 0 });\n    }\n  };\n\n  useEffect(() => {\n    try {\n      fetch(globalVars.HOST + \"category\")\n        .then((response) => response.json())\n        .then((data) => {\n          dispatch(setCategories(data));\n        });\n    } catch (error) {\n      console.error(error);\n    }\n    if (expenseButton) {\n      dispatch(updateAccountTotal(amount));\n      dispatch(addIncome(transaction));\n      setExpenseButton(false);\n      setTransaction({ ...transaction, vendor: \"\", amount: 0 });\n    }\n  }, [dispatch, transaction, expenseButton]);\n\n  return (\n    <InsertTransactionContainer>\n      <InsertFormContainer onSubmit={(e) => e.preventDefault()}>\n        <InputContainer\n          type=\"date\"\n          id=\"date\"\n          name=\"date\"\n          value={date}\n          onChange={handleChange}\n        />\n        <VendorInput\n          type=\"text\"\n          placeholder=\"Vendor\"\n          id=\"vendor\"\n          name=\"vendor\"\n          value={vendor}\n          onChange={handleChange}\n          required\n        />\n        <InputContainer\n          type=\"double\"\n          placeholder=\"Amount\"\n          id=\"amount\"\n          name=\"amount\"\n          value={amount}\n          onChange={handleChange}\n        />\n        <CustomButton id=\"status\" onClick={onStatusChange}>\n          {status ? \"Cleared\" : \"Pending\"}\n        </CustomButton>\n        <Selector\n          defaultValue={categoryList[0]}\n          onChange={onCategoryChange}\n          options={categoryList}\n        />\n        <CustomButton\n          id=\"CommitTransactionBTN\"\n          onClick={() => {\n            setTransaction({ ...transaction, amount: -amount });\n            onCommitExpense();\n          }}\n        >\n          Expense\n        </CustomButton>\n        <CustomButton id=\"CommitTransactionBTN\" onClick={onCommitTransaction}>\n          Income\n        </CustomButton>\n      </InsertFormContainer>\n    </InsertTransactionContainer>\n  );\n};\n\nexport default InsertTransaction;\n","import CategoryActionTypes from \"./category.types\";\n\nexport const setCategories = (categories) => ({\n  type: CategoryActionTypes.SET_CATEGORIES,\n  payload: categories,\n});\n","import styled from \"styled-components\";\n\nexport const TransactionPageContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  border: solid;\n  height: 85vh;\n`;\n","import React from \"react\";\n\nimport Scroll from \"../../components/scroll/scroll.component\";\nimport TransactionList from \"../../components/transaction-list/transaction-list.component\";\nimport SideBar from \"../../components/sidebar/sidebar.component\";\nimport InsertTransaction from \"../../components/insert-transaction/insert-transaction.component\";\n\nimport { TransactionPageContainer } from \"./transactions-page.styles\";\n\nconst TransactionPage = () => (\n  <TransactionPageContainer>\n    <SideBar />\n    <Scroll>\n      <InsertTransaction />\n      <TransactionList />\n    </Scroll>\n  </TransactionPageContainer>\n);\n\nexport default TransactionPage;\n","const BillActionTypes = {\n  ADD_BILL: \"ADD_BILL\",\n  SET_BILLS: \"SET_BILLS\",\n  SET_CURRENT_BILL: \"SET_CURRENT_BILL\",\n  TOGGLE_BILL_HIDDEN: \"TOGGLE_BILL_HIDDEN\",\n  TOGGLE_EDIT_BILL_HIDDEN: \"TOGGLE_EDIT_BILL_HIDDEN\",\n  PAY_BILL: \"PAY_BILL\",\n  UPDATE_BILL: \"UPDATE_BILL\",\n};\n\nexport default BillActionTypes;\n","import BillActionTypes from \"./bills.types\";\n\nexport const setBills = (bills) => ({\n  type: BillActionTypes.SET_BILLS,\n  payload: bills,\n});\n\nexport const setCurrentBill = (bill) => ({\n  type: BillActionTypes.SET_CURRENT_BILL,\n  payload: bill,\n});\n\nexport const toggleBillDropdownHidden = () => ({\n  type: BillActionTypes.TOGGLE_BILL_HIDDEN,\n});\n\nexport const toggleEditBillDropdownHidden = () => ({\n  type: BillActionTypes.TOGGLE_EDIT_BILL_HIDDEN,\n});\n\nexport const paySelectedBill = (bill) => ({\n  type: BillActionTypes.PAY_BILL,\n  payload: bill,\n});\n\nexport const updateSelectedBill = (bill) => ({\n  type: BillActionTypes.UPDATE_BILL,\n  payload: bill,\n});\n","import { createSelector } from \"reselect\";\n\nexport const selectBills = (state) => state.bills;\n\nexport const selectBillList = createSelector(\n  [selectBills],\n  (bills) => bills.billList\n);\n\nexport const selectCurrentBill = createSelector(\n  [selectBills],\n  (bills) => bills.currentBill\n);\n\nexport const selectBillHidden = createSelector(\n  [selectBills],\n  (bills) => bills.hideBillDropdown\n);\n\nexport const selectEditBillHidden = createSelector(\n  [selectBills],\n  (bills) => bills.hideEditBillDropdown\n);\n","import styled from \"styled-components\";\n\nexport const BillDropDownContainer = styled.div`\n  position: absolute;\n  width: 240px;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid black;\n  background-color: white;\n  top: 90px;\n  right: 100px;\n  z-index: 5;\n`;\n\nexport const BillItemsDiv = styled.div`\n  height: 240px;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Select from \"react-select\";\n\nimport {\n  toggleBillDropdownHidden,\n  setCurrentBill,\n  paySelectedBill,\n} from \"../../redux/bills/bills.actions\";\nimport { selectCurrentBill } from \"../../redux/bills/bills.selector\";\nimport { selectAccountList } from \"../../redux/account/account.selector\";\n\nimport { BillDropDownContainer } from \"./bill-dropdown.styles\";\n\nconst BillDropDown = () => {\n  const currentBill = useSelector(selectCurrentBill);\n  const accounts = useSelector(selectAccountList);\n  const dispatch = useDispatch();\n  const [bill, setBill] = useState({\n    bill_id: currentBill.bill_id,\n    date: new Date(currentBill.due_day).toISOString().slice(0, 10),\n    vendor: currentBill.bill_name,\n    category_id: currentBill.category_id,\n    status: \"Pending\",\n    amount: Number(currentBill.amount.replace(/[^0-9.-]+/g, \"\")) * -1,\n    account_id: \"\",\n    next_due_date: new Date().toISOString().slice(0, 10),\n    bill_website: currentBill.bill_website,\n  });\n  const { vendor, amount, date, next_due_date } = bill;\n\n  accounts.forEach(\n    (e) => (\n      // eslint-disable-next-line no-sequences\n      (e.value = e.account_id),\n      (e.label = e.account_name + \" \" + e.account_type)\n    )\n  );\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setBill({ ...bill, [name]: value });\n  };\n\n  const handleAccountChange = (event) => {\n    setBill({ ...bill, account_id: event.account_id });\n  };\n\n  const handlePayment = () => {\n    handleClose();\n\n    dispatch(paySelectedBill(bill));\n  };\n\n  const handleClose = () => {\n    dispatch(toggleBillDropdownHidden());\n    dispatch(setCurrentBill(null));\n  };\n\n  return (\n    <BillDropDownContainer id={currentBill.bill_id}>\n      <div>\n        <p>Date</p>\n        <input\n          type=\"date\"\n          id=\"date\"\n          name=\"date\"\n          value={date}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Vendor</p>\n        <input\n          type=\"text\"\n          id=\"vendor\"\n          name=\"vendor\"\n          value={vendor}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Account</p>\n        <Select\n          defaultValue={accounts[0]}\n          options={accounts}\n          onChange={handleAccountChange}\n        />\n      </div>\n      <div>\n        <p>Payment</p>\n        <input\n          type=\"text\"\n          id=\"amount\"\n          name=\"amount\"\n          value={amount}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Next Date</p>\n        <input\n          type=\"date\"\n          id=\"next_due_date\"\n          name=\"next_due_date\"\n          value={next_due_date}\n          onChange={handleChange}\n        />\n      </div>\n      <button onClick={handlePayment}>Commit</button>\n      <button onClick={handleClose}>Cancel</button>\n    </BillDropDownContainer>\n  );\n};\n\nexport default BillDropDown;\n","import styled from \"styled-components\";\n\nexport const BillDropDownContainer = styled.div`\n  position: absolute;\n  width: 240px;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid black;\n  background-color: white;\n  top: 90px;\n  right: 100px;\n  z-index: 5;\n`;\n\nexport const BillItemsDiv = styled.div`\n  height: 240px;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { selectCurrentBill } from \"../../redux/bills/bills.selector\";\nimport {\n  updateSelectedBill,\n  toggleEditBillDropdownHidden,\n} from \"../../redux/bills/bills.actions\";\n\nimport { BillDropDownContainer } from \"./edit-bill-dropdown.styles\";\n\nconst BillEditDropDown = () => {\n  const currentBill = useSelector(selectCurrentBill);\n  const dispatch = useDispatch();\n  const [bill, setBill] = useState({\n    bill_id: currentBill.bill_id,\n    date: new Date(currentBill.due_day).toISOString().slice(0, 10),\n    vendor: currentBill.bill_name,\n    category_id: currentBill.category_id,\n    status: \"Pending\",\n    amount: Number(currentBill.amount.replace(/[^0-9.-]+/g, \"\")) * -1,\n    next_due_date: new Date().toISOString().slice(0, 10),\n    bill_website: currentBill.bill_website,\n  });\n  const { vendor, amount, date, next_due_date } = bill;\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setBill({ ...bill, [name]: value });\n  };\n\n  const handleEdit = () => {\n    dispatch(updateSelectedBill(bill));\n    dispatch(toggleEditBillDropdownHidden());\n  };\n\n  return (\n    <BillDropDownContainer id={currentBill.bill_id}>\n      <div>\n        <p>Date</p>\n        <input\n          type=\"date\"\n          id=\"date\"\n          name=\"date\"\n          value={date}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Vendor</p>\n        <input\n          type=\"text\"\n          id=\"vendor\"\n          name=\"vendor\"\n          value={vendor}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Payment</p>\n        <input\n          type=\"text\"\n          id=\"amount\"\n          name=\"amount\"\n          value={amount}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <p>Next Date</p>\n        <input\n          type=\"date\"\n          id=\"next_due_date\"\n          name=\"next_due_date\"\n          value={next_due_date}\n          onChange={handleChange}\n        />\n      </div>\n      <button onClick={handleEdit}>Update</button>\n    </BillDropDownContainer>\n  );\n};\n\nexport default BillEditDropDown;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  toggleBillDropdownHidden,\n  toggleEditBillDropdownHidden,\n  setCurrentBill,\n} from \"../../redux/bills/bills.actions\";\n\nconst Bill = ({ bill }) => {\n  const { bill_id, bill_name, bill_website, due_day, amount } = bill;\n  const dispatch = useDispatch();\n\n  function getDay(date) {\n    const d = new Date(date);\n    const day = d.getDate();\n    const month = d.getMonth() + 1;\n\n    return month + \"/\" + day;\n  }\n\n  const formatedDay = getDay(due_day);\n\n  const handlePayBill = () => {\n    dispatch(toggleBillDropdownHidden());\n    dispatch(setCurrentBill(bill));\n    if (bill_website) {\n      goToWebSite();\n    }\n  };\n\n  const handleEditBill = () => {\n    dispatch(setCurrentBill(bill));\n    dispatch(toggleEditBillDropdownHidden());\n  };\n\n  const goToWebSite = () => {\n    window.open(bill_website, \"_blank\");\n  };\n\n  return (\n    <div className=\"billDiv\" id={bill_id}>\n      <p className=\"bill\">{formatedDay}</p>\n      <p className=\"vendor\">{bill_name}</p>\n      <p className=\"bill\">{amount}</p>\n      <p className=\"bill paybill\" onClick={handlePayBill}>\n        Pay\n      </p>\n      <p className=\"bill editbill paybill\" onClick={handleEditBill}>\n        Edit\n      </p>\n    </div>\n  );\n};\n\nexport default Bill;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Bill from \"../bill/bill.component\";\n\nimport { selectBillList } from \"../../redux/bills/bills.selector\";\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\nimport { setBills } from \"../../redux/bills/bills.actions\";\n\nimport \"./bills.styles.scss\";\n\nconst Bills = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectCurrentUser);\n  const bills = useSelector(selectBillList);\n\n  useEffect(() => {\n    fetch(`https://star-ship-enterprise.herokuapp.com/upcomingBills`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_id: currentUser.user_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(setBills(data));\n      });\n  }, [dispatch, currentUser]);\n\n  return (\n    <div>\n      <div className=\"heading\">\n        <p className=\"bill Title\">Due Day</p>\n        <p className=\"vendor Title\">Vender</p>\n        <p className=\"bill Title\">Amount</p>\n        <p className=\"bill Title\">Pay</p>\n        <p className=\"bill Title editbill\">Edit</p>\n      </div>\n      {bills.map((bill) => {\n        return <Bill key={bill.bill_id} bill={bill} />;\n      })}\n    </div>\n  );\n};\n\nexport default Bills;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport BillDropDown from \"../../components/bill-dropdown/bill-dropdown.component\";\nimport BillEditDropDown from \"../../components/edit-bill-dropdown/edit-bill-dropdown.component\";\n\nimport Bills from \"../../components/bills/bills.component\";\n\nimport {\n  selectBillHidden,\n  selectEditBillHidden,\n} from \"../../redux/bills/bills.selector\";\n\nimport \"./billspage.styles.scss\";\n\nconst BillsPage = () => {\n  const hideBillDropdown = useSelector(selectBillHidden);\n  const hideEditBillDropdown = useSelector(selectEditBillHidden);\n\n  return (\n    <div>\n      <Bills />\n      {hideBillDropdown ? null : <BillDropDown />}\n      {hideEditBillDropdown ? null : <BillEditDropDown />}\n    </div>\n  );\n};\n\nexport default BillsPage;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Navigation from \"../../components/navigation/navigation.component\";\nimport TransactionPage from \"../transactions-page/transactions-page.component\";\nimport BillsPage from \"../bills-page/billspage.component\";\n\nimport \"./homepage.styles.scss\";\n\nconst HomePage = () => {\n  const main_page = \"/budget_frontend\";\n\n  return (\n    <div className=\"homepage\">\n      <Navigation />\n      <div>\n        <Switch>\n          <Route\n            exact\n            path={`${main_page}/transactions`}\n            component={TransactionPage}\n          ></Route>\n          <Route\n            exact\n            path={`${main_page}/bills`}\n            component={BillsPage}\n          ></Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","const UserActionTypes = {\n  SET_CURRENT_USER: \"SET_CURRENT_USER\",\n  LOG_OUT_USER: \"LOG_OUT_USER\",\n  SIGN_IN_SUCCESS: \"SIGN_IN_SUCCESS\",\n  SIGN_IN_START: \"SIGN_IN_START\",\n  SIGN_IN_FAILURE: \"SIGN_IN_FAILURE\",\n};\n\nexport default UserActionTypes;\n","import UserActionTypes from \"./user.types\";\n\nexport const setCurrentUser = (user) => ({\n  type: UserActionTypes.SET_CURRENT_USER,\n  payload: user,\n});\n\nexport const signInSuccess = (user) => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  payload: user,\n});\n\nexport const logOutUser = () => ({\n  type: UserActionTypes.LOG_OUT_USER,\n});\n\nexport const signInStart = (emailAndPassword) => ({\n  type: UserActionTypes.SIGN_IN_START,\n  payload: emailAndPassword,\n});\n\nexport const signInFailure = (error) => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error,\n});\n","import React from \"react\";\n\nimport \"./custom-button.styles.scss\";\n\nconst CustomButton = ({\n  children,\n  isGoogleSignIn,\n  inverted,\n  ...otherProps\n}) => (\n  <button\n    className={`${inverted ? \"inverted\" : \"\"} ${\n      isGoogleSignIn ? \"google-sign-in\" : \"\"\n    } custom-button`}\n    {...otherProps}\n  >\n    {children}\n  </button>\n);\n\nexport default CustomButton;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n// import { useHistory } from \"react-router-dom\";\n\nimport { setCurrentUser } from \"../../redux/user/user.action\";\n\nimport \"./sign-in.styles.scss\";\n\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nconst SignIn = () => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = userCredentials;\n  const dispatch = useDispatch();\n  // const history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (email && password) {\n      fetch(\"https://star-ship-enterprise.herokuapp.com/signin\", {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          email: email,\n          password: password,\n        }),\n      })\n        .then((response) => response.json())\n        .then((user) => {\n          if (user !== \"wrong credentials\") {\n            dispatch(setCurrentUser(user[0]));\n            // history.replace(\"./\");\n          } else {\n            alert(\"Username and Password combination does not exist\");\n          }\n        });\n    } else if (!email) {\n      alert(\"missing email!!\");\n    } else if (!password) {\n      alert(\"missing password!!\");\n    }\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n  return (\n    <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n      <main className=\"pa4 black-80\">\n        <div className=\"measure\">\n          <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n          <form onSubmit={handleSubmit}>\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n              Email\n            </label>\n            <input\n              className=\"pa2 input-reset ba bg-transparent hover-bg-black  w-100\"\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              value={email}\n              label=\"email\"\n              required\n            />\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n              Password\n            </label>\n            <input\n              className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\"\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              value={password}\n              label=\"password\"\n              required\n            />\n            <div className=\"buttons\">\n              <CustomButton type=\"submit\">{`Sign In`}</CustomButton>\n            </div>\n          </form>\n        </div>\n      </main>\n    </article>\n  );\n};\n\nexport default SignIn;\n","import React from \"react\";\n\nimport { globalVars } from \"../../hooks/global\";\n\nimport \"./sign-up.styles.scss\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      firstname: \"\",\n      lastname: \"\",\n    };\n  }\n\n  onFirstNameChange = (event) => {\n    this.setState({ firstname: event.target.value });\n  };\n\n  onLastNameChange = (event) => {\n    this.setState({ lastname: event.target.value });\n  };\n\n  onEmailChange = (event) => {\n    this.setState({ email: event.target.value });\n  };\n  onPasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  onSubmitRegister = () => {\n    fetch(globalVars.HOST + \"register\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n      }),\n    })\n      .then((response) => response.json())\n      .then((user) => {\n        if (user) {\n          if (user.user_id) {\n            // this.props.loadUser(user)\n            this.props.onChange();\n          }\n        }\n      });\n  };\n\n  render() {\n    const { onRegisterChange } = this.props;\n    return (\n      <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  First Name\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"firstname\"\n                  id=\"firstname\"\n                  onChange={this.onFirstNameChange}\n                  required\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Last Name\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"lastname\"\n                  id=\"lastname\"\n                  onChange={this.onLastNameChange}\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n              <label className=\"pa0 ma0 lh-copy f6 pointer\"></label>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSubmitRegister}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Register\"\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p\n                onClick={() => onRegisterChange(\"signin\")}\n                className=\"f6 link dim black db pointer\"\n              >\n                Sign In\n              </p>\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\n\nimport SignIn from \"../../components/sign-in/sign-in.component\";\nimport SignUp from \"../../components/sign-up/sign-up.component\";\n\nimport \"./sign-in-and-sign-up.styles.scss\";\n\nconst SignInOrSignUpPage = () => (\n  <div className=\"sign-in-or-sign-up\">\n    <SignIn />\n    <SignUp />\n  </div>\n);\n\nexport default SignInOrSignUpPage;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport \"./App.css\";\n\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport SignInOrSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\";\n\nimport { selectCurrentUser } from \"./redux/user/user.selector\";\n\nconst App = () => {\n  const currentUser = useSelector(selectCurrentUser);\n  return <div>{currentUser ? <HomePage /> : <SignInOrSignUpPage />}</div>;\n};\n\nexport default App;\n","import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\n\nimport { signInFailure, signInSuccess } from \"./user.action\";\n\nfunction* fetchUser(email, password) {\n  try {\n    const req = yield fetch(\n      \"https://star-ship-enterprise.herokuapp.com/signin\",\n      {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          email: email,\n          password: password,\n        }),\n      }\n    );\n    const user = yield req.user();\n    console.log(user);\n  } catch (error) {\n    console.log(`ERROR: ${error}`);\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const user = yield fetchUser(email, password);\n\n    yield put(signInSuccess(user));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onSignInStart() {\n  yield takeLatest(UserActionTypes.SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas() {\n  yield all([call(onSignInStart)]);\n}\n","import { all, call } from \"redux-saga/effects\";\n\nimport { userSagas } from \"./user/user.sagas\";\n\nexport default function* rootSaga() {\n  yield all([call(userSagas)]);\n}\n","export const updateAccountTotal = (accounts, currentAccount, balance) => {\n  const accountToChange = accounts.find(\n    (account) => account.account_id === currentAccount\n  );\n  return accounts.map((account) =>\n    account.account_id === currentAccount\n      ? {\n          ...account,\n          total: (\n            parseFloat(accountToChange.total) + parseFloat(balance)\n          ).toFixed(2),\n        }\n      : account\n  );\n};\n","import AccountActionTypes from \"./account.types\";\nimport { updateAccountTotal } from \"./account.utils\";\n\nconst INITIAL_STATE = {\n  accountList: [],\n  currentAccount: null,\n};\n\nconst accountReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case AccountActionTypes.SET_ACCOUNTS:\n      return {\n        ...state,\n        accountList: action.payload,\n      };\n    case AccountActionTypes.SET_CURRENT_ACCOUNT:\n      return {\n        ...state,\n        currentAccount: action.payload,\n      };\n    case AccountActionTypes.UPDATE_ACCOUNT_TOTAL:\n      return {\n        ...state,\n        accountList: updateAccountTotal(\n          state.accountList,\n          state.currentAccount,\n          action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default accountReducer;\n","import UserActionTypes from \"./user.types\";\n\nconst INITIAL_STATE = {\n  currentUser: null,\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SET_CURRENT_USER:\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return {\n        ...state,\n        currentUser: action.payload,\n      };\n    case UserActionTypes.LOG_OUT_USER:\n      return {\n        INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { insertTransaction } from \"../../hooks/global\";\n\nexport const addTransactionToList = (transactions, transactionToAdd) => {\n  const transaction = {\n    date: transactionToAdd.date,\n    vendor: transactionToAdd.vendor,\n    category_id: transactionToAdd.category.value,\n    status: transactionToAdd.status,\n    amount: transactionToAdd.amount,\n    account_id: transactionToAdd.account_id,\n  };\n  insertTransaction(transaction);\n\n  transactionToAdd = {\n    date: transactionToAdd.date,\n    vendor: transactionToAdd.vendor,\n    label: transactionToAdd.category.label,\n    status: transactionToAdd.status,\n    amount: transactionToAdd.amount,\n    account_id: transactionToAdd.account_id,\n  };\n  return [transactionToAdd, ...transactions];\n};\n","import TransactionActionTypes from \"./transaction.types\";\nimport { addTransactionToList } from \"./transaction.utils\";\n\nconst INITIAL_STATE = {\n  transactionList: [],\n};\n\nconst transactionReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TransactionActionTypes.SET_TRANSACTIONS:\n      return {\n        ...state,\n        transactionList: action.payload,\n      };\n    case TransactionActionTypes.ADD_TRANSACTION:\n      return {\n        ...state,\n        transactionList: addTransactionToList(\n          state.transactionList,\n          action.payload\n        ),\n      };\n    case TransactionActionTypes.ADD_EXPENSE:\n      return {\n        ...state,\n        transactionList: addTransactionToList(\n          state.transactionList,\n          action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default transactionReducer;\n","import CategoryActionTypes from \"./category.types\";\n\nconst INITIAL_STATE = {\n  categoryList: [],\n};\n\nconst categoryReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CategoryActionTypes.SET_CATEGORIES:\n      return {\n        ...state,\n        categoryList: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default categoryReducer;\n","import { insertTransaction, fetchUpdateBill } from \"../../hooks/global\";\n\nexport const addBillToUpcommingBills = (bills, billToAdd) => {\n  return [...bills, billToAdd];\n};\n\nexport const payBill = (billToPay) => {\n  const transaction = {\n    date: billToPay.date,\n    vendor: billToPay.vendor,\n    category_id: billToPay.category_id,\n    status: billToPay.status,\n    amount: billToPay.amount,\n    account_id: billToPay.account_id,\n  };\n  insertTransaction(transaction);\n  updateBill(billToPay);\n};\n\nexport const updateBill = (billToUpdate) => {\n  fetchUpdateBill(billToUpdate);\n};\n","import BillActionTypes from \"./bills.types\";\nimport { addBillToUpcommingBills, payBill, updateBill } from \"./bills.utils\";\n\nconst INITIAL_STATE = {\n  billList: [],\n  hideBillDropdown: true,\n  hideEditBillDropdown: true,\n  currentBill: null,\n};\n\nconst billReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case BillActionTypes.SET_BILLS:\n      return {\n        ...state,\n        billList: action.payload,\n      };\n    case BillActionTypes.ADD_BILL:\n      return {\n        ...state,\n        billToAdd: addBillToUpcommingBills(state.billToAdd, action.payload),\n      };\n    case BillActionTypes.PAY_BILL:\n      return {\n        ...state,\n        billToPay: payBill(action.payload),\n      };\n    case BillActionTypes.TOGGLE_BILL_HIDDEN:\n      return {\n        ...state,\n        hideBillDropdown: !state.hideBillDropdown,\n      };\n    case BillActionTypes.TOGGLE_EDIT_BILL_HIDDEN:\n      return {\n        ...state,\n        hideEditBillDropdown: !state.hideEditBillDropdown,\n      };\n    case BillActionTypes.SET_CURRENT_BILL:\n      return {\n        ...state,\n        currentBill: action.payload,\n      };\n    case BillActionTypes.UPDATE_BILL:\n      return {\n        ...state,\n        updateToBill: updateBill(action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default billReducer;\n","import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport accountReducer from \"./account/account.reducer\";\nimport userReducer from \"./user/user.reducer\";\nimport transactionReducer from \"./transaction/transaction.reducer\";\nimport categoryReducer from \"./category/category.reducer\";\nimport billReducer from \"./bills/bills.reducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\", \"transactions\", \"accounts\", \"categories\"],\n};\n\nconst appReducer = combineReducers({\n  user: userReducer,\n  transactions: transactionReducer,\n  accounts: accountReducer,\n  categories: categoryReducer,\n  bills: billReducer,\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === \"USER_LOGOUT\") {\n    return appReducer(undefined, action);\n  }\n  return appReducer(state, action);\n};\n\nexport default persistReducer(persistConfig, rootReducer);\n","import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootSaga from \"./root-saga\";\n\nimport rootReducer from \"./root-reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from \"react\";\n\nconst Loading = () => <div>Loading</div>;\n\nexport default Loading;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"tachyons\";\n\nimport { store, persistor } from \"./redux/store\";\nimport Loading from \"./components/loading/loading.component\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate loading={<Loading />} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </BrowserRouter>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}