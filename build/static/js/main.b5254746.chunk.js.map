{"version":3,"sources":["components/SignIn/SignIn.js","components/Register/Register.js","components/InvalidUser/InvalidUser.js","components/Navigation/Navigation.js","Hooks/useBalance.js","components/AccountBalance/AccountBalance.js","components/AccountBalance/AccountPending.js","components/Scroll/Scroll.js","components/Accounts/Account.js","components/Accounts/AccountList.js","components/SideBar/SideBar.js","components/Search/Search.js","components/Transactions/Transaction.js","components/Transactions/TransactionList.js","components/NewAccount/NewAccount.js","components/UpcomingBills/Bill.js","components/UpcomingBills/UpcomingBills.js","components/InputTransaction/InputTransaction.js","Hooks/useSessionStorage.js","App.js","reportWebVitals.js","index.js"],"names":["SignIn","props","useState","signInEmail","setSignInEmail","signInPassword","setSignInPassword","loading","setLoading","missingPassword","setMissingPassword","className","id","htmlFor","type","name","onChange","event","target","value","required","onClick","fetch","host","method","headers","body","JSON","stringify","email","password","then","response","json","user","user_id","firstname","console","log","onRegisterChange","Register","onFirstNameChange","setState","onLastNameChange","lastname","onEmailChange","onPasswordChange","onSubmitRegister","state","this","React","Component","invalidUser","onRouteChange","isSignedIn","Navigation","style","display","justifyContent","useBalance","account_id","address","submit","total","setTotal","color","setColor","useEffect","getTotalBalance","a","data","sum","AccountBalance","balanceColor","balance","AccountPending","pendingBalance","pendingColor","Math","round","toFixed","Scroll","overflowY","height","children","Card","account_name","account_type","AccountList","accounts","setAccounts","handelLoadAccount","map","i","SideBar","o","userid","Search","categories","setCategories","categoryList","push","label","category","catid","error","options","Transaction","transaction_id","accountid","edit","setEdit","date","setDate","vendor","setVendor","amount","setAmount","setCategory","status","setStatus","handelEdit","formatedDate","d","Date","year","getFullYear","getMonth","getDate","getFormattedDate","stringDate","month","day","getStingDate","placeholder","catch","handelStatus","TransactionList","transactions","setTransactions","updateTransactions","from_date","to_date","e","update","NewAccount","setAccountType","setAccountName","open_balance","setOpenBalance","Bill","bill_id","bill_name","bill_website","due_date","website","setWebsite","setName","formatedDay","getDay","window","open","UpcomingBills","bills","setBills","due_day","InputTransaction","today","toISOString","slice","onCommitTransaction","res","replace","useSessionStorage","key","initialValue","parse","sessionStorage","getItem","Function","getSavedValue","setValue","setItem","App","setuser_id","setIsSignedIn","isRegistered","setIsRegistered","setAccountid","sideBarOpen","setSubmit","split","createAccount","setCreateAccount","billsPage","setBillsPage","insert","setInsert","handleSignIn","handleSignOut","localStorage","clear","handleRegistered","handleInputChange","handelNewAccount","account","InvalidUser","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5254746.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst SignIn = (props) => {\n\tconst [signInEmail, setSignInEmail] = useState('');\n\tconst [signInPassword, setSignInPassword] = useState('')\n\tconst [loading, setLoading] = useState(false);\n\tconst [missingPassword, setMissingPassword] = useState(false);\n\n\tconst onEmailChange = (event) => {\n\t\tsetSignInEmail(event.target.value);\n\t}\n\t\n\tconst onPasswordChange = (event) => {\n\t\tsetSignInPassword(event.target.value);\n\t}\n\n\tconst onSubmitSignIn = () => {\n\t\tif (signInEmail && signInPassword) {\n\t\t\tsetLoading(true);\n\t\t\tfetch(props.host + 'signin', {\n\t\t\t\tmethod: 'post',\n\t\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\temail: signInEmail,\n\t\t\t\t\tpassword: signInPassword\n\t\t\t\t})\n\t\t\t})\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(user => {\n\t\t\t\t\tif (user !== 'wrong credentials') {\n\t\t\t\t\t\tprops.onChange(user[0].user_id, user[0].firstname);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprops.onChange(-1, -1)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t}\n\t\telse if (!signInEmail) {\n\t\t\tconsole.log(\"missing email!!\");\n\t\t}\n\t\telse if (!signInPassword) {\n\t\t\tconsole.log(\"missing password!!\");\n\t\t\tsetMissingPassword(true);\n\t\t}\n\t}\n\treturn (\n\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n\t\t\t<main className=\"pa4 black-80\">\n\t\t\t  <div className=\"measure\">\n\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n\t\t\t      <div className=\"mt3\">\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n\t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" onChange={onEmailChange} required/>\n\t\t\t      </div>\n\t\t\t      <div className=\"mv3\">\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n\t\t\t        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" onChange={onPasswordChange} required/>\n\t\t\t        { missingPassword ? <p>Missing Password</p> : <p></p>}\n\t\t\t        \n\t\t\t      </div>\n\t\t\t      <label className=\"pa0 ma0 lh-copy f6 pointer\"></label>\n\t\t\t    </fieldset>\n\t\t\t    <div className=\"\">\n\t\t\t      <input onClick={onSubmitSignIn} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value={!loading ? \"Sign in\" : \"Loading\"} />\n\t\t\t    </div>\n\t\t\t    <div className='lh-copy mt3'>\n\t\t\t      <p onClick={() => props.onRegisterChange('register')} className='f6 link dim black db pointer'>Register</p>\n\t\t\t    </div>\n\t\t\t  </div>\n\t\t\t</main>\n\t\t</article>\n\t);\n}\n\nexport default SignIn;","import React from 'react';\n\nclass Register extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tfirstname: '',\n\t\t\tlastname: ''\n\t\t}\n\t}\n\n\tonFirstNameChange = (event) => {\n\t\tthis.setState({firstname: event.target.value})\n\t}\n\n\tonLastNameChange = (event) => {\n\t\tthis.setState({lastname: event.target.value})\n\t}\n\n\tonEmailChange = (event) => {\n\t\tthis.setState({email: event.target.value})\n\t}\n\tonPasswordChange = (event) => {\n\t\tthis.setState({password: event.target.value})\n\t}\n\n\tonSubmitRegister = () => {\n\t\tfetch(this.props.host+'register', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.email,\n\t\t\t\tpassword: this.state.password,\n\t\t\t\tfirstname: this.state.firstname,\n\t\t\t\tlastname: this.state.lastname\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(user => {\n\t\t\t\tif (user) {\n\t\t\t\t\tif (user.user_id) {\n\t\t\t\t\t// this.props.loadUser(user)\n\t\t\t\t\tthis.props.onChange();\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t})\n\t}\n\n\trender() {\n\t\tconst { onRegisterChange } = this.props;\n\t\treturn (\n\t\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n\t\t\t\t<main className=\"pa4 black-80\">\n\t\t\t\t  <div className=\"measure\">\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">First Name</label>\n\t\t\t\t        <input \n\t\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t        \ttype=\"text\" \n\t\t\t\t        \tname=\"firstname\" \n\t\t\t\t        \tid=\"firstname\" \n\t\t\t\t        \tonChange={this.onFirstNameChange}\n\t\t\t\t        \trequired\n\t\t\t\t        />\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Last Name</label>\n\t\t\t\t        <input \n\t\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t        \ttype=\"text\" \n\t\t\t\t        \tname=\"lastname\" \n\t\t\t\t        \tid=\"lastname\" \n\t\t\t\t        \tonChange={this.onLastNameChange}\n\t\t\t\t        />\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n\t\t\t\t        <input \n\t\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t        \ttype=\"email\" \n\t\t\t\t        \tname=\"email-address\" \n\t\t\t\t        \tid=\"email-address\" \n\t\t\t\t        \tonChange={this.onEmailChange}\n\t\t\t\t        />\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"mv3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n\t\t\t\t        <input \n\t\t\t\t        \tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t        \ttype=\"password\" \n\t\t\t\t        \tname=\"password\" \n\t\t\t\t        \tid=\"password\" \n\t\t\t\t        \tonChange={this.onPasswordChange}\n\t\t\t\t        />\n\t\t\t\t      </div>\n\t\t\t\t      <label className=\"pa0 ma0 lh-copy f6 pointer\">\n\t\t\t\t      </label>\n\t\t\t\t    </fieldset>\n\t\t\t\t    <div className=\"\">\n\t\t\t\t      <input \n\t\t\t\t      \tonClick={this.onSubmitRegister}\n\t\t\t\t\t    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n\t\t\t\t\t    type=\"submit\" \n\t\t\t\t\t    value=\"Register\" \n\t\t\t\t\t  />\n\t\t\t\t    </div>\n\t\t\t\t    <div className='lh-copy mt3'>\n\t\t\t\t      <p onClick={() => onRegisterChange('signin')} className='f6 link dim black db pointer'>Sign In</p>\n\t\t\t\t    </div>\n\t\t\t\t  </div>\n\t\t\t\t</main>\n\t\t\t</article>\n\t\t);\n\t}\n\n}\n\nexport default Register;","import React from 'react';\n\nconst invalidUser = ({ onRouteChange, isSignedIn }) => {\n\t\n\treturn (\n\t\t<div >\n\t\t\t<h1 className='f3'> User and password combination do not exist</h1>\n\t\t\t<p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Try again</p>\n\t\t</div>\n\t);\n}\n\nexport default invalidUser;\n\n\n\t// return (\n\t// \t<div>\n\t// \t  <h1 className='f3'>\n\t// \t    {`${props.name}, your account ballance is ...`}\n\t// \t  </h1>\n\t// \t  \t<p className={pendingcolor}>\n\t// \t  \t\t{`Pending $ ${pendingSum}`}\n\t// \t  \t</p>\n\t// \t  \t<p className={sumcolor}>{`Actual $ ${sum}`}\n\t// \t  \t</p>\n\t// \t</div>\n\t// );","import React from 'react';\nimport './navigation.css';\n// import Greeting from '../Greeting/Greeting.js';\n\nconst Navigation = ({ onRouteChange, isSignedIn, name}) => {\n\tif(isSignedIn) {\n\t\treturn (\n\t\t\t<nav className='navigation'>\n\t\t\t\t<p className='f3'>{name}</p>\n\t\t\t\t<p onClick={() => onRouteChange('signout')} \n\t\t\t\tclassName='f3 link dim black underline pa3 pointer'>Sign Out</p>\n\t\t\t</nav>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n\t\t\t\t<p onClick={() => onRouteChange('signin')} \n\t\t\t\tclassName='f3 link dim black underline pa3 pointer'>Sign In</p>\n\t\t\t\t<p onClick={() => onRouteChange('register')} \n\t\t\t\tclassName='f3 link dim black underline pa3 pointer'>Register</p>\n\t\t\t</nav>\n\t\t);\n\t}\n}\n\nexport default Navigation;","import { useState, useEffect } from 'react'\n\nexport default function useBalance(account_id, host, address, submit) {\n\tconst [total, setTotal] = useState();\n\tconst [color, setColor] = useState('black');\n\tuseEffect(() => {\n\t\tif (account_id) {\n\t\t\tasync function getTotalBalance() {\n\t\t\t\tawait fetch(`${host}${address}`, {\n\t\t\t\t\tmethod: 'post',\n\t\t\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t  \"account_id\": account_id\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t\t.then(response => response.json())\n\t\t\t\t  \t.then(data => setTotal(data[0].sum));\n\t\t\t}\n\n\t\t\tif (total < 0) {\n\t\t\t\tsetColor('red')\n\t\t\t}else {setColor('black')}\n\n\t\t\tgetTotalBalance();\n\t\t}\n\n\t},[account_id, total, host, submit])\t\n\n\treturn [total, color];\n}","import React, { useState } from 'react';\nimport useBalance from '../../Hooks/useBalance.js';\nimport './AccountBalance.css';\n\nconst AccountBalance = (props) => {\n\tconst address = 'sumCleared';\n\t// const [balance, balanceColor] = useBalance(\n\t// \tprops.account_id, props.host, address, props.submit);\n\t// const [balanceColor, setBalanceColor] = useState('black')\n\n\treturn (\n\t  \t<p className={props.balanceColor}>{`$ ${props.balance}`} </p>\t\n\t);\n}\n\nexport default AccountBalance;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport useBalance from '../../Hooks/useBalance.js';\nimport './AccountBalance.css'\n\nconst AccountPending = (props) => {\n\tconst address = 'sumPending';\n\tconst [pendingBalance, pendingColor] = useBalance(\n\t\tprops.account_id, props.host, address, props.submit);\n\n\treturn (\n\t  \t<p className={pendingColor}>{`$ ${((Math.round(pendingBalance) * 100) / 100).toFixed(2)}`} </p>\n\t);\n}\n\nexport default AccountPending;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{overflowY: 'scroll', height:'500px'}} key={props.children}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n\nexport default Scroll;","import React from 'react';\nimport AccountBalance from '../AccountBalance/AccountBalance.js';\nimport './Account.css';\nimport useBalance from '../../Hooks/useBalance.js'\n// import Search from '../Search/Search.js'\n\n// const getStingDate = require('./Functions/getStingDate');\n\nconst Card = (props) => {\n\tconst { account_id, account_name, account_type } = props;\n\tconst [balance, balanceColor] = useBalance(account_id, props.host, 'sumCleared', props.submit);\n\n\n\tconst handelLoadAccount = () => {\n\t\tprops.onChange(account_id)\n\t}\n\n\treturn (\n\t\t<div id = \"Accounts\" onClick={() => handelLoadAccount()}>\n\t\t\t<p className=\"Account\">{account_name + \" \" + account_type}</p>\n\t\t\t<p className=\"Account\">{balance}</p>\n\t\t</div>\n\n\t\t);\n\n\n\n}\n\nexport default Card;","import React, { useState, useEffect } from 'react';\nimport Account from './Account.js'\nimport './Account.css'\n\nconst AccountList = (props) => {\n\tconst [accounts, setAccounts] = useState([]);\n\t\n\tconst handelLoadAccount = (account_id) => {\n\t\tprops.onChange(account_id)\n\t}\n\n\tuseEffect(() => {\n\t\tfetch(`${props.host}accounts`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t  \"user_id\": props.user_id\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n      \t.then(data => {setAccounts(data)});\n\n\t},[props.host, props.user_id, props.submit])\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"flex justify-center\">\n\t\t\t\t<h2 className=\"fl w-25 tc\">Accounts </h2> \n\t\t\t</div>\n\t\t\t{\n\t\t\taccounts.map((data, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\t\t\t\t\t\t\n\t\t\t\t\t\t<Account \n\t\t\t\t\t\tclassName=\"Account\"\n\t\t\t\t\t\tkey={accounts[i].account_id + accounts[i].user_id}\n\t\t\t\t\t\taccount_id={accounts[i].account_id} \n\t\t\t\t\t\tuser_id={accounts[i].account_id}\n\t\t\t\t\t\taccount_name={accounts[i].account_name}\n\t\t\t\t\t\taccount_type={accounts[i].account_type}\n\t\t\t\t\t\tonChange={handelLoadAccount}\n\t\t\t\t\t\thost={props.host}\n\t\t\t\t\t\tsubmit={props.submit}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})\n\t\t\t}\n\t\t</div>\n\t\t);\n}\n\nexport default AccountList;","import React from 'react';\n// import UpcomingBills from '../UpcomingBills/UpcomingBills.js';\nimport AccountList from '../Accounts/AccountList.js';\n\nconst SideBar = (props) => {\n\n\tconst handelLoadAccount = (account_id) => {\n\t\tprops.onChange(account_id)\n\t}\n\n\tconst handelNewAccountClick = () => {\n\t\tprops.account()\n\t}\n\n\tconst handelBillsClick = () => {\n\t\tprops.bills()\n\t}\n\n\treturn (\n\t\t<div className= 'w-25 pa2 mr2 ml2'>\n{/*\t\t\t<h3>Actions</h3>\n\t\t\t<button onClick={handelBillsClick}>Bills</button>\n\t\t\t<button onClick={handelNewAccountClick}>New Account</button>*/}\n\t\t\t<AccountList \n\t\t\t\tkey={props.userid} \n\t\t\t\tuser_id={props.user_id} \n\t\t\t\thost={props.host} o\n\t\t\t\tonChange={handelLoadAccount}\n\t\t\t\tsubmit={props.submit}/>\n\t\t</div>\n\t);\n};\n\nexport default SideBar;","import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\n\nfunction Search(props) {\n\tconst [categories, setCategories] = useState([])\n\tconst categoryList = [];\n\t// const [clabel, setClabel] = useState('-1')\n\n\tconst handleChange = (data) => {\n\t\tprops.onChange(data.value, data.label)\n\t\t//setClabel(data.label)\n\t}\n\n\tuseEffect(() => {\n\t\ttry {\n\t\tfetch(props.host+'category')\n\t\t\t.then(response => response.json())\n\t      \t.then(data => {\n\t      \t\tdata.map(i => {\n\t      \t\t\tcategoryList.push({label: i.category, value: i.catid})\n\t      \t\t})\n\t      \t})\n\t      \t.then(setCategories(categoryList));\n\t    } catch (error) {\n\t\t\tconsole.error(error)\n\t\t}\n\t},[props.host])\n\n\treturn (\n\t\t<div className='w-30'>\n\t\t  <Select\n\t\t  \tonChange={handleChange}\n\t\t    options={categories}\n\t\t  />\n\t\t</div>\n\t);\n}\n\nexport default Search;\n","import React, { useState } from 'react';\nimport Search from '../Search/Search.js'\nimport './Transaction.css';\n\n// const getStingDate = require('./Functions/getStingDate');\n\nconst Transaction = (props) => {\n\tconst { transaction_id, accountid } = props;\n\tconst [edit, setEdit] = useState(false);\n\tconst [date, setDate] = useState(props.date)\n\tconst [vendor, setVendor] = useState(props.vendor)\n\tconst [amount, setAmount] =\tuseState(props.amount)\n\tconst [category, setCategory] = useState(props.category)\n\tconst [status, setStatus] = useState(props.status);\n\n\tfunction getFormattedDate(date) {\n\t\tconst d = new Date(date);\n\n\t\tconst year = d.getFullYear();\n\t\tconst month = (d.getMonth() + 1)\n\t\tconst day = d.getDate() + 1;\n\t  \n\t  return month + '-' + day + '-' + year;\n\t}\n\n\tfunction getStingDate(date) {\n\t\tconst d = new Date(date);\n\n\t\tconst year = d.getFullYear();\n\t\tlet month = (d.getMonth() + 1)\n\t\tlet day = d.getDate();\n\n\t\tmonth < 10 ? month = `0${month}` : month = `${month}`\n\t\tday < 10 ? day = `0${day}` : day = `${day}`;\n\t  \n\t  return `${year}-${month}-${day}`;\n\t}\n\n\tconst handelStatus = (transaction_id, status, vendor) => {\n\t\tfetch(`${props.host}updateStatus`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t  \"transaction_id\": transaction_id,\n\t\t\t  \"accountid\": accountid\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.catch(console.log)\n\t\tstatus === 'Cleared' ? setStatus('Pending') :\tsetStatus('Cleared')\n\t\tprops.onChange()\n\t\t// console.log(transaction_id, vendor)\n\n\t}\n\n\tconst handelEdit = (transaction_id) => {\n\t\tsetEdit(!edit)\n\t}\n\n\tconst onDateChange = (event) => {\n\t\tsetDate(event.target.value)\n\t}\n\n\tconst onVendorChange = (event) => {\n\t\tsetVendor(event.target.value)\n\t}\n\n\tconst onAmountChange = (event) => {\n\t\tsetAmount(event.target.value)\n\t}\n\n\tconst onCategoryChange = (event) => {\n\t\tsetCategory(event)\n\t}\n\n\tconst onUpdateTransaction = () => {\n\t\tfetch(props.host+'update', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t  \"date\": date,\n\t\t\t  \"vendor\": vendor,\n\t\t\t  \"category\": category,\n\t\t\t  \"status\": props.status,\n\t\t\t  \"amount\": amount,\n\t\t\t  \"transaction_id\": transaction_id\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.catch(console.log)\n\t\tsetVendor(vendor)\n\t\tsetDate(stringDate)\n\t\tsetAmount(amount)\n\t\tsetCategory(category)\n\t\thandelEdit(transaction_id)\n\t\tprops.onChange()\n\n\t}\n\n\tconst formatedDate = getFormattedDate(date)\n\tconst stringDate = getStingDate(date)\n\t// const removeTransactions = handelRemove(id)\n\treturn (\n\t\t<div className='outline'>\n\t\t{ !edit\n\t\t? <div className=\"flex justify-left\">\n\t\t\t<p className=\"date transaction\">{formatedDate}</p> \n\t\t\t<p className=\"vendor transaction\">{vendor}</p> \n\t\t\t<p className='dollar transaction'>$</p>\n\t\t\t<p className=\"amount transaction\">{amount}</p> \n\t\t\t<p className=\"status transaction\"\n\t\t\t\tonClick={() => handelStatus(transaction_id, status, vendor)}\n\t\t\t>{status}\n\t\t\t</p> \n\t\t\t<p className=\"category transaction\">{category}</p>\n\t\t\t<p \n\t\t\t\tclassName=\"edit transaction\" \n\t\t\t\tonClick={() => handelEdit(transaction_id)}>edit\n\t\t\t</p>\n\t\t</div>\n\t\t: \t<div className=\"flex justify-center\">\n\t\t\t\t<p className=\"fl w-10 tc\">{transaction_id}</p> \n\t\t\t\t<input \n\t\t\t\t\tclassName= 'f4 pa2 w-60 center' \n\t\t\t\t\ttype='date' \n\t\t\t\t\tid='date'\n\t\t\t\t\tname='date'\n\t\t\t\t\tvalue={stringDate}\n\t\t\t\t\tonChange={onDateChange}\n\t\t\t\t/>\n\t\t\t\t<input \n\t\t\t\t\tclassName= 'f4 pa2 w-70 center' \n\t\t\t\t\ttype= 'text' \n\t\t\t\t\tplaceholder=\"Vendor\"\n\t\t\t\t\tid='Vendor'\n\t\t\t\t\tname='Vendor'\n\t\t\t\t\tvalue={vendor}\n\t\t\t\t\tonChange={onVendorChange}\n\t\t\t\t/>\n\t\t\t\t<input \n\t\t\t\t\tclassName= 'f4 pa2 w-70 center' \n\t\t\t\t\ttype= 'double' \n\t\t\t\t\tplaceholder=\"Amount\"\n\t\t\t\t\tid='Amount'\n\t\t\t\t\tname='Amount'\n\t\t\t\t\tvalue={amount}\n\t\t\t\t\tonChange={onAmountChange}\n\t\t\t\t/>\n\t\t\t\t<Search \n\t\t\t\t\tonChange={onCategoryChange}\n\t\t\t\t/>\n\t\t\t\t<button onClick={handelEdit}>Cancel </button>\n\t\t\t\t<button onClick={onUpdateTransaction}>Update </button>\n\t\t\t\t{/*\t<button onClick={removeTransactions}>Del </button>*/}\t\t\n\t\t\t</div>\n\t\t}\n\t\t</div>\n\n\t\t);\n\n}\n\nexport default Transaction;","import React, { useState, useEffect } from 'react';\nimport Transaction from './Transaction.js';\nimport './Transaction.css';\n\nconst TransactionList = (props) => {\n\tconst [transactions, setTransactions] = useState([]);\n\n\tconst updateTransactions = (value) => {\n\t\tprops.onChange()\n\t}\n\tuseEffect(() => {\n\t\ttry{\n\t\tfetch(`${props.host}transactions`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t  \"account_id\": props.account_id,\n\t\t\t  \"from_date\": props.from_date,\n\t\t\t  \"to_date\": props.to_date\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n      \t.then(data => {setTransactions(data)});\n      }\n      catch (e) {\n      \tconsole.log(e)\n      }\n\n\t},[props.submit, props.account_id, props.host, props.from_date, props.to_date, props.update])\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"outline flex justify-center\">\n\t\t\t\t<p className=\"date transaction\">Date</p> \n\t\t\t\t<p className=\"vendor transaction\">Vender</p> \n\t\t\t\t<p className='dollar transaction'>&nbsp;&nbsp;</p>\t\n\t\t\t\t<p className=\"amount transaction\">Amount</p> \n\t\t\t\t<p className=\"status transaction\">Status</p> \n\t\t\t\t<p className=\"category transaction\">Category</p>\n\t\t\t\t<p className=\"edit transaction\">Edit</p>\n\t\t\t</div>\n\t\t\t{\n\t\t\ttransactions.map((data, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Transaction className=\"transactions\"\n\t\t\t\t\tkey={transactions[i].transaction_id}\n\t\t\t\t\ttransaction_id={transactions[i].transaction_id} \n\t\t\t\t\taccountid={transactions[i].accountid}\n\t\t\t\t\tdate = {transactions[i].date}\n\t\t\t\t\tvendor={transactions[i].vendor}\n\t\t\t\t\tamount={(Math.round(transactions[i].amount * 100) / 100).toFixed(2)}\n\t\t\t\t\tstatus={transactions[i].status}\n\t\t\t\t\tcategory={transactions[i].category}\n\t\t\t\t\thost={props.host}\n\t\t\t\t\tonChange={updateTransactions}\n\t\t\t\t\tsubmit={props.submit}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})\n\t\t\t}\n\t\t</div>\n\t\t);\n}\n\nexport default TransactionList;\n","import React, { useState } from 'react';\n\nconst NewAccount = (props) => {\n\tconst [account_type, setAccountType] = useState('')\n\tconst [account_name, setAccountName] = useState('')\n\tconst [open_balance, setOpenBalance] = useState('')\n\n\tconst onAccountTypeChange = (event) => {\n\t\tsetAccountType(event.target.value)\n\t}\n\n\tconst onAccountNameChange = (event) => {\n\t\tsetAccountName(event.target.value)\n\t}\n\n\tconst onBalanceChange = (event) => {\n\t\tsetOpenBalance(event.target.value)\n\t}\n\n\tconst createNewAccount = () => {\n\t\tfetch(props.host+'newaccount', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t    \"account_name\": account_name,\n\t\t\t    \"account_type\": account_type,\n\t\t\t    \"openningbalance\": open_balance,\n\t\t\t    \"user_id\": props.user_id\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.catch(console.log)\n\t}\n\n\treturn (\n\t\t<div >\n\t\t\t<div className='form center pa4 br3 shadow-5'>\n\t\t\t\t<input \n\t\t\t\t\tclassName= 'f4 pa2 w-25 center' \n\t\t\t\t\ttype='text' \n\t\t\t\t\tplaceholder=\"Account Name\"\n\t\t\t\t\tid='account_name'\n\t\t\t\t\tname='account_name'\n\t\t\t\t\tvalue={account_name}\n\t\t\t\t\tonChange={onAccountNameChange}\n\t\t\t\t/>\n\t\t\t\t<input \n\t\t\t\t\tclassName= 'f4 pa2 w-25 center' \n\t\t\t\t\ttype='text' \n\t\t\t\t\tplaceholder=\"Account Type\"\n\t\t\t\t\tid='account_type'\n\t\t\t\t\tname='account_type'\n\t\t\t\t\tvalue={account_type}\n\t\t\t\t\tonChange={onAccountTypeChange}\n\t\t\t\t/>\n\t\t\t\t<input \n\t\t\t\t\tclassName= 'f4 pa2 w-25 center' \n\t\t\t\t\ttype= 'double' \n\t\t\t\t\tplaceholder=\"Openning Balance\"\n\t\t\t\t\tid='open_balance'\n\t\t\t\t\tname='open_balance'\n\t\t\t\t\tvalue={open_balance}\n\t\t\t\t\tonChange={onBalanceChange}\n\t\t\t\t/>\n\t\t\t\t<button onClick={() => createNewAccount()}>New Account</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default NewAccount;\n","import React, { useState } from 'react';\n\nfunction Bill(props) {\n\tconst { bill_id, bill_name, bill_website, due_date} = props;\n\tconst [edit, setEdit] = useState(false);\n\tconst [amount, setAmount] = useState(props.amount)\n\tconst [website, setWebsite] = useState(bill_website)\n\tconst [name, setName] = useState(bill_name)\n\t// const date = props.due_date\n\n\tfunction getDay(date) {\n\t\tconst d = new Date(date);\n\t\tconst day = d.getDate();\n\t\tconst month = (d.getMonth() + 1)\n\t  \n\t  return month + '/' + day;\n\t}\n\n\tconst formatedDay = getDay(due_date)\n\n\tconst goToWebPage = () => {\n\t\twindow.open(\n              bill_website, \"_blank\");\n\t}\n\n\tconst handelEdit = () => {\n\t\tsetEdit(!edit)\n\t}\n\n\tconst onNameChange = (event) => {\n\t\tsetName(event.target.value)\n\t}\n\n\tconst onAmountChange = (event) => {\n\t\tsetAmount(event.target.value)\n\t}\n\n\tconst onWebsiteChange = (event) => {\n\t\tsetWebsite(event.target.value)\n\t}\n\n\tconst onUpdateBill = () => {\n\n\t\tfetch(`${props.host}update_bill`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\t\"bill_id\": bill_id,\n\t\t\t\t\"bill_name\": name, \n\t\t\t\t\"amount\": amount, \n\t\t\t\t\"bill_website\": website\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t.catch(console.log)\n\t\thandelEdit()\n\t}\n\n\treturn (\n\t\t<div>\n\t\t{ !edit\n\t\t\t? <div>\n\t\t\t\t\t<p className=\"fl w-25 pa1 tc ml1\">{name}</p> \n\t\t\t\t\t<p className=\"fl w-25 pa1 tc\">{amount}</p> \n\t\t\t\t\t<p className=\"fl w-25 pa1 tc\">{formatedDay}</p>\n\t\t\t\t\t<button className=\"fl pa1\" onClick={goToWebPage}>Pay</button>\n\t\t\t\t\t<button className=\"fl pa1\" onClick={handelEdit}>Edit</button>\n\t\t\t\t</div>\n\t\t\t:\n\t\t\t\t<div>\n\t\t\t\t\t<input \n\t\t\t\t\tclassName= 'fl w-25 pa1 tc ml1' \n\t\t\t\t\ttype='text' \n\t\t\t\t\tid='name'\n\t\t\t\t\tname='name'\n\t\t\t\t\tvalue={bill_name}\n\t\t\t\t\tonChange={onNameChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<input \n\t\t\t\t\tclassName= 'fl w-25 pa1 tc ml1' \n\t\t\t\t\ttype='double' \n\t\t\t\t\tid='amount'\n\t\t\t\t\tname='amount'\n\t\t\t\t\tvalue={amount}\n\t\t\t\t\tonChange={onAmountChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<input \n\t\t\t\t\tclassName= 'fl w-25 pa1 tc ml1' \n\t\t\t\t\ttype='text' \n\t\t\t\t\tid='website'\n\t\t\t\t\tname='website'\n\t\t\t\t\tvalue={website}\n\t\t\t\t\tonChange={onWebsiteChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className= 'fl w-10 pa1 tc ml1' onClick={onUpdateBill}>Update </button>\n\t\t\t\t</div>\n\t\t}\n\t\t</div>\n\n\t\t);\n\n}\n\nexport default Bill;\n","import React, { useState, useEffect } from 'react';\nimport Bill from './Bill.js'\n// import InsertBill from './InsertBill.js'\n\nconst UpcomingBills = (props) => {\n\tconst [bills, setBills] = useState([]);\n\tconst [day, ] = useState(1)\n\n\tuseEffect(() => {\n\t  fetch(`${props.host}upcomingBills`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t  \"user_id\": props.user_id\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t    \t.then(data => {setBills(data)});\n\t},[day, props.host, props.user_id])\n\n\treturn (\n\t\t<div>\n\t\t  \t<div className=\"flex justify-center\">\n\t\t\t\t<h3 className=\"fl w-25 pa1 tc ml1\">Vender</h3> \n\t\t\t\t<h3 className=\"fl w-25 pa1 tc\">Amount</h3> \n\t\t\t\t<h3 className=\"fl w-25 pa1 tc\">Due Day</h3> \n\t\t\t\t<h3 className=\"fl w-10 pa1 tc\">Web Site</h3>\n\t\t\t</div>\n\t\t  \t{\n\t\t\t\tbills.map((data, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Bill \n\t\t\t\t\tkey={bills[i].bill_id}\n\t\t\t\t\tbill_id={bills[i].bill_id}\n\t\t\t\t\tamount={bills[i].amount}\n\t\t\t\t\tbill_name={bills[i].bill_name}\n\t\t\t\t\tdue_date={bills[i].due_day}\n\t\t\t\t\tbill_website={bills[i].bill_website}\n\t\t\t\t\thost={props.host}\n\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default UpcomingBills;\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useState } from 'react';\nimport Search from '../Search/Search.js'\n\nimport './inputTransactions.css'\n\nconst InputTransaction = (props) => {\n\tconst today = new Date().toISOString().slice(0, 10)\n\tconst [date, setDate] = useState(today)\n\tconst [vendor, setVendor] = useState('')\n\tconst [amount, setAmount] =\tuseState('')\n\tconst [status, setStatus] = useState('Pending')\n\tconst [category, setCategory] = useState()\n\n\tconst onDateChange = (event) => {\n\t\tsetDate(event.target.value)\n\t}\n\n\tconst onVendorChange = (event) => {\n\t\tsetVendor(event.target.value)\n\t}\n\n\tconst onAmountChange = (event) => {\n\t\tconst str = event.target.value; \n  \t\tconst res = str.replace(/,/g, \"\")\n\t\tsetAmount(res)\n\t}\n\n\tconst onStatusChange = (event) => {\n\t\tstatus === 'Pending' ? setStatus('Cleared') : setStatus('Pending')\n\t}\n\n\tconst onCategoryChange = (event) => {\n\t\tsetCategory(event)\n\t}\n\n\tconst onCommitIncome = () => {\n\t\tonCommitTransaction(amount)\n\t}\n\n\tconst onCommitExpense = () => {\n\t\tonCommitTransaction(-amount)\n\t}\n\n\tconst onCommitTransaction = (amount) => {\n\t\tfetch(props.host+'insert', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t  \"date\": date,\n\t\t\t  \"vendor\": vendor,\n\t\t\t  \"category\": category,\n\t\t\t  \"status\": status,\n\t\t\t  \"amount\": amount,\n\t\t\t  \"account_id\": props.account_id\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(props.onChange())\n\t\t\t.catch(console.log)\n\t\tsetVendor('')\n\t\tsetAmount('')\n\t\tsetStatus('Pending')\n\t}\n\n\treturn (\n\t\t<div className='center'>\n\t\t\t<div className='form center pa4 br3 shadow-5'>\n\t\t\t\t<input \n\t\t\t\t\tclassName= 'f4 pa2 w-25 center' \n\t\t\t\t\ttype='date' \n\t\t\t\t\tid='date'\n\t\t\t\t\tname='date'\n\t\t\t\t\tvalue={date}\n\t\t\t\t\tonChange={onDateChange}\n\t\t\t\t/>\n\t\t\t\t<input \n\t\t\t\t\tclassName= 'f4 pa2 w-25 center' \n\t\t\t\t\ttype= 'text' \n\t\t\t\t\tplaceholder=\"Vendor\"\n\t\t\t\t\tid='Vendor'\n\t\t\t\t\tname='Vendor'\n\t\t\t\t\tvalue={vendor}\n\t\t\t\t\tonChange={onVendorChange}\n\t\t\t\t/>\n\t\t\t\t<input \n\t\t\t\t\tclassName= 'f4 pa2 w-25 center' \n\t\t\t\t\ttype= 'double' \n\t\t\t\t\tplaceholder=\"Amount\"\n\t\t\t\t\tid='Amount'\n\t\t\t\t\tname='Amount'\n\t\t\t\t\tvalue={amount}\n\t\t\t\t\tonChange={onAmountChange}\n\t\t\t\t/>\n\t\t\t\t<button \n\t\t\t\t\tclassName= 'w-30 link ph3 pv2 dib btn-white' \n\t\t\t\t\tid='CommitTransactionBTN'\n\t\t\t\t\tonClick={onStatusChange}\n\t\t\t\t>\n\t\t\t\t{status}\n\t\t\t\t</button>\n\t\t\t\t<Search \n\t\t\t\t\tclassName= 'f4 pa2 w-30 center' \n\t\t\t\t\tonChange={onCategoryChange}\n\t\t\t\t\thost={props.host}\n\t\t\t\t/>\n\t\t\t\t<button \n\t\t\t\t\tclassName= 'w-10 grow f4 link ph3 pv2 dib white bg-light-blue' \n\t\t\t\t\tid='CommitTransactionBTN'\n\t\t\t\t\tonClick={onCommitExpense}\n\t\t\t\t>\n\t\t\t\tExpense\n\t\t\t\t</button>\n\t\t\t\t<button \n\t\t\t\t\tclassName= 'w-10 grow f4 link ph3 pv2 dib white bg-light-blue' \n\t\t\t\t\tid='CommitTransactionBTN'\n\t\t\t\t\tonClick={onCommitIncome}\n\t\t\t\t>\n\t\t\t\tIncome\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default InputTransaction;","import { useState, useEffect } from 'react'\n\nfunction getSavedValue(key, initialValue) {\n\tconst savedValue = JSON.parse(sessionStorage.getItem(key))\n\tif (savedValue) return savedValue\n\n\tif (initialValue instanceof Function) return initialValue()\n\n\treturn initialValue\n}\n\nexport default function useSessionStorage(key, initialValue) {\n\tconst [value, setValue] = useState(() => {\n\t\treturn getSavedValue(key, initialValue)\n\t})\n\n\tuseEffect(() => {\n\t\tsessionStorage.setItem(key, JSON.stringify(value))\n\t}, [value])\n\n\treturn [value, setValue]\n}","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SignIn from './components/SignIn/SignIn.js';\nimport Register from './components/Register/Register.js';\nimport InvalidUser from './components/InvalidUser/InvalidUser.js';\nimport Navigation from './components/Navigation/Navigation.js'\nimport AccountBalance from './components/AccountBalance/AccountBalance.js';\nimport AccountPending from './components/AccountBalance/AccountPending.js';\nimport Scroll from './components/Scroll/Scroll.js';\nimport SideBar from './components/SideBar/SideBar.js';\nimport TransactionList from './components/Transactions/TransactionList.js';\nimport NewAccount from './components/NewAccount/NewAccount.js';\nimport UpcomingBills from './components/UpcomingBills/UpcomingBills.js';\nimport InputTransaction from './components/InputTransaction/InputTransaction.js';\nimport useOpenningBalances from './Hooks/useOpenningBalances.js';\nimport useLocalStorage from './Hooks/useLocalStorage.js';\nimport useSessionStorage from './Hooks/useSessionStorage.js';\nimport useBalance from './Hooks/useBalance.js';\n\n\nfunction App() {\n\tconst host = 'https://star-ship-enterprise.herokuapp.com/';\n\tconst [name, setName] = useSessionStorage('name', '') \n\tconst [user_id, setuser_id] = useSessionStorage('user_id', '') \n\tconst [isSignedIn, setIsSignedIn] = useSessionStorage('isSignedIn', false)\n\tconst [isRegistered, setIsRegistered] = useState(true)\n\tconst [account_id, setAccountid] = useSessionStorage('account_id', '') \n\tconst [sideBarOpen, setSideBarOpen] = useState(true);\n\tconst [submit, setSubmit] = useState(false);\n\tconst d = new Date()\n\td.setDate(d.getDate() - 60)\n\tconst [from_date, setFrom_Date] = useState(d.toISOString().split('T')[0])\n\tconst [to_date, setTo_Date] = useState(new Date().toISOString().split('T')[0])\n\tconst [createAccount, setCreateAccount] = useState(false)\n\tconst [searchDate, setSearchDate] = useState(false)\n\tconst [billsPage, setBillsPage] = useState(false)\n\tconst [insert, setInsert] = useState(false)\n\tconst [balance, balanceColor] = useBalance(account_id, host, 'sumCleared', submit);\n\t\n\tconst onFrom_DateChange = (event) => {\n\t\tsetFrom_Date(event.target.value)\n\t}\n\n\tconst handleSearchDate = () => {\n\t\tsetSearchDate(!searchDate);\n\t}\n\n\tconst handleSignIn = (user_id, firstname) => {\n\t\tif (user_id !== -1) {\n\t\t\tsetName(firstname)\n\t\t\tsetuser_id(user_id)\n\t\t\tsetIsSignedIn(true)\n\t\t}\n\t\telse {\n\t\t\tsetuser_id(-1)\n\t\t}\n\t}\n\n\tconst handleSignOut = () => {\n\t\tsetIsSignedIn(false)\n\t\tsetuser_id()\n\t\tsetAccountid()\n\t\tsetName()\t\t\n\t\tlocalStorage.clear()\n\t}\n\n\tconst handleRegistered = () => {\n\t\tsetIsRegistered(!isRegistered)\n\t}\n\n\tconst handleLoadAccount = (account_id) => {\n\t\tsetAccountid(account_id)\n\t}\n\n\tconst handleInputChange = () => {\n\t\tsetSubmit(!submit)\n\t}\n\n\tconst handelNewAccount = () => {\n\t\tsetCreateAccount(!createAccount)\n\t}\n\n\tconst handelSideBarOpenClose = () => {\n\t\tsetSideBarOpen(!sideBarOpen)\n\t}\n\n\tconst onTo_DateChange = (event) => {\n\t\tsetTo_Date(event.target.value)\n\t}\n\n\tconst handelBillChange = (account_id) => {\n\t\tsetBillsPage(!billsPage)\n\t}\n\n\tconst handleInsertChange = () => {\n\t\tsetInsert(!insert);\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{ !isSignedIn\n\t\t\t\t?\t<div id = 'Register'>\n\t\t\t\t\t{ !isRegistered\n\t\t\t\t\t\t? <Register host={host} onChange={handleSignIn} onRegisterChange={handleRegistered}/>\n\t\t\t\t\t\t: <div>\n\t  \t\t\t\t\t{ user_id === -1\n\t  \t\t\t\t\t\t? <InvalidUser onRouteChange={handleSignOut}/>\n\t  \t\t\t\t\t\t: <SignIn host={host} onChange={handleSignIn} onRegisterChange={handleRegistered} /> \n\t \t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t: \t<div id = 'LandingPage'>\n\t\t\t\t\t<nav>\n\t\t\t\t\t{account_id \n\t\t\t\t\t\t? <div>\n\t\t\t\t\t\t\t<p className ='links' onClick={handleInsertChange}>Add Transaction</p> \n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t:<p></p>\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div className='Navigation'>\n\t\t\t\t\t\t\t{ account_id\n\t\t\t\t\t\t\t\t? <div className='Navigation'>\n\t\t\t\t\t\t\t\t\t<p>Actual</p>\n\t\t\t\t\t\t\t\t\t<AccountBalance className='f3' balance={balance} balanceColor={balanceColor}/> \n\t\t\t\t\t\t\t\t\t<AccountPending className='f3' host={host} account_id={account_id} submit={submit}/> \n\t\t\t\t\t\t \t\t  </div>\n\t\t\t\t\t\t \t\t: <p></p>\n\t\t\t\t\t\t \t}\t\n\t\t\t\t\t\t\t<Navigation isSignedIn={isSignedIn} name={name} onRouteChange={handleSignOut} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</nav>\n\t\t\t\t\t{ insert\n\t\t\t\t\t? <div id='insertTransaction'>\n\t\t\t\t      \t<InputTransaction account_id={account_id} host={host} submit={submit} onChange={handleInputChange} />\n\t\t\t\t\t  </div>\n\t\t\t\t\t: <div></div>\n\t\t\t\t\t}\n\t\t\t\t\t<div id = \"MainPage\">\n\t\t\t\t\t\t<div id = 'Sidebar' className=\"outline \">\n\t\t\t\t\t\t\t{ sideBarOpen\n\t\t\t\t\t\t\t? <div >\n\t\t\t\t\t\t\t\t{ createAccount \n\t\t\t\t\t\t\t\t\t? <div>\n\t\t\t\t\t\t\t\t\t\t<NewAccount host={host} user_id={user_id}/>\n\t\t\t\t\t\t\t\t\t\t<button onClick={handelNewAccount}>exit</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t: <div></div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t\t  \t\t<SideBar key={user_id} user_id={user_id} host={host} onChange={handleLoadAccount} account={handelNewAccount} bills={handelBillChange} submit={submit} />\n\t\t\t\t\t\t\t\t</Scroll>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t: <div></div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id = 'Transaction'>\n\t\t\t\t\t\t\t{ !account_id\n\t\t\t\t\t\t\t\t? <Scroll> \n\t\t\t\t\t\t\t\t\t<UpcomingBills key={user_id} host={host} user_id={user_id}/>\n\t\t\t\t\t\t\t\t\t</Scroll>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t\t\t\t<TransactionList key={account_id} account_id={account_id} host={host} submit={submit} onChange={handleInputChange} from_date={from_date} to_date={to_date}/>\n\t\t\t\t\t\t\t\t</Scroll>\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}