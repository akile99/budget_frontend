{"ast":null,"code":"import _regeneratorRuntime from\"/Users/adamkile/Desktop/Programming/budget/budget_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/adamkile/Desktop/Programming/budget/budget_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/adamkile/Desktop/Programming/budget/budget_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';export default function useBalance(account_id,host,address,submit){var _useState=useState(),_useState2=_slicedToArray(_useState,2),total=_useState2[0],setTotal=_useState2[1];var _useState3=useState('black'),_useState4=_slicedToArray(_useState3,2),color=_useState4[0],setColor=_useState4[1];useEffect(function(){if(account_id){var getTotalBalance=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(host).concat(address),{method:'post',headers:{'Content-Type':'application/json'},body:JSON.stringify({\"account_id\":account_id})}).then(function(response){return response.json();}).then(function(data){return setTotal(data[0].sum);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function getTotalBalance(){return _ref.apply(this,arguments);};}();if(total<0){setColor('red');}else{setColor('black');}getTotalBalance();}},[account_id,total,host,submit]);return[total,color];}","map":{"version":3,"sources":["/Users/adamkile/Desktop/Programming/budget/budget_frontend/src/Hooks/useBalance.js"],"names":["useState","useEffect","useBalance","account_id","host","address","submit","total","setTotal","color","setColor","getTotalBalance","fetch","method","headers","body","JSON","stringify","then","response","json","data","sum"],"mappings":"ghBAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,UAApB,CAAgCC,IAAhC,CAAsCC,OAAtC,CAA+CC,MAA/C,CAAuD,CACrE,cAA0BN,QAAQ,EAAlC,wCAAOO,KAAP,eAAcC,QAAd,eACA,eAA0BR,QAAQ,CAAC,OAAD,CAAlC,yCAAOS,KAAP,eAAcC,QAAd,eACAT,SAAS,CAAC,UAAM,CACf,GAAIE,UAAJ,CAAgB,IACAQ,CAAAA,eADA,0FACf,yJACOC,CAAAA,KAAK,WAAIR,IAAJ,SAAWC,OAAX,EAAsB,CAChCQ,MAAM,CAAE,MADwB,CAEhCC,OAAO,CAAE,CAAC,eAAgB,kBAAjB,CAFuB,CAGhCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnB,aAAcd,UADK,CAAf,CAH0B,CAAtB,CAAL,CAOJe,IAPI,CAOC,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAPT,EAQFF,IARE,CAQG,SAAAG,IAAI,QAAIb,CAAAA,QAAQ,CAACa,IAAI,CAAC,CAAD,CAAJ,CAAQC,GAAT,CAAZ,EARP,CADP,uDADe,kBACAX,CAAAA,eADA,2CAaf,GAAIJ,KAAK,CAAG,CAAZ,CAAe,CACdG,QAAQ,CAAC,KAAD,CAAR,CACA,CAFD,IAEM,CAACA,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAEzBC,eAAe,GACf,CAED,CArBQ,CAqBP,CAACR,UAAD,CAAaI,KAAb,CAAoBH,IAApB,CAA0BE,MAA1B,CArBO,CAAT,CAuBA,MAAO,CAACC,KAAD,CAAQE,KAAR,CAAP,CACA","sourcesContent":["import { useState, useEffect } from 'react'\n\nexport default function useBalance(account_id, host, address, submit) {\n\tconst [total, setTotal] = useState();\n\tconst [color, setColor] = useState('black');\n\tuseEffect(() => {\n\t\tif (account_id) {\n\t\t\tasync function getTotalBalance() {\n\t\t\t\tawait fetch(`${host}${address}`, {\n\t\t\t\t\tmethod: 'post',\n\t\t\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t  \"account_id\": account_id\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t\t.then(response => response.json())\n\t\t\t\t  \t.then(data => setTotal(data[0].sum));\n\t\t\t}\n\n\t\t\tif (total < 0) {\n\t\t\t\tsetColor('red')\n\t\t\t}else {setColor('black')}\n\n\t\t\tgetTotalBalance();\n\t\t}\n\n\t},[account_id, total, host, submit])\t\n\n\treturn [total, color];\n}"]},"metadata":{},"sourceType":"module"}