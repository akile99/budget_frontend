{"ast":null,"code":"import { useEffect, useMemo, useState, useReducer, useRef, useCallback } from 'react';\nimport groupOptions from './lib/groupOptions';\nimport highlightReducer from './highlightReducer';\nimport getOptions from './lib/getOptions';\nimport getDisplayValue from './lib/getDisplayValue';\nimport useFetch from './useFetch';\nimport getValues from './lib/getValues';\nexport default function useSelect({\n  value: defaultValue = null,\n  options: defaultOptions = [],\n  search: canSearch = false,\n  multiple = false,\n  disabled = false,\n  closeOnSelect = true,\n  getOptions: getOptionsFn = null,\n  filterOptions = null,\n  onChange = () => {},\n  onFocus = () => {},\n  onBlur = () => {},\n  debounce = 0\n}) {\n  const ref = useRef(null);\n  const valueRef = useRef(undefined);\n  const [value, setValue] = useState(null);\n  const [search, setSearch] = useState('');\n  const [focus, setFocus] = useState(false);\n  const [highlighted, dispatchHighlighted] = useReducer(highlightReducer, -1);\n  const {\n    options,\n    fetching\n  } = useFetch(search, defaultOptions, {\n    getOptions: getOptionsFn,\n    filterOptions,\n    debounceTime: debounce\n  });\n  const snapshot = useMemo(() => ({\n    options: groupOptions(options),\n    option: value,\n    displayValue: getDisplayValue(value),\n    value: getValues(value),\n    search,\n    fetching,\n    focus,\n    highlighted,\n    disabled\n  }), [disabled, fetching, focus, highlighted, search, value, options]);\n  const onSelect = useCallback(newValue => {\n    const newOption = getOptions(newValue, value, Array.isArray(value) ? [...value, ...options] : options, multiple);\n    setValue(newOption);\n    onChange(getValues(newOption), newOption);\n\n    if (closeOnSelect) {\n      ref.current.blur();\n    }\n  }, [closeOnSelect, multiple, onChange, value, options]);\n  const onMouseDown = useCallback(e => {\n    e.preventDefault();\n    onSelect(e.currentTarget.value);\n  }, [onSelect]);\n  const onKeyDown = useCallback(e => {\n    const {\n      key\n    } = e;\n\n    if (['ArrowDown', 'ArrowUp'].includes(key)) {\n      e.preventDefault();\n      dispatchHighlighted({\n        key,\n        options\n      });\n    }\n  }, [options]);\n  const onKeyPress = useCallback(e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      const selected = options[highlighted];\n\n      if (selected) {\n        onSelect(selected.value);\n      }\n\n      if (closeOnSelect) {\n        ref.current.blur();\n      }\n    }\n  }, [options, highlighted, closeOnSelect, onSelect]);\n  const valueProps = useMemo(() => ({\n    tabIndex: '0',\n    readOnly: !canSearch,\n    onFocus: e => {\n      setFocus(true);\n      onFocus(e);\n    },\n    onBlur: e => {\n      setFocus(false);\n      setSearch('');\n      onBlur(e);\n    },\n    onKeyPress,\n    onKeyDown,\n    onKeyUp: e => {\n      if (e.key === 'Escape') {\n        e.preventDefault();\n        ref.current.blur();\n      }\n    },\n    onChange: canSearch ? ({\n      target\n    }) => setSearch(target.value) : null,\n    disabled,\n    ref\n  }), [canSearch, onFocus, onBlur, onKeyPress, onKeyDown, disabled, ref]);\n  const optionProps = useMemo(() => ({\n    tabIndex: '-1',\n    onMouseDown\n  }), [onMouseDown]);\n  useEffect(() => {\n    if (valueRef.current === defaultValue) {\n      return;\n    }\n\n    valueRef.current = defaultValue;\n    setValue(getOptions(defaultValue, null, options, multiple));\n  }, [defaultValue, multiple, options]);\n  return [snapshot, valueProps, optionProps, setValue];\n}","map":{"version":3,"sources":["/Users/adamkile/Desktop/budgetapp/budget/node_modules/react-select-search/dist/esm/useSelect.js"],"names":["useEffect","useMemo","useState","useReducer","useRef","useCallback","groupOptions","highlightReducer","getOptions","getDisplayValue","useFetch","getValues","useSelect","value","defaultValue","options","defaultOptions","search","canSearch","multiple","disabled","closeOnSelect","getOptionsFn","filterOptions","onChange","onFocus","onBlur","debounce","ref","valueRef","undefined","setValue","setSearch","focus","setFocus","highlighted","dispatchHighlighted","fetching","debounceTime","snapshot","option","displayValue","onSelect","newValue","newOption","Array","isArray","current","blur","onMouseDown","e","preventDefault","currentTarget","onKeyDown","key","includes","onKeyPress","selected","valueProps","tabIndex","readOnly","onKeyUp","target","optionProps"],"mappings":"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","sourcesContent":["import { useEffect, useMemo, useState, useReducer, useRef, useCallback } from 'react';\nimport groupOptions from './lib/groupOptions';\nimport highlightReducer from './highlightReducer';\nimport getOptions from './lib/getOptions';\nimport getDisplayValue from './lib/getDisplayValue';\nimport useFetch from './useFetch';\nimport getValues from './lib/getValues';\nexport default function useSelect({\n  value: defaultValue = null,\n  options: defaultOptions = [],\n  search: canSearch = false,\n  multiple = false,\n  disabled = false,\n  closeOnSelect = true,\n  getOptions: getOptionsFn = null,\n  filterOptions = null,\n  onChange = () => {},\n  onFocus = () => {},\n  onBlur = () => {},\n  debounce = 0\n}) {\n  const ref = useRef(null);\n  const valueRef = useRef(undefined);\n  const [value, setValue] = useState(null);\n  const [search, setSearch] = useState('');\n  const [focus, setFocus] = useState(false);\n  const [highlighted, dispatchHighlighted] = useReducer(highlightReducer, -1);\n  const {\n    options,\n    fetching\n  } = useFetch(search, defaultOptions, {\n    getOptions: getOptionsFn,\n    filterOptions,\n    debounceTime: debounce\n  });\n  const snapshot = useMemo(() => ({\n    options: groupOptions(options),\n    option: value,\n    displayValue: getDisplayValue(value),\n    value: getValues(value),\n    search,\n    fetching,\n    focus,\n    highlighted,\n    disabled\n  }), [disabled, fetching, focus, highlighted, search, value, options]);\n  const onSelect = useCallback(newValue => {\n    const newOption = getOptions(newValue, value, Array.isArray(value) ? [...value, ...options] : options, multiple);\n    setValue(newOption);\n    onChange(getValues(newOption), newOption);\n\n    if (closeOnSelect) {\n      ref.current.blur();\n    }\n  }, [closeOnSelect, multiple, onChange, value, options]);\n  const onMouseDown = useCallback(e => {\n    e.preventDefault();\n    onSelect(e.currentTarget.value);\n  }, [onSelect]);\n  const onKeyDown = useCallback(e => {\n    const {\n      key\n    } = e;\n\n    if (['ArrowDown', 'ArrowUp'].includes(key)) {\n      e.preventDefault();\n      dispatchHighlighted({\n        key,\n        options\n      });\n    }\n  }, [options]);\n  const onKeyPress = useCallback(e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      const selected = options[highlighted];\n\n      if (selected) {\n        onSelect(selected.value);\n      }\n\n      if (closeOnSelect) {\n        ref.current.blur();\n      }\n    }\n  }, [options, highlighted, closeOnSelect, onSelect]);\n  const valueProps = useMemo(() => ({\n    tabIndex: '0',\n    readOnly: !canSearch,\n    onFocus: e => {\n      setFocus(true);\n      onFocus(e);\n    },\n    onBlur: e => {\n      setFocus(false);\n      setSearch('');\n      onBlur(e);\n    },\n    onKeyPress,\n    onKeyDown,\n    onKeyUp: e => {\n      if (e.key === 'Escape') {\n        e.preventDefault();\n        ref.current.blur();\n      }\n    },\n    onChange: canSearch ? ({\n      target\n    }) => setSearch(target.value) : null,\n    disabled,\n    ref\n  }), [canSearch, onFocus, onBlur, onKeyPress, onKeyDown, disabled, ref]);\n  const optionProps = useMemo(() => ({\n    tabIndex: '-1',\n    onMouseDown\n  }), [onMouseDown]);\n  useEffect(() => {\n    if (valueRef.current === defaultValue) {\n      return;\n    }\n\n    valueRef.current = defaultValue;\n    setValue(getOptions(defaultValue, null, options, multiple));\n  }, [defaultValue, multiple, options]);\n  return [snapshot, valueProps, optionProps, setValue];\n}"]},"metadata":{},"sourceType":"module"}