{"ast":null,"code":"import _slicedToArray from \"/Users/adamkile/Desktop/Programming_Projects/budgetapp/budget/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/adamkile/Desktop/Programming_Projects/budgetapp/budget/src/components/Transactions/CardList.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card.js';\n\nvar CardList = function CardList(props) {\n  // const [accountid, setAccountid] = useState(1);\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      transactions = _useState2[0],\n      setTransactions = _useState2[1];\n\n  var d = new Date();\n  d.setDate(d.getDate() - 30);\n  var from_date = d.toLocaleString();\n\n  var updateTransactions = function updateTransactions(value) {\n    props.onChange();\n  };\n\n  useEffect(function () {\n    fetch(\"\".concat(props.host, \"transactions\"), {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"account_id\": props.account_id,\n        \"from_date\": from_date,\n        \"to_date\": new Date().toLocaleString()\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setTransactions(data);\n    });\n  }, [props.submit, props.account_id, props.host]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"fl w-10 pa1 tc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"fl w-30 pa1 tc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, \"Vender\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"fl w-20 pa1 tc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"fl w-10 pa1 tc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"fl w-30 pa1 tc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"fl w-10 pa1 tc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, \"remove\")), transactions.map(function (data, i) {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: transactions[i].transaction_id,\n      transaction_id: transactions[i].transaction_id,\n      accountid: transactions[i].accountid,\n      date: transactions[i].date,\n      vendor: transactions[i].vendor,\n      amount: transactions[i].amount,\n      status: transactions[i].status,\n      category: transactions[i].category,\n      host: props.host,\n      onChange: updateTransactions,\n      submit: props.submit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }\n    });\n  }));\n};\n\nexport default CardList;","map":{"version":3,"sources":["/Users/adamkile/Desktop/Programming_Projects/budgetapp/budget/src/components/Transactions/CardList.js"],"names":["React","useState","useEffect","Card","CardList","props","transactions","setTransactions","d","Date","setDate","getDate","from_date","toLocaleString","updateTransactions","value","onChange","fetch","host","method","headers","body","JSON","stringify","account_id","then","response","json","data","submit","map","i","transaction_id","accountid","date","vendor","amount","status","category"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from './Card.js'\n\nconst CardList = (props) => {\n\t// const [accountid, setAccountid] = useState(1);\n\tconst [transactions, setTransactions] = useState([]);\n\tconst d = new Date();\n\td.setDate(d.getDate() - 30);\n\tconst from_date = d.toLocaleString();\n\n\n\tconst updateTransactions = (value) => {\n\t\tprops.onChange()\n\t}\n\n\tuseEffect(() => {\n\t\tfetch(`${props.host}transactions`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t  \"account_id\": props.account_id,\n\t\t\t  \"from_date\": from_date,\n\t\t\t  \"to_date\": new Date().toLocaleString()\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n      \t.then(data => {setTransactions(data)});\n\t},[props.submit, props.account_id, props.host])\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"flex justify-center\">\n\t\t\t\t<h3 className=\"fl w-10 pa1 tc\">Date</h3> \n\t\t\t\t<h3 className=\"fl w-30 pa1 tc\">Vender</h3> \n\t\t\t\t<h3 className=\"fl w-20 pa1 tc\">Amount</h3> \n\t\t\t\t<h3 className=\"fl w-10 pa1 tc\">Status</h3> \n\t\t\t\t<h3 className=\"fl w-30 pa1 tc\">Category</h3>\n\t\t\t\t<h3 className=\"fl w-10 pa1 tc\">remove</h3>\n\t\t\t</div>\n\t\t\t{\n\t\t\ttransactions.map((data, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Card \n\t\t\t\t\tkey={transactions[i].transaction_id}\n\t\t\t\t\ttransaction_id={transactions[i].transaction_id} \n\t\t\t\t\taccountid={transactions[i].accountid}\n\t\t\t\t\tdate = {transactions[i].date}\n\t\t\t\t\tvendor={transactions[i].vendor}\n\t\t\t\t\tamount={transactions[i].amount}\n\t\t\t\t\tstatus={transactions[i].status}\n\t\t\t\t\tcategory={transactions[i].category}\n\t\t\t\t\thost={props.host}\n\t\t\t\t\tonChange={updateTransactions}\n\t\t\t\t\tsubmit={props.submit}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})\n\t\t\t}\n\t\t</div>\n\t\t);\n}\n\nexport default CardList;"]},"metadata":{},"sourceType":"module"}