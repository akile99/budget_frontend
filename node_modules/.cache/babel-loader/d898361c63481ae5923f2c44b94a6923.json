{"ast":null,"code":"import _slicedToArray from \"/Users/adamkile/Desktop/Programming_Projects/budgetapp/budget/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/adamkile/Desktop/Programming_Projects/budgetapp/budget/src/components/Greeting/Greeting.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport './Greeting.css';\n\nvar Greeting = function Greeting(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      pendingSum = _useState2[0],\n      setPendingSum = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sum = _useState4[0],\n      setSum = _useState4[1];\n\n  var _useState5 = useState('black'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sumColor = _useState6[0],\n      setSumColor = _useState6[1];\n\n  var _useState7 = useState('black'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pendingColor = _useState8[0],\n      setPendingColor = _useState8[1];\n\n  useEffect(function () {\n    if (props.account_id) {\n      try {\n        fetch(\"\".concat(props.host, \"sumCleared\"), {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"account_id\": props.account_id\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          return setSum(data[0].sum);\n        });\n        fetch(\"\".concat(props.host, \"sumPending\"), {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"account_id\": props.account_id\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          setPendingSum(data[0].sum);\n        });\n      } catch (error) {\n        console.error(error);\n      }\n\n      if (sum < 0 && sum) {\n        setSumColor('red');\n      }\n\n      if (pendingSum < 0) {\n        setPendingColor('red');\n      }\n    } // if (pendingSum === null) {\n    // \tsetPendingSum(0) \n    // }\n    // if (sum === null) {\n    // \tsetSum(\"Loading\") \n    // }\n\n  }, [props.account_id, props.submit, pendingSum, sum, props.host]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"f3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \"\".concat(props.name, \", your account ballance is ...\")), !props.account_id ? /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }\n  }, \"Chose an action\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: pendingColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Pending $ \".concat(pendingSum), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: sumColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Actual $ \".concat(sum), \" \")));\n};\n\nexport default Greeting;","map":{"version":3,"sources":["/Users/adamkile/Desktop/Programming_Projects/budgetapp/budget/src/components/Greeting/Greeting.js"],"names":["React","useState","useEffect","Greeting","props","pendingSum","setPendingSum","sum","setSum","sumColor","setSumColor","pendingColor","setPendingColor","account_id","fetch","host","method","headers","body","JSON","stringify","then","response","json","data","error","console","submit","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Greeting.css'\n\nconst Greeting = (props) => {\n\tconst [pendingSum, setPendingSum] = useState(0)\n\tconst [sum, setSum] = useState(0)\n\tconst [sumColor, setSumColor] = useState('black')\n\tconst [pendingColor, setPendingColor] = useState('black')\n\t\n\tuseEffect(() => {\n\t\tif (props.account_id) {\n\t\t\ttry {\n\t\t\t\tfetch(`${props.host}sumCleared`, {\n\t\t\t\t\tmethod: 'post',\n\t\t\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t  \"account_id\": props.account_id\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t\t.then(response => response.json())\n\t\t\t      \t.then(data => setSum(data[0].sum));\n\t\t\t\t\t\n\t\t\t    fetch(`${props.host}sumPending`, {\n\t\t\t\t\tmethod: 'post',\n\t\t\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t  \"account_id\": props.account_id\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t\t.then(response => response.json())\n\t\t\t      \t.then(data => {setPendingSum(data[0].sum)});\n\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error)\n\t\t\t} \t\t\n\t\t\tif (sum < 0 && sum) {\n\t\t\t\tsetSumColor('red')\n\t\t\t}\n\n\t\t\tif (pendingSum < 0) {\n\t\t\t\tsetPendingColor('red') \n\t\t\t}\n\t\t}\n\n\n\t\t// if (pendingSum === null) {\n\t\t// \tsetPendingSum(0) \n\t\t// }\n\n\t\t// if (sum === null) {\n\t\t// \tsetSum(\"Loading\") \n\t\t// }\n\n\t},[props.account_id, props.submit, pendingSum, sum, props.host])\t\n\n\treturn (\n\t\t<div>\n\t\t  <h1 className='f3'>\n\t\t    {`${props.name}, your account ballance is ...`}\n\t\t  </h1>\n\t\t  { !props.account_id\n\t\t  \t? <h4>Chose an action</h4>\n\t\t  \t: \n\t\t  \t<div>\n\t\t\t  \t<p className={pendingColor}>{`Pending $ ${pendingSum}`} </p>\n\t\t\t  \t<p className={sumColor}>{`Actual $ ${sum}`} </p>\n\t\t\t</div>\n\t\t  }\n\n\t\t</div>\n\t);\n}\n\nexport default Greeting;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}