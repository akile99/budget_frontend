{"ast":null,"code":"var _jsxFileName = \"/Users/adamkile/Desktop/Programming/budget/budget_frontend/src/components/Transactions/TransactionList.js\";\nimport React, { useState, useEffect } from 'react';\nimport Transaction from './Transaction.js';\nimport './Transaction.css';\n\nconst TransactionList = props => {\n  const [transactions, setTransactions] = useState([]);\n\n  const updateTransactions = value => {\n    props.onChange();\n  };\n\n  useEffect(() => {\n    try {\n      fetch(`${props.host}transactions`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"account_id\": props.account_id,\n          \"from_date\": props.from_date,\n          \"to_date\": props.to_date\n        })\n      }).then(response => response.json()).then(data => {\n        setTransactions(data);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [props.submit, props.account_id, props.host, props.from_date, props.to_date, props.update]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outline flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"date transaction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"vendor transaction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, \"Vender\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"dollar transaction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, \"\\xA0\\xA0\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"amount transaction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"status transaction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"category transaction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"edit transaction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \"Edit\")), transactions.map((data, i) => {\n    return /*#__PURE__*/React.createElement(Transaction, {\n      className: \"transactions\",\n      key: transactions[i].transaction_id,\n      transaction_id: transactions[i].transaction_id,\n      accountid: transactions[i].accountid,\n      date: transactions[i].date,\n      vendor: transactions[i].vendor,\n      amount: (Math.round(transactions[i].amount * 100) / 100).toFixed(2),\n      status: transactions[i].status,\n      category: transactions[i].category,\n      host: props.host,\n      onChange: updateTransactions,\n      submit: props.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }\n    });\n  }));\n};\n\nexport default TransactionList;","map":{"version":3,"sources":["/Users/adamkile/Desktop/Programming/budget/budget_frontend/src/components/Transactions/TransactionList.js"],"names":["React","useState","useEffect","Transaction","TransactionList","props","transactions","setTransactions","updateTransactions","value","onChange","fetch","host","method","headers","body","JSON","stringify","account_id","from_date","to_date","then","response","json","data","e","console","log","submit","update","map","i","transaction_id","accountid","date","vendor","Math","round","amount","toFixed","status","category"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Transaction from './Transaction.js';\nimport './Transaction.css';\n\nconst TransactionList = (props) => {\n\tconst [transactions, setTransactions] = useState([]);\n\n\tconst updateTransactions = (value) => {\n\t\tprops.onChange()\n\t}\n\tuseEffect(() => {\n\t\ttry{\n\t\tfetch(`${props.host}transactions`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t  \"account_id\": props.account_id,\n\t\t\t  \"from_date\": props.from_date,\n\t\t\t  \"to_date\": props.to_date\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n      \t.then(data => {setTransactions(data)});\n      }\n      catch (e) {\n      \tconsole.log(e)\n      }\n\n\t},[props.submit, props.account_id, props.host, props.from_date, props.to_date, props.update])\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"outline flex justify-center\">\n\t\t\t\t<p className=\"date transaction\">Date</p> \n\t\t\t\t<p className=\"vendor transaction\">Vender</p> \n\t\t\t\t<p className='dollar transaction'>&nbsp;&nbsp;</p>\t\n\t\t\t\t<p className=\"amount transaction\">Amount</p> \n\t\t\t\t<p className=\"status transaction\">Status</p> \n\t\t\t\t<p className=\"category transaction\">Category</p>\n\t\t\t\t<p className=\"edit transaction\">Edit</p>\n\t\t\t</div>\n\t\t\t{\n\t\t\ttransactions.map((data, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Transaction className=\"transactions\"\n\t\t\t\t\tkey={transactions[i].transaction_id}\n\t\t\t\t\ttransaction_id={transactions[i].transaction_id} \n\t\t\t\t\taccountid={transactions[i].accountid}\n\t\t\t\t\tdate = {transactions[i].date}\n\t\t\t\t\tvendor={transactions[i].vendor}\n\t\t\t\t\tamount={(Math.round(transactions[i].amount * 100) / 100).toFixed(2)}\n\t\t\t\t\tstatus={transactions[i].status}\n\t\t\t\t\tcategory={transactions[i].category}\n\t\t\t\t\thost={props.host}\n\t\t\t\t\tonChange={updateTransactions}\n\t\t\t\t\tsubmit={props.submit}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})\n\t\t\t}\n\t\t</div>\n\t\t);\n}\n\nexport default TransactionList;\n"]},"metadata":{},"sourceType":"module"}