{"ast":null,"code":"var _jsxFileName = \"/Users/adamkile/Desktop/Programming/budget/budget_frontend/src/components/AccountBalance/AccountBalance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../../Hooks/useBalance.js';\nimport './AccountBalance.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccountBalance = props => {\n  _s();\n\n  const [balance, setBalance] = useBalance(props);\n  const [balanceColor, setBalanceColor] = useState('black'); // useEffect(() => {\n  // \tif (props.account_id) {\n  // \t\ttry {\n  // \t\t\tfetch(`${props.host}sumCleared`, {\n  // \t\t\t\tmethod: 'post',\n  // \t\t\t\theaders: {'Content-Type': 'application/json'},\n  // \t\t\t\tbody: JSON.stringify({\n  // \t\t\t\t  \"account_id\": props.account_id\n  // \t\t\t\t})\n  // \t\t\t})\n  // \t\t\t\t.then(response => response.json())\n  // \t\t      \t.then(data => setBalance(data[0].sum));\n  // \t\t} catch (error) {\n  // \t\t\tconsole.error(error)\n  // \t\t} \t\t\n  // \t\tif (balance < 0) {\n  // \t\t\tsetBalanceColor('red')\n  // \t\t}else {setBalanceColor('black')}\n  // \t}\n  // },[props.account_id, balance, props.host, props.submit])\t\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: balanceColor,\n    children: [`$ ${(Math.round(balance) * 100 / 100).toFixed(2)}`, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountBalance, \"m8UE2IJ+GTDO2zi1VnD7R17BNpI=\", true);\n\n_c = AccountBalance;\nexport default AccountBalance;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountBalance\");","map":{"version":3,"sources":["/Users/adamkile/Desktop/Programming/budget/budget_frontend/src/components/AccountBalance/AccountBalance.js"],"names":["React","useState","useEffect","AccountBalance","props","balance","setBalance","useBalance","balanceColor","setBalanceColor","Math","round","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,2BAAP;AACA,OAAO,sBAAP;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,UAAU,CAACH,KAAD,CAAxC;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,OAAD,CAAhD,CAFiC,CAIjC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,sBACG;AAAG,IAAA,SAAS,EAAEO,YAAd;AAAA,eAA8B,KAAI,CAAEE,IAAI,CAACC,KAAL,CAAWN,OAAX,IAAsB,GAAvB,GAA8B,GAA/B,EAAoCO,OAApC,CAA4C,CAA5C,CAA+C,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAGA,CA/BD;;GAAMT,c;;KAAAA,c;AAiCN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../../Hooks/useBalance.js';\nimport './AccountBalance.css';\n\nconst AccountBalance = (props) => {\n\tconst [balance, setBalance] = useBalance(props)\n\tconst [balanceColor, setBalanceColor] = useState('black')\n\t\n\t// useEffect(() => {\n\t// \tif (props.account_id) {\n\t// \t\ttry {\n\t\t\t\t\n\t// \t\t\tfetch(`${props.host}sumCleared`, {\n\t// \t\t\t\tmethod: 'post',\n\t// \t\t\t\theaders: {'Content-Type': 'application/json'},\n\t// \t\t\t\tbody: JSON.stringify({\n\t// \t\t\t\t  \"account_id\": props.account_id\n\t// \t\t\t\t})\n\t// \t\t\t})\n\t// \t\t\t\t.then(response => response.json())\n\t// \t\t      \t.then(data => setBalance(data[0].sum));\n\n\t// \t\t} catch (error) {\n\t// \t\t\tconsole.error(error)\n\t// \t\t} \t\t\n\t// \t\tif (balance < 0) {\n\t// \t\t\tsetBalanceColor('red')\n\t// \t\t}else {setBalanceColor('black')}\n\t// \t}\n\n\t// },[props.account_id, balance, props.host, props.submit])\t\n\n\treturn (\n\t  \t<p className={balanceColor}>{`$ ${((Math.round(balance) * 100) / 100).toFixed(2)}`} </p>\t\n\t);\n}\n\nexport default AccountBalance;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}