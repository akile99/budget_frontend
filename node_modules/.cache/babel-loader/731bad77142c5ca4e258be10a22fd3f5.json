{"ast":null,"code":"var _jsxFileName = \"/Users/adamkile/Desktop/Programming/budget/budget_frontend/src/components/AccountBalance/AccountBalance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './AccountBalance.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccountBalance = props => {\n  _s();\n\n  const [balance, setBalance] = useState(0);\n  const [balanceColor, setBalanceColor] = useState('black');\n  useEffect(() => {\n    if (props.account_id) {\n      try {\n        fetch(`${props.host}sumCleared`, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"account_id\": props.account_id\n          })\n        }).then(response => response.json()).then(data => setBalance(data[0].sum));\n      } catch (error) {\n        console.error(error);\n      }\n\n      if (balance < 0) {\n        setBalanceColor('red');\n      } else {\n        setBalanceColor('black');\n      }\n    }\n  }, [props.account_id, balance, props.host, props.submit]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: balanceColor,\n    children: [`$ ${(Math.round(balance) * 100 / 100).toFixed(2)}`, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountBalance, \"69ixwR0hUug+UaI4V2ofvwY5N4Q=\");\n\n_c = AccountBalance;\nexport default AccountBalance;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountBalance\");","map":{"version":3,"sources":["/Users/adamkile/Desktop/Programming/budget/budget_frontend/src/components/AccountBalance/AccountBalance.js"],"names":["React","useState","useEffect","AccountBalance","props","balance","setBalance","balanceColor","setBalanceColor","account_id","fetch","host","method","headers","body","JSON","stringify","then","response","json","data","sum","error","console","submit","Math","round","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,sBAAP;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,OAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIE,KAAK,CAACK,UAAV,EAAsB;AACrB,UAAI;AAEHC,QAAAA,KAAK,CAAE,GAAEN,KAAK,CAACO,IAAK,YAAf,EAA4B;AAChCC,UAAAA,MAAM,EAAE,MADwB;AAEhCC,UAAAA,OAAO,EAAE;AAAC,4BAAgB;AAAjB,WAFuB;AAGhCC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,0BAAcZ,KAAK,CAACK;AADD,WAAf;AAH0B,SAA5B,CAAL,CAOEQ,IAPF,CAOOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPnB,EAQOF,IARP,CAQYG,IAAI,IAAId,UAAU,CAACc,IAAI,CAAC,CAAD,CAAJ,CAAQC,GAAT,CAR9B;AAUA,OAZD,CAYE,OAAOC,KAAP,EAAc;AACfC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA;;AACD,UAAIjB,OAAO,GAAG,CAAd,EAAiB;AAChBG,QAAAA,eAAe,CAAC,KAAD,CAAf;AACA,OAFD,MAEM;AAACA,QAAAA,eAAe,CAAC,OAAD,CAAf;AAAyB;AAChC;AAED,GAtBQ,EAsBP,CAACJ,KAAK,CAACK,UAAP,EAAmBJ,OAAnB,EAA4BD,KAAK,CAACO,IAAlC,EAAwCP,KAAK,CAACoB,MAA9C,CAtBO,CAAT;AAwBA,sBACG;AAAG,IAAA,SAAS,EAAEjB,YAAd;AAAA,eAA8B,KAAI,CAAEkB,IAAI,CAACC,KAAL,CAAWrB,OAAX,IAAsB,GAAvB,GAA8B,GAA/B,EAAoCsB,OAApC,CAA4C,CAA5C,CAA+C,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAGA,CA/BD;;GAAMxB,c;;KAAAA,c;AAiCN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './AccountBalance.css'\n\nconst AccountBalance = (props) => {\n\tconst [balance, setBalance] = useState(0)\n\tconst [balanceColor, setBalanceColor] = useState('black')\n\t\n\tuseEffect(() => {\n\t\tif (props.account_id) {\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tfetch(`${props.host}sumCleared`, {\n\t\t\t\t\tmethod: 'post',\n\t\t\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t  \"account_id\": props.account_id\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t\t.then(response => response.json())\n\t\t\t      \t.then(data => setBalance(data[0].sum));\n\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error)\n\t\t\t} \t\t\n\t\t\tif (balance < 0) {\n\t\t\t\tsetBalanceColor('red')\n\t\t\t}else {setBalanceColor('black')}\n\t\t}\n\n\t},[props.account_id, balance, props.host, props.submit])\t\n\n\treturn (\n\t  \t<p className={balanceColor}>{`$ ${((Math.round(balance) * 100) / 100).toFixed(2)}`} </p>\t\n\t);\n}\n\nexport default AccountBalance;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}