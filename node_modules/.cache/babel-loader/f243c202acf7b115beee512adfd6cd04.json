{"ast":null,"code":"var _jsxFileName = \"/Users/adamkile/Desktop/Programming/budget/budget_frontend/src/components/AccountBalance/AccountPending.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useBalance from '../../Hooks/useBalance.js';\nimport './AccountBalance.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccountPending = props => {\n  _s();\n\n  const address = 'sumPending';\n  const [pendingBalance, pendingColor] = useBalance(props.account_id, props.host, address, props.submit);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: pendingColor,\n    children: [`$ ${(Math.round(pendingBalance) * 100 / 100).toFixed(2)}`, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountPending, \"ukJKndxtEWxkypGhdpsjHjy4VNw=\", false, function () {\n  return [useBalance];\n});\n\n_c = AccountPending;\nexport default AccountPending;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountPending\");","map":{"version":3,"sources":["/Users/adamkile/Desktop/Programming/budget/budget_frontend/src/components/AccountBalance/AccountPending.js"],"names":["React","useState","useEffect","useBalance","AccountPending","props","address","pendingBalance","pendingColor","account_id","host","submit","Math","round","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAO,sBAAP;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAMC,OAAO,GAAG,YAAhB;AACA,QAAM,CAACC,cAAD,EAAiBC,YAAjB,IAAiCL,UAAU,CAChDE,KAAK,CAACI,UAD0C,EAC9BJ,KAAK,CAACK,IADwB,EAClBJ,OADkB,EACTD,KAAK,CAACM,MADG,CAAjD;AAGA,sBACG;AAAG,IAAA,SAAS,EAAEH,YAAd;AAAA,eAA8B,KAAI,CAAEI,IAAI,CAACC,KAAL,CAAWN,cAAX,IAA6B,GAA9B,GAAqC,GAAtC,EAA2CO,OAA3C,CAAmD,CAAnD,CAAsD,EAAxF;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAGA,CARD;;GAAMV,c;UAEkCD,U;;;KAFlCC,c;AAUN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useBalance from '../../Hooks/useBalance.js';\nimport './AccountBalance.css'\n\nconst AccountPending = (props) => {\n\tconst address = 'sumPending';\n\tconst [pendingBalance, pendingColor] = useBalance(\n\t\tprops.account_id, props.host, address, props.submit);\n\n\treturn (\n\t  \t<p className={pendingColor}>{`$ ${((Math.round(pendingBalance) * 100) / 100).toFixed(2)}`} </p>\n\t);\n}\n\nexport default AccountPending;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}