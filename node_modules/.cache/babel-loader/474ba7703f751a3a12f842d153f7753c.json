{"ast":null,"code":"var _jsxFileName = \"/Users/adamkile/Desktop/Programming/budget/budget_frontend/src/components/AccountBalance/AccountBalance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useBalance from '../../Hooks/useBalance.js';\nimport './AccountBalance.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccountBalance = props => {\n  _s();\n\n  const [balance, balanceColor] = useBalance(props.account_id, props.host, props.submit); // const [balanceColor, setBalanceColor] = useState('black')\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: balanceColor,\n    children: [`$ ${(Math.round(balance) * 100 / 100).toFixed(2)}`, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountBalance, \"9FFbrqdnCWcisW4na+0Kn2XXCoE=\", false, function () {\n  return [useBalance];\n});\n\n_c = AccountBalance;\nexport default AccountBalance;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountBalance\");","map":{"version":3,"sources":["/Users/adamkile/Desktop/Programming/budget/budget_frontend/src/components/AccountBalance/AccountBalance.js"],"names":["React","useState","useBalance","AccountBalance","props","balance","balanceColor","account_id","host","submit","Math","round","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAO,sBAAP;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,YAAV,IAA0BJ,UAAU,CAACE,KAAK,CAACG,UAAP,EAAmBH,KAAK,CAACI,IAAzB,EAA+BJ,KAAK,CAACK,MAArC,CAA1C,CADiC,CAEjC;;AAEA,sBACG;AAAG,IAAA,SAAS,EAAEH,YAAd;AAAA,eAA8B,KAAI,CAAEI,IAAI,CAACC,KAAL,CAAWN,OAAX,IAAsB,GAAvB,GAA8B,GAA/B,EAAoCO,OAApC,CAA4C,CAA5C,CAA+C,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAGA,CAPD;;GAAMT,c;UAC2BD,U;;;KAD3BC,c;AASN,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport useBalance from '../../Hooks/useBalance.js';\nimport './AccountBalance.css';\n\nconst AccountBalance = (props) => {\n\tconst [balance, balanceColor] = useBalance(props.account_id, props.host, props.submit);\n\t// const [balanceColor, setBalanceColor] = useState('black')\n\n\treturn (\n\t  \t<p className={balanceColor}>{`$ ${((Math.round(balance) * 100) / 100).toFixed(2)}`} </p>\t\n\t);\n}\n\nexport default AccountBalance;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}