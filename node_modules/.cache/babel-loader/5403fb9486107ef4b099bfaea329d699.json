{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamkile/Desktop/budgetapp/budget/src/components/InputTransaction/InputTransaction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\n\nconst InputTransaction = props => {\n  _s();\n\n  const [date, setDate] = useState('');\n  const [vendor, setVendor] = useState('Vendor');\n  const [amount, setAmount] = useState('');\n  const [status, setStatus] = useState('Pending');\n  const [category, setCategory] = useState('');\n  const {\n    register,\n    handleSubmit,\n    reset,\n    errors\n  } = useForm();\n\n  const onDateChange = event => {\n    setDate(event.target.value);\n  };\n\n  const onVendorChange = event => {\n    setVendor(event.target.value);\n  };\n\n  const onAmountChange = event => {\n    setAmount(event.target.value);\n  };\n\n  const onStatusChange = event => {\n    status === 'Pending' ? setStatus('Cleared') : setStatus('Pending');\n  };\n\n  const onCategoryChange = event => {\n    setCategory(event.target.value);\n  };\n\n  const onCommitTransaction = (data, e) => {\n    fetch(props.host + '/insert', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"date\": date,\n        \"vendor\": vendor,\n        \"category\": category,\n        \"status\": status,\n        \"amount\": amount\n      })\n    }).then(response => response.json()).catch(console.log);\n    props.setCount(!props.count);\n    e.target.reset();\n    setVendor('Vendor');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onCommitTransaction: handleSubmit(onCommitTransaction),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"date\",\n      onChange: onDateChange,\n      ref: register({\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }, this), errors.date && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"vendor\",\n      placeholder: \"Vendor\",\n      onChange: onVendorChange,\n      ref: register({\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }, this), error.vendor && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        display: \"block\",\n        marginTop: 20\n      },\n      type: \"reset\",\n      value: \"Standard Reset Field Values\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        display: \"block\",\n        marginTop: 20\n      },\n      type: \"button\",\n      onClick: () => reset(),\n      value: \"Custom Reset Field Values & Errors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n};\n\n_s(InputTransaction, \"j01t4OoS3MwDnnwPovHnswrtiPw=\", false, function () {\n  return [useForm];\n});\n\n_c = InputTransaction;\nexport default InputTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputTransaction\");","map":{"version":3,"sources":["/Users/adamkile/Desktop/budgetapp/budget/src/components/InputTransaction/InputTransaction.js"],"names":["React","useState","useForm","InputTransaction","props","date","setDate","vendor","setVendor","amount","setAmount","status","setStatus","category","setCategory","register","handleSubmit","reset","errors","onDateChange","event","target","value","onVendorChange","onAmountChange","onStatusChange","onCategoryChange","onCommitTransaction","data","e","fetch","host","method","headers","body","JSON","stringify","then","response","json","catch","console","log","setCount","count","required","error","display","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\n\nconst InputTransaction = (props) => {\n\tconst [date, setDate] = useState('')\n\tconst [vendor, setVendor] = useState('Vendor')\n\tconst [amount, setAmount] =\tuseState('')\n\tconst [status, setStatus] = useState('Pending')\n\tconst [category, setCategory] = useState('')\n\n\tconst { register, handleSubmit, reset, errors } = useForm();\n\n\tconst onDateChange = (event) => {\n\t\tsetDate(event.target.value)\n\t}\n\n\tconst onVendorChange = (event) => {\n\t\tsetVendor(event.target.value)\n\t}\n\n\tconst onAmountChange = (event) => {\n\t\tsetAmount(event.target.value)\n\t}\n\n\tconst onStatusChange = (event) => {\n\t\tstatus === 'Pending' ? setStatus('Cleared') : setStatus('Pending')\n\t}\n\n\tconst onCategoryChange = (event) => {\n\t\tsetCategory(event.target.value)\n\t}\n\n\tconst onCommitTransaction = (data, e) => {\n\t\tfetch(props.host+'/insert', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t  \"date\": date,\n\t\t\t  \"vendor\": vendor,\n\t\t\t  \"category\": category,\n\t\t\t  \"status\": status,\n\t\t\t  \"amount\": amount\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.catch(console.log)\n\t\tprops.setCount(!props.count)\n\t\te.target.reset()\n\t\tsetVendor('Vendor')\n\t}\n\n\treturn (\n\t\t<form onCommitTransaction={handleSubmit(onCommitTransaction)}>\n\t      <input \n\t      \ttype='date' \n\t      \tname=\"date\"\n\t      \tonChange={onDateChange}\n\t      \tref={register({ required: true })} />\n\t      {errors.date && <p>This is required</p>}\n\t      <input \n\t      \ttype=\"text\" \n\t      \tname=\"vendor\" \n\t      \tplaceholder=\"Vendor\"\n\t      \tonChange={onVendorChange}\n\t      \tref={register({ required: true})} />\n\t      {error.vendor && <p>This is required</p>}\n\n\t      <input type=\"submit\" />\n\t      <input\n\t        style={{ display: \"block\", marginTop: 20 }}\n\t        type=\"reset\"\n\t        value=\"Standard Reset Field Values\"\n\t      />\n\t      <input\n\t        style={{ display: \"block\", marginTop: 20 }}\n\t        type=\"button\"\n\t        onClick={() => reset()}\n\t        value=\"Custom Reset Field Values & Errors\"\n\t      />\n\t      \t\t\t{/*<div className='center'>\n\t\t\t\t<div className='form center pa4 br3 shadow-5'>\n\t\t\t\t<input \n\t\t\t\t\tclassName= 'f4 pa2 w-70 center' \n\t\t\t\t\ttype='date' \n\t\t\t\t\tid='date'\n\t\t\t\t\tname='date'\n\t\t\t\t\tonChange={onDateChange}\n\t\t\t\t/>\n\t\t\t\t<input \n\t\t\t\t\tclassName= 'f4 pa2 w-70 center' \n\t\t\t\t\ttype= 'text' \n\t\t\t\t\tplaceholder={vendor}\n\t\t\t\t\tid='Vendor'\n\t\t\t\t\tname='Vendor'\n\t\t\t\t\tonChange={onVendorChange}\n\t\t\t\t/>\n\t\t\t\t<input \n\t\t\t\t\tclassName= 'f4 pa2 w-70 center' \n\t\t\t\t\ttype= 'double' \n\t\t\t\t\tplaceholder=\"Amount\"\n\t\t\t\t\tid='Amount'\n\t\t\t\t\tname='Amount'\n\t\t\t\t\tonChange={onAmountChange}\n\t\t\t\t/>\n\t\t\t\t<button \n\t\t\t\t\tclassName= 'w-30 link ph3 pv2 dib bg-white' \n\t\t\t\t\tid='CommitTransactionBTN'\n\t\t\t\t\tonClick={onStatusChange}\n\t\t\t\t>\n\t\t\t\t{status}\n\t\t\t\t</button>\n\n\t\t\t\t<input \n\t\t\t\t\tclassName= 'f4 pa2 w-70 center' \n\t\t\t\t\ttype= 'tex' \n\t\t\t\t\tplaceholder=\"Category\"\n\t\t\t\t\tid='Category'\n\t\t\t\t\tname='Category'\n\t\t\t\t\tonChange={onCategoryChange}\n\t\t\t\t/>\n\t\t\t\t<button \n\t\t\t\t\tclassName= 'w-30 grow f4 link ph3 pv2 dib white bg-light-blue' \n\t\t\t\t\tid='CommitTransactionBTN'\n\t\t\t\t\tonClick={onCommitTransaction}\n\t\t\t\t>\n\t\t\t\tCommit\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div> */}\n\t    </form>\n\n\t);\n}\n\nexport default InputTransaction;"]},"metadata":{},"sourceType":"module"}